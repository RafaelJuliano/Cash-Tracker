{
  "version": 3,
  "sources": ["../../../../../node_modules/mongodb/src/error.ts", "../../../../../node_modules/bson/src/parser/utils.ts", "../../../../../node_modules/bson/src/constants.ts", "../../../../../node_modules/bson/src/error.ts", "../../../../../node_modules/bson/src/utils/node_byte_utils.ts", "../../../../../node_modules/bson/src/utils/web_byte_utils.ts", "../../../../../node_modules/bson/src/utils/byte_utils.ts", "../../../../../node_modules/bson/src/bson_value.ts", "../../../../../node_modules/bson/src/binary.ts", "../../../../../node_modules/bson/src/code.ts", "../../../../../node_modules/bson/src/db_ref.ts", "../../../../../node_modules/bson/src/long.ts", "../../../../../node_modules/bson/src/decimal128.ts", "../../../../../node_modules/bson/src/double.ts", "../../../../../node_modules/bson/src/int_32.ts", "../../../../../node_modules/bson/src/max_key.ts", "../../../../../node_modules/bson/src/min_key.ts", "../../../../../node_modules/bson/src/objectid.ts", "../../../../../node_modules/bson/src/parser/calculate_size.ts", "../../../../../node_modules/bson/src/regexp.ts", "../../../../../node_modules/bson/src/symbol.ts", "../../../../../node_modules/bson/src/timestamp.ts", "../../../../../node_modules/bson/src/validate_utf8.ts", "../../../../../node_modules/bson/src/parser/deserializer.ts", "../../../../../node_modules/bson/src/parser/serializer.ts", "../../../../../node_modules/bson/src/extended_json.ts", "../../../../../node_modules/bson/src/bson.ts", "../../../../../node_modules/mongodb/src/bson.ts", "../../../../../node_modules/mongodb/src/cmap/wire_protocol/constants.ts", "../../../../../node_modules/mongodb/src/constants.ts", "../../../../../node_modules/mongodb/src/read_concern.ts", "../../../../../node_modules/mongodb/src/read_preference.ts", "../../../../../node_modules/mongodb/src/sdam/common.ts", "../../../../../node_modules/mongodb/src/write_concern.ts", "../../../../../node_modules/mongodb/src/utils.ts", "../../../../../node_modules/mongodb/src/explain.ts", "../../../../../node_modules/mongodb/src/sdam/server_selection.ts", "../../../../../node_modules/mongodb/src/operations/operation.ts", "../../../../../node_modules/mongodb/src/operations/command.ts", "../../../../../node_modules/mongodb/src/operations/add_user.ts", "../../../../../node_modules/mongodb/src/operations/execute_operation.ts", "../../../../../node_modules/mongodb/src/operations/list_databases.ts", "../../../../../node_modules/mongodb/src/operations/remove_user.ts", "../../../../../node_modules/mongodb/src/operations/run_command.ts", "../../../../../node_modules/mongodb/src/operations/validate_collection.ts", "../../../../../node_modules/mongodb/src/admin.ts", "../../../../../node_modules/mongodb/src/operations/delete.ts", "../../../../../node_modules/mongodb/src/operations/bulk_write.ts", "../../../../../node_modules/mongodb/src/operations/common_functions.ts", "../../../../../node_modules/mongodb/src/operations/insert.ts", "../../../../../node_modules/mongodb/src/operations/update.ts", "../../../../../node_modules/mongodb/src/bulk/common.ts", "../../../../../node_modules/mongodb/src/bulk/ordered.ts", "../../../../../node_modules/mongodb/src/bulk/unordered.ts", "../../../../../node_modules/mongodb/src/operations/aggregate.ts", "../../../../../node_modules/mongodb/src/mongo_types.ts", "../../../../../node_modules/mongodb/src/operations/get_more.ts", "../../../../../node_modules/mongodb/src/operations/kill_cursors.ts", "../../../../../node_modules/mongodb/src/cmap/metrics.ts", "../../../../../node_modules/mongodb/src/sdam/server_description.ts", "../../../../../node_modules/mongodb/src/sdam/topology_description.ts", "../../../../../node_modules/mongodb/src/cmap/wire_protocol/shared.ts", "../../../../../node_modules/mongodb/src/transactions.ts", "../../../../../node_modules/mongodb/src/sessions.ts", "../../../../../node_modules/mongodb/src/cursor/abstract_cursor.ts", "../../../../../node_modules/mongodb/src/cursor/aggregation_cursor.ts", "../../../../../node_modules/mongodb/src/operations/count.ts", "../../../../../node_modules/mongodb/src/sort.ts", "../../../../../node_modules/mongodb/src/operations/find.ts", "../../../../../node_modules/mongodb/src/cursor/find_cursor.ts", "../../../../../node_modules/mongodb/src/operations/indexes.ts", "../../../../../node_modules/mongodb/src/cursor/list_indexes_cursor.ts", "../../../../../node_modules/mongodb/src/cursor/list_search_indexes_cursor.ts", "../../../../../node_modules/mongodb/src/operations/count_documents.ts", "../../../../../node_modules/mongodb/src/operations/distinct.ts", "../../../../../node_modules/mongodb/src/operations/drop.ts", "../../../../../node_modules/mongodb/src/operations/estimated_document_count.ts", "../../../../../node_modules/mongodb/src/operations/find_and_modify.ts", "../../../../../node_modules/mongodb/src/operations/is_capped.ts", "../../../../../node_modules/mongodb/src/operations/options_operation.ts", "../../../../../node_modules/mongodb/src/operations/rename.ts", "../../../../../node_modules/mongodb/src/operations/search_indexes/create.ts", "../../../../../node_modules/mongodb/src/operations/search_indexes/drop.ts", "../../../../../node_modules/mongodb/src/operations/search_indexes/update.ts", "../../../../../node_modules/mongodb/src/operations/stats.ts", "../../../../../node_modules/mongodb/src/collection.ts", "../../../../../node_modules/mongodb/src/cursor/change_stream_cursor.ts", "../../../../../node_modules/mongodb/src/operations/list_collections.ts", "../../../../../node_modules/mongodb/src/cursor/list_collections_cursor.ts", "../../../../../node_modules/mongodb/src/cursor/run_command_cursor.ts", "../../../../../node_modules/mongodb/src/operations/collections.ts", "../../../../../node_modules/mongodb/src/operations/create_collection.ts", "../../../../../node_modules/mongodb/src/operations/profiling_level.ts", "../../../../../node_modules/mongodb/src/operations/set_profiling_level.ts", "../../../../../node_modules/mongodb/src/db.ts", "../../../../../node_modules/memory-pager/index.js", "../../../../../node_modules/sparse-bitfield/index.js", "../../../../../node_modules/saslprep/lib/memory-code-points.js", "../../../../../node_modules/saslprep/index.js", "../../../../../node_modules/mongodb/src/deps.ts", "../../../../../node_modules/mongodb/src/cmap/auth/auth_provider.ts", "../../../../../node_modules/mongodb/src/cmap/auth/gssapi.ts", "../../../../../node_modules/mongodb/src/cmap/auth/providers.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongo_credentials.ts", "../../../../../node_modules/mongodb-connection-string-url/node_modules/webidl-conversions/lib/index.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/utils.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/tr46/lib/regexes.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/tr46/lib/mappingTable.json", "../../../../../node_modules/mongodb-connection-string-url/node_modules/tr46/lib/statusMapping.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/tr46/index.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/infra.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/encoding.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/percent-encoding.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/url-state-machine.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/urlencoded.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/Function.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URLSearchParams-impl.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URLSearchParams.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URL-impl.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URL.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/webidl2js-wrapper.js", "../../../../../node_modules/mongodb-connection-string-url/node_modules/whatwg-url/index.js", "../../../../../node_modules/mongodb-connection-string-url/src/redact.ts", "../../../../../node_modules/mongodb-connection-string-url/src/index.ts", "../../../../../node_modules/mongodb/package.json", "../../../../../node_modules/mongodb/src/cmap/handshake/client_metadata.ts", "../../../../../node_modules/mongodb/src/cmap/wire_protocol/compression.ts", "../../../../../node_modules/mongodb/src/encrypter.ts", "../../../../../node_modules/mongodb/src/mongo_logger.ts", "../../../../../node_modules/mongodb/src/connection_string.ts", "../../../../../node_modules/mongodb/src/sdam/events.ts", "../../../../../node_modules/mongodb/src/cmap/commands.ts", "../../../../../node_modules/mongodb/src/cmap/command_monitoring_events.ts", "../../../../../node_modules/mongodb/src/cmap/message_stream.ts", "../../../../../node_modules/mongodb/src/cmap/stream_description.ts", "../../../../../node_modules/mongodb/src/cmap/connection.ts", "../../../../../node_modules/ip/lib/ip.js", "../../../../../node_modules/smart-buffer/src/utils.ts", "../../../../../node_modules/smart-buffer/src/smartbuffer.ts", "../../../../../node_modules/socks/src/common/constants.ts", "../../../../../node_modules/socks/src/common/util.ts", "../../../../../node_modules/socks/src/common/helpers.ts", "../../../../../node_modules/socks/src/common/receivebuffer.ts", "../../../../../node_modules/socks/src/client/socksclient.ts", "../../../../../node_modules/socks/src/index.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongocr.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_aws.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/service_workflow.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/aws_service_workflow.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/cache.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_token_cache.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_service_workflow.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/callback_lock_cache.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_entry_cache.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc/callback_workflow.ts", "../../../../../node_modules/mongodb/src/cmap/auth/mongodb_oidc.ts", "../../../../../node_modules/mongodb/src/cmap/auth/plain.ts", "../../../../../node_modules/mongodb/src/cmap/auth/scram.ts", "../../../../../node_modules/mongodb/src/cmap/auth/x509.ts", "../../../../../node_modules/mongodb/src/cmap/connect.ts", "../../../../../node_modules/mongodb/src/cmap/connection_pool_events.ts", "../../../../../node_modules/mongodb/src/cmap/errors.ts", "../../../../../node_modules/mongodb/src/cmap/connection_pool.ts", "../../../../../node_modules/mongodb/src/sdam/monitor.ts", "../../../../../node_modules/mongodb/src/sdam/server.ts", "../../../../../node_modules/mongodb/src/sdam/srv_polling.ts", "../../../../../node_modules/mongodb/src/sdam/topology.ts", "../../../../../node_modules/mongodb/src/mongo_client.ts", "../../../../../node_modules/mongodb/src/change_stream.ts", "../../../../../node_modules/mongodb/src/gridfs/download.ts", "../../../../../node_modules/mongodb/src/gridfs/upload.ts", "../../../../../node_modules/mongodb/src/gridfs/index.ts", "../../../../../node_modules/mongodb/src/index.ts", "../../../../../src/handlers/hello-world/handler.ts", "../../../../../../../packages/common/src/lambda-utils/response-utils.ts", "../../../../../src/providers/mongoDbProvider.ts"],
  "sourcesContent": ["import type { Document } from './bson';\nimport type { TopologyVersion } from './sdam/server_description';\nimport type { TopologyDescription } from './sdam/topology_description';\n\n/** @public */\nexport type AnyError = MongoError | Error;\n\n/** @internal */\nconst kErrorLabels = Symbol('errorLabels');\n\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a writable primary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexport const LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = new RegExp('not master', 'i');\n\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a primary or secondary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexport const LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = new RegExp(\n  'not master or secondary',\n  'i'\n);\n\n/**\n * @internal\n * The error message from the server that indicates the node is recovering\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexport const NODE_IS_RECOVERING_ERROR_MESSAGE = new RegExp('node is recovering', 'i');\n\n/** @internal MongoDB Error Codes */\nexport const MONGODB_ERROR_CODES = Object.freeze({\n  HostUnreachable: 6,\n  HostNotFound: 7,\n  NetworkTimeout: 89,\n  ShutdownInProgress: 91,\n  PrimarySteppedDown: 189,\n  ExceededTimeLimit: 262,\n  SocketException: 9001,\n  NotWritablePrimary: 10107,\n  InterruptedAtShutdown: 11600,\n  InterruptedDueToReplStateChange: 11602,\n  NotPrimaryNoSecondaryOk: 13435,\n  NotPrimaryOrSecondary: 13436,\n  StaleShardVersion: 63,\n  StaleEpoch: 150,\n  StaleConfig: 13388,\n  RetryChangeStream: 234,\n  FailedToSatisfyReadPreference: 133,\n  CursorNotFound: 43,\n  LegacyNotPrimary: 10058,\n  WriteConcernFailed: 64,\n  NamespaceNotFound: 26,\n  IllegalOperation: 20,\n  MaxTimeMSExpired: 50,\n  UnknownReplWriteConcern: 79,\n  UnsatisfiableWriteConcern: 100,\n  Reauthenticate: 391\n} as const);\n\n// From spec@https://github.com/mongodb/specifications/blob/f93d78191f3db2898a59013a7ed5650352ef6da8/source/change-streams/change-streams.rst#resumable-error\nexport const GET_MORE_RESUMABLE_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.ExceededTimeLimit,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary,\n  MONGODB_ERROR_CODES.StaleShardVersion,\n  MONGODB_ERROR_CODES.StaleEpoch,\n  MONGODB_ERROR_CODES.StaleConfig,\n  MONGODB_ERROR_CODES.RetryChangeStream,\n  MONGODB_ERROR_CODES.FailedToSatisfyReadPreference,\n  MONGODB_ERROR_CODES.CursorNotFound\n]);\n\n/** @public */\nexport const MongoErrorLabel = Object.freeze({\n  RetryableWriteError: 'RetryableWriteError',\n  TransientTransactionError: 'TransientTransactionError',\n  UnknownTransactionCommitResult: 'UnknownTransactionCommitResult',\n  ResumableChangeStreamError: 'ResumableChangeStreamError',\n  HandshakeError: 'HandshakeError',\n  ResetPool: 'ResetPool',\n  InterruptInUseConnections: 'InterruptInUseConnections',\n  NoWritesPerformed: 'NoWritesPerformed'\n} as const);\n\n/** @public */\nexport type MongoErrorLabel = (typeof MongoErrorLabel)[keyof typeof MongoErrorLabel];\n\n/** @public */\nexport interface ErrorDescription extends Document {\n  message?: string;\n  errmsg?: string;\n  $err?: string;\n  errorLabels?: string[];\n  errInfo?: Document;\n}\n\nfunction isAggregateError(e: Error): e is Error & { errors: Error[] } {\n  return 'errors' in e && Array.isArray(e.errors);\n}\n\n/**\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error, it uses the constructor with a string argument\n */\nexport class MongoError extends Error {\n  /** @internal */\n  [kErrorLabels]: Set<string>;\n  /**\n   * This is a number in MongoServerError and a string in MongoDriverError\n   * @privateRemarks\n   * Define the type override on the subclasses when we can use the override keyword\n   */\n  code?: number | string;\n  topologyVersion?: TopologyVersion;\n  connectionGeneration?: number;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  cause?: Error; // depending on the node version, this may or may not exist on the base\n\n  constructor(message: string | Error) {\n    super(MongoError.buildErrorMessage(message));\n    if (message instanceof Error) {\n      this.cause = message;\n    }\n\n    this[kErrorLabels] = new Set();\n  }\n\n  /** @internal */\n  private static buildErrorMessage(e: Error | string): string {\n    if (typeof e === 'string') {\n      return e;\n    }\n    if (isAggregateError(e) && e.message.length === 0) {\n      return e.errors.length === 0\n        ? 'AggregateError has an empty errors array. Please check the `cause` property for more information.'\n        : e.errors.map(({ message }) => message).join(', ');\n    }\n\n    return e.message;\n  }\n\n  override get name(): string {\n    return 'MongoError';\n  }\n\n  /** Legacy name for server error responses */\n  get errmsg(): string {\n    return this.message;\n  }\n\n  /**\n   * Checks the error to see if it has an error label\n   *\n   * @param label - The error label to check for\n   * @returns returns true if the error has the provided error label\n   */\n  hasErrorLabel(label: string): boolean {\n    return this[kErrorLabels].has(label);\n  }\n\n  addErrorLabel(label: string): void {\n    this[kErrorLabels].add(label);\n  }\n\n  get errorLabels(): string[] {\n    return Array.from(this[kErrorLabels]);\n  }\n}\n\n/**\n * An error coming from the mongo server\n *\n * @public\n * @category Error\n */\nexport class MongoServerError extends MongoError {\n  codeName?: string;\n  writeConcernError?: Document;\n  errInfo?: Document;\n  ok?: number;\n  [key: string]: any;\n\n  constructor(message: ErrorDescription) {\n    super(message.message || message.errmsg || message.$err || 'n/a');\n    if (message.errorLabels) {\n      this[kErrorLabels] = new Set(message.errorLabels);\n    }\n\n    for (const name in message) {\n      if (name !== 'errorLabels' && name !== 'errmsg' && name !== 'message')\n        this[name] = message[name];\n    }\n  }\n\n  override get name(): string {\n    return 'MongoServerError';\n  }\n}\n\n/**\n * An error generated by the driver\n *\n * @public\n * @category Error\n */\nexport class MongoDriverError extends MongoError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoDriverError';\n  }\n}\n\n/**\n * An error generated when the driver API is used incorrectly\n *\n * @privateRemarks\n * Should **never** be directly instantiated\n *\n * @public\n * @category Error\n */\n\nexport class MongoAPIError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoAPIError';\n  }\n}\n\n/**\n * An error generated when the driver encounters unexpected input\n * or reaches an unexpected/invalid internal state\n *\n * @privateRemarks\n * Should **never** be directly instantiated.\n *\n * @public\n * @category Error\n */\nexport class MongoRuntimeError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoRuntimeError';\n  }\n}\n\n/**\n * An error generated when a batch command is re-executed after one of the commands in the batch\n * has failed\n *\n * @public\n * @category Error\n */\nexport class MongoBatchReExecutionError extends MongoAPIError {\n  constructor(message = 'This batch has already been executed, create new batch to execute') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoBatchReExecutionError';\n  }\n}\n\n/**\n * An error generated when the driver fails to decompress\n * data received from the server.\n *\n * @public\n * @category Error\n */\nexport class MongoDecompressionError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoDecompressionError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient\n * that has not yet successfully called the \"connect\" method\n *\n * @public\n * @category Error\n */\nexport class MongoNotConnectedError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoNotConnectedError';\n  }\n}\n\n/**\n * An error generated when the user makes a mistake in the usage of transactions.\n * (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @public\n * @category Error\n */\nexport class MongoTransactionError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTransactionError';\n  }\n}\n\n/**\n * An error generated when the user attempts to operate\n * on a session that has expired or has been closed.\n *\n * @public\n * @category Error\n */\nexport class MongoExpiredSessionError extends MongoAPIError {\n  constructor(message = 'Cannot use a session that has ended') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoExpiredSessionError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via Kerberos, but fails to connect to the Kerberos client.\n *\n * @public\n * @category Error\n */\nexport class MongoKerberosError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoKerberosError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via AWS, but fails\n *\n * @public\n * @category Error\n */\nexport class MongoAWSError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoAWSError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via Azure, but fails.\n *\n * @public\n * @category Error\n */\nexport class MongoAzureError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoAzureError';\n  }\n}\n\n/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoChangeStreamError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoChangeStreamError';\n  }\n}\n\n/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @public\n * @category Error\n */\nexport class MongoTailableCursorError extends MongoAPIError {\n  constructor(message = 'Tailable cursor does not support this operation') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTailableCursorError';\n  }\n}\n\n/** An error generated when a GridFSStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSStreamError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoGridFSStreamError';\n  }\n}\n\n/**\n * An error generated when a malformed or invalid chunk is\n * encountered when reading from a GridFSStream.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSChunkError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoGridFSChunkError';\n  }\n}\n\n/**\n * An error generated when a **parsable** unexpected response comes from the server.\n * This is generally an error where the driver in a state expecting a certain behavior to occur in\n * the next message from MongoDB but it receives something else.\n * This error **does not** represent an issue with wire message formatting.\n *\n * #### Example\n * When an operation fails, it is the driver's job to retry it. It must perform serverSelection\n * again to make sure that it attempts the operation against a server in a good state. If server\n * selection returns a server that does not support retryable operations, this error is used.\n * This scenario is unlikely as retryable support would also have been determined on the first attempt\n * but it is possible the state change could report a selectable server that does not support retries.\n *\n * @public\n * @category Error\n */\nexport class MongoUnexpectedServerResponseError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoUnexpectedServerResponseError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to add options to a cursor that has already been\n * initialized\n *\n * @public\n * @category Error\n */\nexport class MongoCursorInUseError extends MongoAPIError {\n  constructor(message = 'Cursor is already initialized') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoCursorInUseError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate\n * on a closed/closing server.\n *\n * @public\n * @category Error\n */\nexport class MongoServerClosedError extends MongoAPIError {\n  constructor(message = 'Server is closed') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoServerClosedError';\n  }\n}\n\n/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @public\n * @category Error\n */\nexport class MongoCursorExhaustedError extends MongoAPIError {\n  constructor(message?: string) {\n    super(message || 'Cursor is exhausted');\n  }\n\n  override get name(): string {\n    return 'MongoCursorExhaustedError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate on a\n * dropped, or otherwise unavailable, database.\n *\n * @public\n * @category Error\n */\nexport class MongoTopologyClosedError extends MongoAPIError {\n  constructor(message = 'Topology is closed') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTopologyClosedError';\n  }\n}\n\n/** @internal */\nconst kBeforeHandshake = Symbol('beforeHandshake');\nexport function isNetworkErrorBeforeHandshake(err: MongoNetworkError): boolean {\n  return err[kBeforeHandshake] === true;\n}\n\n/** @public */\nexport interface MongoNetworkErrorOptions {\n  /** Indicates the timeout happened before a connection handshake completed */\n  beforeHandshake: boolean;\n}\n\n/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n * @public\n * @category Error\n */\nexport class MongoNetworkError extends MongoError {\n  /** @internal */\n  [kBeforeHandshake]?: boolean;\n\n  constructor(message: string | Error, options?: MongoNetworkErrorOptions) {\n    super(message);\n\n    if (options && typeof options.beforeHandshake === 'boolean') {\n      this[kBeforeHandshake] = options.beforeHandshake;\n    }\n  }\n\n  override get name(): string {\n    return 'MongoNetworkError';\n  }\n}\n\n/**\n * An error indicating a network timeout occurred\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error with an instanceof check\n */\nexport class MongoNetworkTimeoutError extends MongoNetworkError {\n  constructor(message: string, options?: MongoNetworkErrorOptions) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoNetworkTimeoutError';\n  }\n}\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n * @public\n * @category Error\n */\nexport class MongoParseError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoParseError';\n  }\n}\n\n/**\n * An error generated when the user supplies malformed or unexpected arguments\n * or when a required argument or field is not provided.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoInvalidArgumentError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoInvalidArgumentError';\n  }\n}\n\n/**\n * An error generated when a feature that is not enabled or allowed for the current server\n * configuration is used\n *\n *\n * @public\n * @category Error\n */\nexport class MongoCompatibilityError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoCompatibilityError';\n  }\n}\n\n/**\n * An error generated when the user fails to provide authentication credentials before attempting\n * to connect to a mongo server instance.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoMissingCredentialsError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoMissingCredentialsError';\n  }\n}\n\n/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @public\n * @category Error\n */\nexport class MongoMissingDependencyError extends MongoAPIError {\n  constructor(message: string, { cause }: { cause?: Error } = {}) {\n    super(message);\n    if (cause) this.cause = cause;\n  }\n\n  override get name(): string {\n    return 'MongoMissingDependencyError';\n  }\n}\n/**\n * An error signifying a general system issue\n * @public\n * @category Error\n */\nexport class MongoSystemError extends MongoError {\n  /** An optional reason context, such as an error saved during flow of monitoring and selecting servers */\n  reason?: TopologyDescription;\n\n  constructor(message: string, reason: TopologyDescription) {\n    if (reason && reason.error) {\n      super(reason.error.message || reason.error);\n    } else {\n      super(message);\n    }\n\n    if (reason) {\n      this.reason = reason;\n    }\n\n    this.code = reason.error?.code;\n  }\n\n  override get name(): string {\n    return 'MongoSystemError';\n  }\n}\n\n/**\n * An error signifying a client-side server selection error\n * @public\n * @category Error\n */\nexport class MongoServerSelectionError extends MongoSystemError {\n  constructor(message: string, reason: TopologyDescription) {\n    super(message, reason);\n  }\n\n  override get name(): string {\n    return 'MongoServerSelectionError';\n  }\n}\n\nfunction makeWriteConcernResultObject(input: any) {\n  const output = Object.assign({}, input);\n\n  if (output.ok === 0) {\n    output.ok = 1;\n    delete output.errmsg;\n    delete output.code;\n    delete output.codeName;\n  }\n\n  return output;\n}\n\n/**\n * An error thrown when the server reports a writeConcernError\n * @public\n * @category Error\n */\nexport class MongoWriteConcernError extends MongoServerError {\n  /** The result document (provided if ok: 1) */\n  result?: Document;\n\n  constructor(message: ErrorDescription, result?: Document) {\n    if (result && Array.isArray(result.errorLabels)) {\n      message.errorLabels = result.errorLabels;\n    }\n\n    super(message);\n    this.errInfo = message.errInfo;\n\n    if (result != null) {\n      this.result = makeWriteConcernResultObject(result);\n    }\n  }\n\n  override get name(): string {\n    return 'MongoWriteConcernError';\n  }\n}\n\n// https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.rst#retryable-error\nconst RETRYABLE_READ_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary\n]);\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_WRITE_ERROR_CODES = new Set<number>([\n  ...RETRYABLE_READ_ERROR_CODES,\n  MONGODB_ERROR_CODES.ExceededTimeLimit\n]);\n\nexport function needsRetryableWriteLabel(error: Error, maxWireVersion: number): boolean {\n  // pre-4.4 server, then the driver adds an error label for every valid case\n  // execute operation will only inspect the label, code/message logic is handled here\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (error instanceof MongoError) {\n    if (\n      (maxWireVersion >= 9 || error.hasErrorLabel(MongoErrorLabel.RetryableWriteError)) &&\n      !error.hasErrorLabel(MongoErrorLabel.HandshakeError)\n    ) {\n      // If we already have the error label no need to add it again. 4.4+ servers add the label.\n      // In the case where we have a handshake error, need to fall down to the logic checking\n      // the codes.\n      return false;\n    }\n  }\n\n  if (error instanceof MongoWriteConcernError) {\n    return RETRYABLE_WRITE_ERROR_CODES.has(error.result?.code ?? error.code ?? 0);\n  }\n\n  if (error instanceof MongoError && typeof error.code === 'number') {\n    return RETRYABLE_WRITE_ERROR_CODES.has(error.code);\n  }\n\n  const isNotWritablePrimaryError = LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n\n  const isNodeIsRecoveringError = NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isRetryableWriteError(error: MongoError): boolean {\n  return error.hasErrorLabel(MongoErrorLabel.RetryableWriteError);\n}\n\n/** Determines whether an error is something the driver should attempt to retry */\nexport function isRetryableReadError(error: MongoError): boolean {\n  const hasRetryableErrorCode =\n    typeof error.code === 'number' ? RETRYABLE_READ_ERROR_CODES.has(error.code) : false;\n  if (hasRetryableErrorCode) {\n    return true;\n  }\n\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  const isNotWritablePrimaryError = LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n\n  const isNodeIsRecoveringError = NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n\n  return false;\n}\n\nconst SDAM_RECOVERING_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary\n]);\n\nconst SDAM_NOT_PRIMARY_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.LegacyNotPrimary\n]);\n\nconst SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.ShutdownInProgress\n]);\n\nfunction isRecoveringError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_RECOVERING_CODES.has(err.code);\n  }\n\n  return (\n    LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE.test(err.message) ||\n    NODE_IS_RECOVERING_ERROR_MESSAGE.test(err.message)\n  );\n}\n\nfunction isNotWritablePrimaryError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_NOT_PRIMARY_CODES.has(err.code);\n  }\n\n  if (isRecoveringError(err)) {\n    return false;\n  }\n\n  return LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(err.message);\n}\n\nexport function isNodeShuttingDownError(err: MongoError): boolean {\n  return !!(typeof err.code === 'number' && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code));\n}\n\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-master-and-node-is-recovering\n */\nexport function isSDAMUnrecoverableError(error: MongoError): boolean {\n  // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n  //       close event are considered unrecoverable\n  if (error instanceof MongoParseError || error == null) {\n    return true;\n  }\n\n  return isRecoveringError(error) || isNotWritablePrimaryError(error);\n}\n\nexport function isNetworkTimeoutError(err: MongoError): err is MongoNetworkError {\n  return !!(err instanceof MongoNetworkError && err.message.match(/timed out/));\n}\n\nexport function isResumableError(error?: Error, wireVersion?: number): boolean {\n  if (error == null || !(error instanceof MongoError)) {\n    return false;\n  }\n\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (wireVersion != null && wireVersion >= 9) {\n    // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n    if (error.code === MONGODB_ERROR_CODES.CursorNotFound) {\n      return true;\n    }\n    return error.hasErrorLabel(MongoErrorLabel.ResumableChangeStreamError);\n  }\n\n  if (typeof error.code === 'number') {\n    return GET_MORE_RESUMABLE_CODES.has(error.code);\n  }\n\n  return false;\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import type { DeserializeOptions, SerializeOptions } from 'bson';\n\nexport {\n  Binary,\n  BSON,\n  BSONRegExp,\n  BSONSymbol,\n  BSONType,\n  calculateObjectSize,\n  Code,\n  DBRef,\n  Decimal128,\n  deserialize,\n  Document,\n  Double,\n  Int32,\n  Long,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  serialize,\n  Timestamp\n} from 'bson';\n\n/**\n * BSON Serialization options.\n * @public\n */\nexport interface BSONSerializeOptions\n  extends Omit<SerializeOptions, 'index'>,\n    Omit<\n      DeserializeOptions,\n      | 'evalFunctions'\n      | 'cacheFunctions'\n      | 'cacheFunctionsCrc32'\n      | 'allowObjectSmallerThanBufferSize'\n      | 'index'\n      | 'validation'\n    > {\n  /**\n   * Enabling the raw option will return a [Node.js Buffer](https://nodejs.org/api/buffer.html)\n   * which is allocated using [allocUnsafe API](https://nodejs.org/api/buffer.html#static-method-bufferallocunsafesize).\n   * See this section from the [Node.js Docs here](https://nodejs.org/api/buffer.html#what-makes-bufferallocunsafe-and-bufferallocunsafeslow-unsafe)\n   * for more detail about what \"unsafe\" refers to in this context.\n   * If you need to maintain your own editable clone of the bytes returned for an extended life time of the process, it is recommended you allocate\n   * your own buffer and clone the contents:\n   *\n   * @example\n   * ```ts\n   * const raw = await collection.findOne({}, { raw: true });\n   * const myBuffer = Buffer.alloc(raw.byteLength);\n   * myBuffer.set(raw, 0);\n   * // Only save and use `myBuffer` beyond this point\n   * ```\n   *\n   * @remarks\n   * Please note there is a known limitation where this option cannot be used at the MongoClient level (see [NODE-3946](https://jira.mongodb.org/browse/NODE-3946)).\n   * It does correctly work at `Db`, `Collection`, and per operation the same as other BSON options work.\n   */\n  raw?: boolean;\n\n  /** Enable utf8 validation when deserializing BSON documents.  Defaults to true. */\n  enableUtf8Validation?: boolean;\n}\n\nexport function pluckBSONSerializeOptions(options: BSONSerializeOptions): BSONSerializeOptions {\n  const {\n    fieldsAsRaw,\n    useBigInt64,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw,\n    enableUtf8Validation\n  } = options;\n  return {\n    fieldsAsRaw,\n    useBigInt64,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw,\n    enableUtf8Validation\n  };\n}\n\n/**\n * Merge the given BSONSerializeOptions, preferring options over the parent's options, and\n * substituting defaults for values not set.\n *\n * @internal\n */\nexport function resolveBSONOptions(\n  options?: BSONSerializeOptions,\n  parent?: { bsonOptions?: BSONSerializeOptions }\n): BSONSerializeOptions {\n  const parentOptions = parent?.bsonOptions;\n  return {\n    raw: options?.raw ?? parentOptions?.raw ?? false,\n    useBigInt64: options?.useBigInt64 ?? parentOptions?.useBigInt64 ?? false,\n    promoteLongs: options?.promoteLongs ?? parentOptions?.promoteLongs ?? true,\n    promoteValues: options?.promoteValues ?? parentOptions?.promoteValues ?? true,\n    promoteBuffers: options?.promoteBuffers ?? parentOptions?.promoteBuffers ?? false,\n    ignoreUndefined: options?.ignoreUndefined ?? parentOptions?.ignoreUndefined ?? false,\n    bsonRegExp: options?.bsonRegExp ?? parentOptions?.bsonRegExp ?? false,\n    serializeFunctions: options?.serializeFunctions ?? parentOptions?.serializeFunctions ?? false,\n    fieldsAsRaw: options?.fieldsAsRaw ?? parentOptions?.fieldsAsRaw ?? {},\n    enableUtf8Validation:\n      options?.enableUtf8Validation ?? parentOptions?.enableUtf8Validation ?? true\n  };\n}\n", "export const MIN_SUPPORTED_SERVER_VERSION = '3.6';\nexport const MAX_SUPPORTED_SERVER_VERSION = '7.0';\nexport const MIN_SUPPORTED_WIRE_VERSION = 6;\nexport const MAX_SUPPORTED_WIRE_VERSION = 21;\nexport const MIN_SUPPORTED_QE_WIRE_VERSION = 21;\nexport const MIN_SUPPORTED_QE_SERVER_VERSION = '7.0';\nexport const OP_REPLY = 1;\nexport const OP_UPDATE = 2001;\nexport const OP_INSERT = 2002;\nexport const OP_QUERY = 2004;\nexport const OP_DELETE = 2006;\nexport const OP_COMPRESSED = 2012;\nexport const OP_MSG = 2013;\n", "export const SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';\nexport const SYSTEM_INDEX_COLLECTION = 'system.indexes';\nexport const SYSTEM_PROFILE_COLLECTION = 'system.profile';\nexport const SYSTEM_USER_COLLECTION = 'system.users';\nexport const SYSTEM_COMMAND_COLLECTION = '$cmd';\nexport const SYSTEM_JS_COLLECTION = 'system.js';\n\n// events\nexport const ERROR = 'error' as const;\nexport const TIMEOUT = 'timeout' as const;\nexport const CLOSE = 'close' as const;\nexport const OPEN = 'open' as const;\nexport const CONNECT = 'connect' as const;\nexport const CLOSED = 'closed' as const;\nexport const ENDED = 'ended' as const;\nexport const MESSAGE = 'message' as const;\nexport const PINNED = 'pinned' as const;\nexport const UNPINNED = 'unpinned' as const;\nexport const DESCRIPTION_RECEIVED = 'descriptionReceived';\nexport const SERVER_OPENING = 'serverOpening' as const;\nexport const SERVER_CLOSED = 'serverClosed' as const;\nexport const SERVER_DESCRIPTION_CHANGED = 'serverDescriptionChanged' as const;\nexport const TOPOLOGY_OPENING = 'topologyOpening' as const;\nexport const TOPOLOGY_CLOSED = 'topologyClosed' as const;\nexport const TOPOLOGY_DESCRIPTION_CHANGED = 'topologyDescriptionChanged' as const;\n/** @internal */\nexport const CONNECTION_POOL_CREATED = 'connectionPoolCreated' as const;\n/** @internal */\nexport const CONNECTION_POOL_CLOSED = 'connectionPoolClosed' as const;\n/** @internal */\nexport const CONNECTION_POOL_CLEARED = 'connectionPoolCleared' as const;\n/** @internal */\nexport const CONNECTION_POOL_READY = 'connectionPoolReady' as const;\n/** @internal */\nexport const CONNECTION_CREATED = 'connectionCreated' as const;\n/** @internal */\nexport const CONNECTION_READY = 'connectionReady' as const;\n/** @internal */\nexport const CONNECTION_CLOSED = 'connectionClosed' as const;\n/** @internal */\nexport const CONNECTION_CHECK_OUT_STARTED = 'connectionCheckOutStarted' as const;\n/** @internal */\nexport const CONNECTION_CHECK_OUT_FAILED = 'connectionCheckOutFailed' as const;\n/** @internal */\nexport const CONNECTION_CHECKED_OUT = 'connectionCheckedOut' as const;\n/** @internal */\nexport const CONNECTION_CHECKED_IN = 'connectionCheckedIn' as const;\nexport const CLUSTER_TIME_RECEIVED = 'clusterTimeReceived' as const;\nexport const COMMAND_STARTED = 'commandStarted' as const;\nexport const COMMAND_SUCCEEDED = 'commandSucceeded' as const;\nexport const COMMAND_FAILED = 'commandFailed' as const;\nexport const SERVER_HEARTBEAT_STARTED = 'serverHeartbeatStarted' as const;\nexport const SERVER_HEARTBEAT_SUCCEEDED = 'serverHeartbeatSucceeded' as const;\nexport const SERVER_HEARTBEAT_FAILED = 'serverHeartbeatFailed' as const;\nexport const RESPONSE = 'response' as const;\nexport const MORE = 'more' as const;\nexport const INIT = 'init' as const;\nexport const CHANGE = 'change' as const;\nexport const END = 'end' as const;\nexport const RESUME_TOKEN_CHANGED = 'resumeTokenChanged' as const;\n\n/** @public */\nexport const HEARTBEAT_EVENTS = Object.freeze([\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_HEARTBEAT_FAILED\n] as const);\n\n/** @public */\nexport const CMAP_EVENTS = Object.freeze([\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_READY,\n  CONNECTION_CLOSED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CHECKED_IN\n] as const);\n\n/** @public */\nexport const TOPOLOGY_EVENTS = Object.freeze([\n  SERVER_OPENING,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  ERROR,\n  TIMEOUT,\n  CLOSE\n] as const);\n\n/** @public */\nexport const APM_EVENTS = Object.freeze([\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  COMMAND_FAILED\n] as const);\n\n/**\n * All events that we relay to the `Topology`\n * @internal\n */\nexport const SERVER_RELAY_EVENTS = Object.freeze([\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_HEARTBEAT_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  COMMAND_FAILED,\n  ...CMAP_EVENTS\n] as const);\n\n/**\n * All events we listen to from `Server` instances, but do not forward to the client\n * @internal\n */\nexport const LOCAL_SERVER_EVENTS = Object.freeze([\n  CONNECT,\n  DESCRIPTION_RECEIVED,\n  CLOSED,\n  ENDED\n] as const);\n\n/** @public */\nexport const MONGO_CLIENT_EVENTS = Object.freeze([\n  ...CMAP_EVENTS,\n  ...APM_EVENTS,\n  ...TOPOLOGY_EVENTS,\n  ...HEARTBEAT_EVENTS\n] as const);\n\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexport const LEGACY_HELLO_COMMAND = 'ismaster';\n\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexport const LEGACY_HELLO_COMMAND_CAMEL_CASE = 'isMaster';\n", "import type { Document } from './bson';\n\n/** @public */\nexport const ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n} as const);\n\n/** @public */\nexport type ReadConcernLevel = (typeof ReadConcernLevel)[keyof typeof ReadConcernLevel];\n\n/** @public */\nexport type ReadConcernLike = ReadConcern | { level: ReadConcernLevel } | ReadConcernLevel;\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nexport class ReadConcern {\n  level: ReadConcernLevel | string;\n\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level: ReadConcernLevel) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = ReadConcernLevel[level] ?? level;\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options?: {\n    readConcern?: ReadConcernLike;\n    level?: ReadConcernLevel;\n  }): ReadConcern | undefined {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      const { readConcern } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n    return;\n  }\n\n  static get MAJORITY(): 'majority' {\n    return ReadConcernLevel.majority;\n  }\n\n  static get AVAILABLE(): 'available' {\n    return ReadConcernLevel.available;\n  }\n\n  static get LINEARIZABLE(): 'linearizable' {\n    return ReadConcernLevel.linearizable;\n  }\n\n  static get SNAPSHOT(): 'snapshot' {\n    return ReadConcernLevel.snapshot;\n  }\n\n  toJSON(): Document {\n    return { level: this.level };\n  }\n}\n", "import type { Document } from './bson';\nimport { MongoInvalidArgumentError } from './error';\nimport type { TagSet } from './sdam/server_description';\nimport type { ClientSession } from './sessions';\n\n/** @public */\nexport type ReadPreferenceLike = ReadPreference | ReadPreferenceMode;\n\n/** @public */\nexport const ReadPreferenceMode = Object.freeze({\n  primary: 'primary',\n  primaryPreferred: 'primaryPreferred',\n  secondary: 'secondary',\n  secondaryPreferred: 'secondaryPreferred',\n  nearest: 'nearest'\n} as const);\n\n/** @public */\nexport type ReadPreferenceMode = (typeof ReadPreferenceMode)[keyof typeof ReadPreferenceMode];\n\n/** @public */\nexport interface HedgeOptions {\n  /** Explicitly enable or disable hedged reads. */\n  enabled?: boolean;\n}\n\n/** @public */\nexport interface ReadPreferenceOptions {\n  /** Max secondary read staleness in seconds, Minimum value is 90 seconds.*/\n  maxStalenessSeconds?: number;\n  /** Server mode in which the same query is dispatched in parallel to multiple replica set members. */\n  hedge?: HedgeOptions;\n}\n\n/** @public */\nexport interface ReadPreferenceLikeOptions extends ReadPreferenceOptions {\n  readPreference?:\n    | ReadPreferenceLike\n    | {\n        mode?: ReadPreferenceMode;\n        preference?: ReadPreferenceMode;\n        tags?: TagSet[];\n        maxStalenessSeconds?: number;\n      };\n}\n\n/** @public */\nexport interface ReadPreferenceFromOptions extends ReadPreferenceLikeOptions {\n  session?: ClientSession;\n  readPreferenceTags?: TagSet[];\n  hedge?: HedgeOptions;\n}\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/core/read-preference/\n */\nexport class ReadPreference {\n  mode: ReadPreferenceMode;\n  tags?: TagSet[];\n  hedge?: HedgeOptions;\n  maxStalenessSeconds?: number;\n  minWireVersion?: number;\n\n  public static PRIMARY = ReadPreferenceMode.primary;\n  public static PRIMARY_PREFERRED = ReadPreferenceMode.primaryPreferred;\n  public static SECONDARY = ReadPreferenceMode.secondary;\n  public static SECONDARY_PREFERRED = ReadPreferenceMode.secondaryPreferred;\n  public static NEAREST = ReadPreferenceMode.nearest;\n\n  public static primary = new ReadPreference(ReadPreferenceMode.primary);\n  public static primaryPreferred = new ReadPreference(ReadPreferenceMode.primaryPreferred);\n  public static secondary = new ReadPreference(ReadPreferenceMode.secondary);\n  public static secondaryPreferred = new ReadPreference(ReadPreferenceMode.secondaryPreferred);\n  public static nearest = new ReadPreference(ReadPreferenceMode.nearest);\n\n  /**\n   * @param mode - A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n   * @param tags - A tag set used to target reads to members with the specified tag(s). tagSet is not available if using read preference mode primary.\n   * @param options - Additional read preference options\n   */\n  constructor(mode: ReadPreferenceMode, tags?: TagSet[], options?: ReadPreferenceOptions) {\n    if (!ReadPreference.isValid(mode)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference mode ${JSON.stringify(mode)}`);\n    }\n    if (options == null && typeof tags === 'object' && !Array.isArray(tags)) {\n      options = tags;\n      tags = undefined;\n    } else if (tags && !Array.isArray(tags)) {\n      throw new MongoInvalidArgumentError('ReadPreference tags must be an array');\n    }\n\n    this.mode = mode;\n    this.tags = tags;\n    this.hedge = options?.hedge;\n    this.maxStalenessSeconds = undefined;\n    this.minWireVersion = undefined;\n\n    options = options ?? {};\n    if (options.maxStalenessSeconds != null) {\n      if (options.maxStalenessSeconds <= 0) {\n        throw new MongoInvalidArgumentError('maxStalenessSeconds must be a positive integer');\n      }\n\n      this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n      // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n      //       topology has a lower value then a MongoError will be thrown during server selection.\n      this.minWireVersion = 5;\n    }\n\n    if (this.mode === ReadPreference.PRIMARY) {\n      if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n        throw new MongoInvalidArgumentError('Primary read preference cannot be combined with tags');\n      }\n\n      if (this.maxStalenessSeconds) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with maxStalenessSeconds'\n        );\n      }\n\n      if (this.hedge) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with hedge'\n        );\n      }\n    }\n  }\n\n  // Support the deprecated `preference` property introduced in the porcelain layer\n  get preference(): ReadPreferenceMode {\n    return this.mode;\n  }\n\n  static fromString(mode: string): ReadPreference {\n    return new ReadPreference(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Construct a ReadPreference given an options object.\n   *\n   * @param options - The options object from which to extract the read preference.\n   */\n  static fromOptions(options?: ReadPreferenceFromOptions): ReadPreference | undefined {\n    if (!options) return;\n    const readPreference =\n      options.readPreference ?? options.session?.transaction.options.readPreference;\n    const readPreferenceTags = options.readPreferenceTags;\n\n    if (readPreference == null) {\n      return;\n    }\n\n    if (typeof readPreference === 'string') {\n      return new ReadPreference(readPreference, readPreferenceTags, {\n        maxStalenessSeconds: options.maxStalenessSeconds,\n        hedge: options.hedge\n      });\n    } else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n      const mode = readPreference.mode || readPreference.preference;\n      if (mode && typeof mode === 'string') {\n        return new ReadPreference(mode, readPreference.tags ?? readPreferenceTags, {\n          maxStalenessSeconds: readPreference.maxStalenessSeconds,\n          hedge: options.hedge\n        });\n      }\n    }\n\n    if (readPreferenceTags) {\n      readPreference.tags = readPreferenceTags;\n    }\n\n    return readPreference as ReadPreference;\n  }\n\n  /**\n   * Replaces options.readPreference with a ReadPreference instance\n   */\n  static translate(options: ReadPreferenceLikeOptions): ReadPreferenceLikeOptions {\n    if (options.readPreference == null) return options;\n    const r = options.readPreference;\n\n    if (typeof r === 'string') {\n      options.readPreference = new ReadPreference(r);\n    } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n      const mode = r.mode || r.preference;\n      if (mode && typeof mode === 'string') {\n        options.readPreference = new ReadPreference(mode, r.tags, {\n          maxStalenessSeconds: r.maxStalenessSeconds\n        });\n      }\n    } else if (!(r instanceof ReadPreference)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${r}`);\n    }\n\n    return options;\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  static isValid(mode: string): boolean {\n    const VALID_MODES = new Set([\n      ReadPreference.PRIMARY,\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST,\n      null\n    ]);\n\n    return VALID_MODES.has(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  isValid(mode?: string): boolean {\n    return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n  }\n\n  /**\n   * Indicates that this readPreference needs the \"SecondaryOk\" bit when sent over the wire\n   * @see https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#op-query\n   */\n  secondaryOk(): boolean {\n    const NEEDS_SECONDARYOK = new Set<string>([\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST\n    ]);\n\n    return NEEDS_SECONDARYOK.has(this.mode);\n  }\n\n  /**\n   * Check if the two ReadPreferences are equivalent\n   *\n   * @param readPreference - The read preference with which to check equality\n   */\n  equals(readPreference: ReadPreference): boolean {\n    return readPreference.mode === this.mode;\n  }\n\n  /** Return JSON representation */\n  toJSON(): Document {\n    const readPreference = { mode: this.mode } as Document;\n    if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n    if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n    if (this.hedge) readPreference.hedge = this.hedge;\n    return readPreference;\n  }\n}\n", "import { clearTimeout } from 'timers';\n\nimport type { Binary, Long, Timestamp } from '../bson';\nimport type { ClientSession } from '../sessions';\nimport type { Topology } from './topology';\n\n// shared state names\nexport const STATE_CLOSING = 'closing';\nexport const STATE_CLOSED = 'closed';\nexport const STATE_CONNECTING = 'connecting';\nexport const STATE_CONNECTED = 'connected';\n\n/**\n * An enumeration of topology types we know about\n * @public\n */\nexport const TopologyType = Object.freeze({\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown',\n  LoadBalanced: 'LoadBalanced'\n} as const);\n\n/** @public */\nexport type TopologyType = (typeof TopologyType)[keyof typeof TopologyType];\n\n/**\n * An enumeration of server types we know about\n * @public\n */\nexport const ServerType = Object.freeze({\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown',\n  LoadBalancer: 'LoadBalancer'\n} as const);\n\n/** @public */\nexport type ServerType = (typeof ServerType)[keyof typeof ServerType];\n\n/** @internal */\nexport type TimerQueue = Set<NodeJS.Timeout>;\n\n/** @internal */\nexport function drainTimerQueue(queue: TimerQueue): void {\n  queue.forEach(clearTimeout);\n  queue.clear();\n}\n\n/** @public */\nexport interface ClusterTime {\n  clusterTime: Timestamp;\n  signature: {\n    hash: Binary;\n    keyId: Long;\n  };\n}\n\n/** Shared function to determine clusterTime for a given topology or session */\nexport function _advanceClusterTime(\n  entity: Topology | ClientSession,\n  $clusterTime: ClusterTime\n): void {\n  if (entity.clusterTime == null) {\n    entity.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(entity.clusterTime.clusterTime)) {\n      entity.clusterTime = $clusterTime;\n    }\n  }\n}\n", "import { type Document } from './bson';\n\n/** @public */\nexport type W = number | 'majority';\n\n/** @public */\nexport interface WriteConcernOptions {\n  /** Write Concern as an object */\n  writeConcern?: WriteConcern | WriteConcernSettings;\n}\n\n/** @public */\nexport interface WriteConcernSettings {\n  /** The write concern */\n  w?: W;\n  /** The write concern timeout */\n  wtimeoutMS?: number;\n  /** The journal write concern */\n  journal?: boolean;\n\n  // legacy options\n  /**\n   * The journal write concern.\n   * @deprecated Will be removed in the next major version. Please use the journal option.\n   */\n  j?: boolean;\n  /**\n   * The write concern timeout.\n   * @deprecated Will be removed in the next major version. Please use the wtimeoutMS option.\n   */\n  wtimeout?: number;\n  /**\n   * The file sync write concern.\n   * @deprecated Will be removed in the next major version. Please use the journal option.\n   */\n  fsync?: boolean | 1;\n}\n\nexport const WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n\n/** The write concern options that decorate the server command. */\ninterface CommandWriteConcernOptions {\n  /** The write concern */\n  w?: W;\n  /** The journal write concern. */\n  j?: boolean;\n  /** The write concern timeout. */\n  wtimeout?: number;\n}\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/write-concern/\n */\nexport class WriteConcern {\n  /** Request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags. */\n  readonly w?: W;\n  /** Request acknowledgment that the write operation has been written to the on-disk journal */\n  readonly journal?: boolean;\n  /** Specify a time limit to prevent write operations from blocking indefinitely */\n  readonly wtimeoutMS?: number;\n  /**\n   * Specify a time limit to prevent write operations from blocking indefinitely.\n   * @deprecated Will be removed in the next major version. Please use wtimeoutMS.\n   */\n  wtimeout?: number;\n  /**\n   * Request acknowledgment that the write operation has been written to the on-disk journal.\n   * @deprecated Will be removed in the next major version. Please use journal.\n   */\n  j?: boolean;\n  /**\n   * Equivalent to the j option.\n   * @deprecated Will be removed in the next major version. Please use journal.\n   */\n  fsync?: boolean | 1;\n\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n   * @param wtimeoutMS - specify a time limit to prevent write operations from blocking indefinitely\n   * @param journal - request acknowledgment that the write operation has been written to the on-disk journal\n   * @param fsync - equivalent to the j option. Is deprecated and will be removed in the next major version.\n   */\n  constructor(w?: W, wtimeoutMS?: number, journal?: boolean, fsync?: boolean | 1) {\n    if (w != null) {\n      if (!Number.isNaN(Number(w))) {\n        this.w = Number(w);\n      } else {\n        this.w = w;\n      }\n    }\n    if (wtimeoutMS != null) {\n      this.wtimeoutMS = this.wtimeout = wtimeoutMS;\n    }\n    if (journal != null) {\n      this.journal = this.j = journal;\n    }\n    if (fsync != null) {\n      this.journal = this.j = fsync ? true : false;\n    }\n  }\n\n  /**\n   * Apply a write concern to a command document. Will modify and return the command.\n   */\n  static apply(command: Document, writeConcern: WriteConcern): Document {\n    const wc: CommandWriteConcernOptions = {};\n    // The write concern document sent to the server has w/wtimeout/j fields.\n    if (writeConcern.w != null) wc.w = writeConcern.w;\n    if (writeConcern.wtimeoutMS != null) wc.wtimeout = writeConcern.wtimeoutMS;\n    if (writeConcern.journal != null) wc.j = writeConcern.j;\n    command.writeConcern = wc;\n    return command;\n  }\n\n  /** Construct a WriteConcern given an options object. */\n  static fromOptions(\n    options?: WriteConcernOptions | WriteConcern | W,\n    inherit?: WriteConcernOptions | WriteConcern\n  ): WriteConcern | undefined {\n    if (options == null) return undefined;\n    inherit = inherit ?? {};\n    let opts: WriteConcernSettings | WriteConcern | undefined;\n    if (typeof options === 'string' || typeof options === 'number') {\n      opts = { w: options };\n    } else if (options instanceof WriteConcern) {\n      opts = options;\n    } else {\n      opts = options.writeConcern;\n    }\n    const parentOpts: WriteConcern | WriteConcernSettings | undefined =\n      inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\n\n    const {\n      w = undefined,\n      wtimeout = undefined,\n      j = undefined,\n      fsync = undefined,\n      journal = undefined,\n      wtimeoutMS = undefined\n    } = {\n      ...parentOpts,\n      ...opts\n    };\n    if (\n      w != null ||\n      wtimeout != null ||\n      wtimeoutMS != null ||\n      j != null ||\n      journal != null ||\n      fsync != null\n    ) {\n      return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\n    }\n    return undefined;\n  }\n}\n", "import * as crypto from 'crypto';\nimport type { SrvRecord } from 'dns';\nimport * as http from 'http';\nimport * as url from 'url';\nimport { URL } from 'url';\n\nimport { type Document, ObjectId, resolveBSONOptions } from './bson';\nimport type { Connection } from './cmap/connection';\nimport { MAX_SUPPORTED_WIRE_VERSION } from './cmap/wire_protocol/constants';\nimport type { Collection } from './collection';\nimport { LEGACY_HELLO_COMMAND } from './constants';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport type { FindCursor } from './cursor/find_cursor';\nimport type { Db } from './db';\nimport {\n  type AnyError,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoParseError,\n  MongoRuntimeError\n} from './error';\nimport type { Explain } from './explain';\nimport type { MongoClient } from './mongo_client';\nimport type { CommandOperationOptions, OperationParent } from './operations/command';\nimport type { Hint, OperationOptions } from './operations/operation';\nimport { ReadConcern } from './read_concern';\nimport { ReadPreference } from './read_preference';\nimport { ServerType } from './sdam/common';\nimport type { Server } from './sdam/server';\nimport type { Topology } from './sdam/topology';\nimport type { ClientSession } from './sessions';\nimport { WriteConcern } from './write_concern';\n\n/**\n * MongoDB Driver style callback\n * @public\n */\nexport type Callback<T = any> = (error?: AnyError, result?: T) => void;\n\nexport type AnyOptions = Document;\n\nexport const ByteUtils = {\n  toLocalBufferType(this: void, buffer: Buffer | Uint8Array): Buffer {\n    return Buffer.isBuffer(buffer)\n      ? buffer\n      : Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  },\n\n  equals(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).equals(seqB);\n  },\n\n  compare(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).compare(seqB);\n  },\n\n  toBase64(this: void, uint8array: Uint8Array) {\n    return ByteUtils.toLocalBufferType(uint8array).toString('base64');\n  }\n};\n\n/**\n * Determines if a connection's address matches a user provided list\n * of domain wildcards.\n */\nexport function hostMatchesWildcards(host: string, wildcards: string[]): boolean {\n  for (const wildcard of wildcards) {\n    if (\n      host === wildcard ||\n      (wildcard.startsWith('*.') && host?.endsWith(wildcard.substring(2, wildcard.length))) ||\n      (wildcard.startsWith('*/') && host?.endsWith(wildcard.substring(2, wildcard.length)))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Throws if collectionName is not a valid mongodb collection namespace.\n * @internal\n */\nexport function checkCollectionName(collectionName: string): void {\n  if ('string' !== typeof collectionName) {\n    throw new MongoInvalidArgumentError('Collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoInvalidArgumentError('Collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError('Collection names cannot contain a null character');\n  }\n}\n\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nexport function normalizeHintField(hint?: Hint): Hint | undefined {\n  let finalHint = undefined;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(param => {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {} as Document;\n    for (const name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n}\n\nconst TO_STRING = (object: unknown) => Object.prototype.toString.call(object);\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\n\nexport function isObject(arg: unknown): arg is object {\n  return '[object Object]' === TO_STRING(arg);\n}\n\n/** @internal */\nexport function mergeOptions<T, S>(target: T, source: S): T & S {\n  return { ...target, ...source };\n}\n\n/** @internal */\nexport function filterOptions(options: AnyOptions, names: ReadonlyArray<string>): AnyOptions {\n  const filterOptions: AnyOptions = {};\n\n  for (const name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n\n  // Filtered options\n  return filterOptions;\n}\n\ninterface HasRetryableWrites {\n  retryWrites?: boolean;\n}\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nexport function applyRetryableWrites<T extends HasRetryableWrites>(target: T, db?: Db): T {\n  if (db && db.s.options?.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\n\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nexport function isPromiseLike<T = any>(value?: PromiseLike<T> | void): value is Promise<T> {\n  return !!value && typeof value.then === 'function';\n}\n\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nexport function decorateWithCollation(\n  command: Document,\n  target: MongoClient | Db | Collection,\n  options: AnyOptions\n): void {\n  const capabilities = getTopology(target).capabilities;\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoCompatibilityError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nexport function decorateWithReadConcern(\n  command: Document,\n  coll: { s: { readConcern?: ReadConcern } },\n  options?: OperationOptions\n): void {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  const readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nexport function decorateWithExplain(command: Document, explain: Explain): Document {\n  if (command.explain) {\n    return command;\n  }\n\n  return { explain: command, verbosity: explain.verbosity };\n}\n\n/**\n * @internal\n */\nexport type TopologyProvider =\n  | MongoClient\n  | ClientSession\n  | FindCursor\n  | AbstractCursor\n  | Collection<any>\n  | Db;\n\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nexport function getTopology(provider: TopologyProvider): Topology {\n  // MongoClient or ClientSession or AbstractCursor\n  if ('topology' in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider && provider.client.topology) {\n    return provider.client.topology;\n  }\n\n  throw new MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\n\n/** @internal */\nexport function ns(ns: string): MongoDBNamespace {\n  return MongoDBNamespace.fromString(ns);\n}\n\n/** @public */\nexport class MongoDBNamespace {\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  constructor(public db: string, public collection?: string) {\n    this.collection = collection === '' ? undefined : collection;\n  }\n\n  toString(): string {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection: string): MongoDBCollectionNamespace {\n    return new MongoDBCollectionNamespace(this.db, collection);\n  }\n\n  static fromString(namespace?: string): MongoDBNamespace {\n    if (typeof namespace !== 'string' || namespace === '') {\n      // TODO(NODE-3483): Replace with MongoNamespaceError\n      throw new MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const [db, ...collectionParts] = namespace.split('.');\n    const collection = collectionParts.join('.');\n    return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n  }\n}\n\n/**\n * @public\n *\n * A class representing a collection's namespace.  This class enforces (through Typescript) that\n * the `collection` portion of the namespace is defined and should only be\n * used in scenarios where this can be guaranteed.\n */\nexport class MongoDBCollectionNamespace extends MongoDBNamespace {\n  constructor(db: string, override collection: string) {\n    super(db, collection);\n  }\n}\n\n/** @internal */\nexport function* makeCounter(seed = 0): Generator<number> {\n  let count = seed;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Helper for handling legacy callback support.\n */\nexport function maybeCallback<T>(promiseFn: () => Promise<T>, callback: null): Promise<T>;\nexport function maybeCallback<T>(\n  promiseFn: () => Promise<T>,\n  callback?: Callback<T>\n): Promise<T> | void;\nexport function maybeCallback<T>(\n  promiseFn: () => Promise<T>,\n  callback?: Callback<T> | null\n): Promise<T> | void {\n  const promise = promiseFn();\n  if (callback == null) {\n    return promise;\n  }\n\n  promise.then(\n    result => callback(undefined, result),\n    error => callback(error)\n  );\n  return;\n}\n\n/** @internal */\nexport function databaseNamespace(ns: string): string {\n  return ns.split('.')[0];\n}\n\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nexport function uuidV4(): Buffer {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nexport function maxWireVersion(topologyOrServer?: Connection | Topology | Server): number {\n  if (topologyOrServer) {\n    if (topologyOrServer.loadBalanced) {\n      // Since we do not have a monitor, we assume the load balanced server is always\n      // pointed at the latest mongodb version. There is a risk that for on-prem\n      // deployments that don't upgrade immediately that this could alert to the\n      // application that a feature is available that is actually not.\n      return MAX_SUPPORTED_WIRE_VERSION;\n    }\n    if (topologyOrServer.hello) {\n      return topologyOrServer.hello.maxWireVersion;\n    }\n\n    if ('lastHello' in topologyOrServer && typeof topologyOrServer.lastHello === 'function') {\n      const lastHello = topologyOrServer.lastHello();\n      if (lastHello) {\n        return lastHello.maxWireVersion;\n      }\n    }\n\n    if (\n      topologyOrServer.description &&\n      'maxWireVersion' in topologyOrServer.description &&\n      topologyOrServer.description.maxWireVersion != null\n    ) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n * @internal\n *\n * @param arr - An array of items to asynchronously iterate over\n * @param eachFn - A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param callback - The callback called after every item has been iterated\n */\nexport function eachAsync<T = Document>(\n  arr: T[],\n  eachFn: (item: T, callback: (err?: AnyError) => void) => void,\n  callback: Callback\n): void {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = 0;\n  for (idx = 0; idx < arr.length; ++idx) {\n    awaiting++;\n    eachFn(arr[idx], eachCallback);\n  }\n\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err?: AnyError) {\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n    }\n  }\n}\n\n/** @internal */\nexport function arrayStrictEqual(arr: unknown[], arr2: unknown[]): boolean {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n\n  return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\n\n/** @internal */\nexport function errorStrictEqual(lhs?: AnyError | null, rhs?: AnyError | null): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n\n  if (!lhs || !rhs) {\n    return lhs === rhs;\n  }\n\n  if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n    return false;\n  }\n\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n\n  return true;\n}\n\ninterface StateTable {\n  [key: string]: string[];\n}\ninterface ObjectWithState {\n  s: { state: string };\n  emit(event: 'stateChanged', state: string, newState: string): void;\n}\ninterface StateTransitionFunction {\n  (target: ObjectWithState, newState: string): void;\n}\n\n/** @public */\nexport type EventEmitterWithState = {\n  /** @internal */\n  stateChanged(previous: string, current: string): void;\n};\n\n/** @internal */\nexport function makeStateMachine(stateTable: StateTable): StateTransitionFunction {\n  return function stateTransition(target, newState) {\n    const legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new MongoRuntimeError(\n        `illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`\n      );\n    }\n\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\n\n/** @internal */\nexport function now(): number {\n  const hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\n\n/** @internal */\nexport function calculateDurationInMs(started: number): number {\n  if (typeof started !== 'number') {\n    throw new MongoInvalidArgumentError('Numeric value required to calculate duration');\n  }\n\n  const elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\n\n/** @internal */\nexport function hasAtomicOperators(doc: Document | Document[]): boolean {\n  if (Array.isArray(doc)) {\n    for (const document of doc) {\n      if (hasAtomicOperators(document)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const keys = Object.keys(doc);\n  return keys.length > 0 && keys[0][0] === '$';\n}\n\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n * @internal\n */\nexport function resolveOptions<T extends CommandOperationOptions>(\n  parent: OperationParent | undefined,\n  options?: T\n): T {\n  const result: T = Object.assign({}, options, resolveBSONOptions(options, parent));\n\n  // Users cannot pass a readConcern/writeConcern to operations in a transaction\n  const session = options?.session;\n  if (!session?.inTransaction()) {\n    const readConcern = ReadConcern.fromOptions(options) ?? parent?.readConcern;\n    if (readConcern) {\n      result.readConcern = readConcern;\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options) ?? parent?.writeConcern;\n    if (writeConcern) {\n      result.writeConcern = writeConcern;\n    }\n  }\n\n  const readPreference = ReadPreference.fromOptions(options) ?? parent?.readPreference;\n  if (readPreference) {\n    result.readPreference = readPreference;\n  }\n\n  return result;\n}\n\nexport function isSuperset(set: Set<any> | any[], subset: Set<any> | any[]): boolean {\n  set = Array.isArray(set) ? new Set(set) : set;\n  subset = Array.isArray(subset) ? new Set(subset) : subset;\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nexport function isHello(doc: Document): boolean {\n  return doc[LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\n\n/** Returns the items that are uniquely in setA */\nexport function setDifference<T>(setA: Iterable<T>, setB: Iterable<T>): Set<T> {\n  const difference = new Set<T>(setA);\n  for (const elem of setB) {\n    difference.delete(elem);\n  }\n  return difference;\n}\n\nconst HAS_OWN = (object: unknown, prop: string) =>\n  Object.prototype.hasOwnProperty.call(object, prop);\n\nexport function isRecord<T extends readonly string[]>(\n  value: unknown,\n  requiredKeys: T\n): value is Record<T[number], any>;\nexport function isRecord(value: unknown): value is Record<string, any>;\nexport function isRecord(\n  value: unknown,\n  requiredKeys: string[] | undefined = undefined\n): value is Record<string, any> {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor && ctor.prototype) {\n    if (!isObject(ctor.prototype)) {\n      return false;\n    }\n\n    // Check to see if some method exists from the Object exists\n    if (!HAS_OWN(ctor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  }\n\n  if (requiredKeys) {\n    const keys = Object.keys(value as Record<string, any>);\n    return isSuperset(keys, requiredKeys);\n  }\n\n  return true;\n}\n\n/**\n * Make a deep copy of an object\n *\n * NOTE: This is not meant to be the perfect implementation of a deep copy,\n * but instead something that is good enough for the purposes of\n * command monitoring.\n */\nexport function deepCopy<T>(value: T): T {\n  if (value == null) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(item => deepCopy(item)) as unknown as T;\n  } else if (isRecord(value)) {\n    const res = {} as any;\n    for (const key in value) {\n      res[key] = deepCopy(value[key]);\n    }\n    return res;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor) {\n    switch (ctor.name.toLowerCase()) {\n      case 'date':\n        return new ctor(Number(value));\n      case 'map':\n        return new Map(value as any) as unknown as T;\n      case 'set':\n        return new Set(value as any) as unknown as T;\n      case 'buffer':\n        return Buffer.from(value as unknown as Buffer) as unknown as T;\n    }\n  }\n\n  return value;\n}\n\ntype ListNode<T> = {\n  value: T;\n  next: ListNode<T> | HeadNode<T>;\n  prev: ListNode<T> | HeadNode<T>;\n};\n\ntype HeadNode<T> = {\n  value: null;\n  next: ListNode<T>;\n  prev: ListNode<T>;\n};\n\n/**\n * When a list is empty the head is a reference with pointers to itself\n * So this type represents that self referential state\n */\ntype EmptyNode = {\n  value: null;\n  next: EmptyNode;\n  prev: EmptyNode;\n};\n\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nexport class List<T = unknown> {\n  private readonly head: HeadNode<T> | EmptyNode;\n  private count: number;\n\n  get length() {\n    return this.count;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'List' as const;\n  }\n\n  constructor() {\n    this.count = 0;\n\n    // this is carefully crafted:\n    // declaring a complete and consistently key ordered\n    // object is beneficial to the runtime optimizations\n    this.head = {\n      next: null,\n      prev: null,\n      value: null\n    } as unknown as EmptyNode;\n    this.head.next = this.head;\n    this.head.prev = this.head;\n  }\n\n  toArray() {\n    return Array.from(this);\n  }\n\n  toString() {\n    return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n  }\n\n  *[Symbol.iterator](): Generator<T, void, void> {\n    for (const node of this.nodes()) {\n      yield node.value;\n    }\n  }\n\n  private *nodes(): Generator<ListNode<T>, void, void> {\n    let ptr: HeadNode<T> | ListNode<T> | EmptyNode = this.head.next;\n    while (ptr !== this.head) {\n      // Save next before yielding so that we make removing within iteration safe\n      const { next } = ptr as ListNode<T>;\n      yield ptr as ListNode<T>;\n      ptr = next;\n    }\n  }\n\n  /** Insert at end of list */\n  push(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head as HeadNode<T>,\n      prev: this.head.prev as ListNode<T>,\n      value\n    };\n    this.head.prev.next = newNode;\n    this.head.prev = newNode;\n  }\n\n  /** Inserts every item inside an iterable instead of the iterable itself */\n  pushMany(iterable: Iterable<T>) {\n    for (const value of iterable) {\n      this.push(value);\n    }\n  }\n\n  /** Insert at front of list */\n  unshift(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head.next as ListNode<T>,\n      prev: this.head as HeadNode<T>,\n      value\n    };\n    this.head.next.prev = newNode;\n    this.head.next = newNode;\n  }\n\n  private remove(node: ListNode<T> | EmptyNode): T | null {\n    if (node === this.head || this.length === 0) {\n      return null;\n    }\n\n    this.count -= 1;\n\n    const prevNode = node.prev;\n    const nextNode = node.next;\n    prevNode.next = nextNode;\n    nextNode.prev = prevNode;\n\n    return node.value;\n  }\n\n  /** Removes the first node at the front of the list */\n  shift(): T | null {\n    return this.remove(this.head.next);\n  }\n\n  /** Removes the last node at the end of the list */\n  pop(): T | null {\n    return this.remove(this.head.prev);\n  }\n\n  /** Iterates through the list and removes nodes where filter returns true */\n  prune(filter: (value: T) => boolean) {\n    for (const node of this.nodes()) {\n      if (filter(node.value)) {\n        this.remove(node);\n      }\n    }\n  }\n\n  clear() {\n    this.count = 0;\n    this.head.next = this.head as EmptyNode;\n    this.head.prev = this.head as EmptyNode;\n  }\n\n  /** Returns the first item in the list, does not remove */\n  first(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.next.value;\n  }\n\n  /** Returns the last item in the list, does not remove */\n  last(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.prev.value;\n  }\n}\n\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nexport class BufferPool {\n  private buffers: List<Buffer>;\n  private totalByteLength: number;\n\n  constructor() {\n    this.buffers = new List();\n    this.totalByteLength = 0;\n  }\n\n  get length(): number {\n    return this.totalByteLength;\n  }\n\n  /** Adds a buffer to the internal buffer pool list */\n  append(buffer: Buffer): void {\n    this.buffers.push(buffer);\n    this.totalByteLength += buffer.length;\n  }\n\n  /**\n   * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n   * otherwise return null. Size can be negative, caller should error check.\n   */\n  getInt32(): number | null {\n    if (this.totalByteLength < 4) {\n      return null;\n    }\n    const firstBuffer = this.buffers.first();\n    if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n      return firstBuffer.readInt32LE(0);\n    }\n\n    // Unlikely case: an int32 is split across buffers.\n    // Use read and put the returned buffer back on top\n    const top4Bytes = this.read(4);\n    const value = top4Bytes.readInt32LE(0);\n\n    // Put it back.\n    this.totalByteLength += 4;\n    this.buffers.unshift(top4Bytes);\n\n    return value;\n  }\n\n  /** Reads the requested number of bytes, optionally consuming them */\n  read(size: number): Buffer {\n    if (typeof size !== 'number' || size < 0) {\n      throw new MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n    }\n\n    // oversized request returns empty buffer\n    if (size > this.totalByteLength) {\n      return Buffer.alloc(0);\n    }\n\n    // We know we have enough, we just don't know how it is spread across chunks\n    // TODO(NODE-4732): alloc API should change based on raw option\n    const result = Buffer.allocUnsafe(size);\n\n    for (let bytesRead = 0; bytesRead < size; ) {\n      const buffer = this.buffers.shift();\n      if (buffer == null) {\n        break;\n      }\n      const bytesRemaining = size - bytesRead;\n      const bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n      const bytes = buffer.subarray(0, bytesReadable);\n\n      result.set(bytes, bytesRead);\n\n      bytesRead += bytesReadable;\n      this.totalByteLength -= bytesReadable;\n      if (bytesReadable < buffer.byteLength) {\n        this.buffers.unshift(buffer.subarray(bytesReadable));\n      }\n    }\n\n    return result;\n  }\n}\n\n/** @public */\nexport class HostAddress {\n  host: string | undefined = undefined;\n  port: number | undefined = undefined;\n  socketPath: string | undefined = undefined;\n  isIPv6 = false;\n\n  constructor(hostString: string) {\n    const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n\n    if (escapedHost.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(escapedHost);\n      return;\n    }\n\n    const urlString = `iLoveJS://${escapedHost}`;\n    let url;\n    try {\n      url = new URL(urlString);\n    } catch (urlError) {\n      const runtimeError = new MongoRuntimeError(`Unable to parse ${escapedHost} with URL`);\n      runtimeError.cause = urlError;\n      throw runtimeError;\n    }\n\n    const hostname = url.hostname;\n    const port = url.port;\n\n    let normalized = decodeURIComponent(hostname).toLowerCase();\n    if (normalized.startsWith('[') && normalized.endsWith(']')) {\n      this.isIPv6 = true;\n      normalized = normalized.substring(1, hostname.length - 1);\n    }\n\n    this.host = normalized.toLowerCase();\n\n    if (typeof port === 'number') {\n      this.port = port;\n    } else if (typeof port === 'string' && port !== '') {\n      this.port = Number.parseInt(port, 10);\n    } else {\n      this.port = 27017;\n    }\n\n    if (this.port === 0) {\n      throw new MongoParseError('Invalid port (zero) with hostname');\n    }\n    Object.freeze(this);\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new HostAddress('${this.toString()}')`;\n  }\n\n  toString(): string {\n    if (typeof this.host === 'string') {\n      if (this.isIPv6) {\n        return `[${this.host}]:${this.port}`;\n      }\n      return `${this.host}:${this.port}`;\n    }\n    return `${this.socketPath}`;\n  }\n\n  static fromString(this: void, s: string): HostAddress {\n    return new HostAddress(s);\n  }\n\n  static fromHostPort(host: string, port: number): HostAddress {\n    if (host.includes(':')) {\n      host = `[${host}]`; // IPv6 address\n    }\n    return HostAddress.fromString(`${host}:${port}`);\n  }\n\n  static fromSrvRecord({ name, port }: SrvRecord): HostAddress {\n    return HostAddress.fromHostPort(name, port);\n  }\n\n  toHostPort(): { host: string; port: number } {\n    if (this.socketPath) {\n      return { host: this.socketPath, port: 0 };\n    }\n\n    const host = this.host ?? '';\n    const port = this.port ?? 0;\n    return { host, port };\n  }\n}\n\nexport const DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk(): ObjectId {\n    return new ObjectId();\n  }\n};\n\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexport const MONGODB_WARNING_CODE = 'MONGODB DRIVER' as const;\n\n/** @internal */\nexport function emitWarning(message: string): void {\n  return process.emitWarning(message, { code: MONGODB_WARNING_CODE } as any);\n}\n\nconst emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nexport function emitWarningOnce(message: string): void {\n  if (!emittedWarnings.has(message)) {\n    emittedWarnings.add(message);\n    return emitWarning(message);\n  }\n}\n\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nexport function enumToString(en: Record<string, unknown>): string {\n  return Object.values(en).join(', ');\n}\n\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nexport function supportsRetryableWrites(server?: Server): boolean {\n  if (!server) {\n    return false;\n  }\n\n  if (server.loadBalanced) {\n    // Loadbalanced topologies will always support retry writes\n    return true;\n  }\n\n  if (server.description.logicalSessionTimeoutMinutes != null) {\n    // that supports sessions\n    if (server.description.type !== ServerType.Standalone) {\n      // and that is not a standalone\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Fisher\u2013Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nexport function shuffle<T>(sequence: Iterable<T>, limit = 0): Array<T> {\n  const items = Array.from(sequence); // shallow copy in order to never shuffle the input\n\n  if (limit > items.length) {\n    throw new MongoRuntimeError('Limit must be less than the number of items');\n  }\n\n  let remainingItemsToShuffle = items.length;\n  const lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n  while (remainingItemsToShuffle > lowerBound) {\n    // Pick a remaining element\n    const randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n    remainingItemsToShuffle -= 1;\n\n    // And swap it with the current element\n    const swapHold = items[remainingItemsToShuffle];\n    items[remainingItemsToShuffle] = items[randomIndex];\n    items[randomIndex] = swapHold;\n  }\n\n  return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\n\n// TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nexport function commandSupportsReadConcern(command: Document, options?: Document): boolean {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n\n  if (\n    command.mapReduce &&\n    options &&\n    options.out &&\n    (options.out.inline === 1 || options.out === 'inline')\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/** A utility function to get the instance of mongodb-client-encryption, if it exists. */\nexport function getMongoDBClientEncryption(): {\n  extension: (mdb: unknown) => {\n    AutoEncrypter: any;\n    ClientEncryption: any;\n  };\n} | null {\n  let mongodbClientEncryption = null;\n\n  // NOTE(NODE-4254): This is to get around the circular dependency between\n  // mongodb-client-encryption and the driver in the test scenarios.\n  if (\n    typeof process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE === 'string' &&\n    process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE.length > 0\n  ) {\n    try {\n      // NOTE(NODE-3199): Ensure you always wrap an optional require literally in the try block\n      // Cannot be moved to helper utility function, bundlers search and replace the actual require call\n      // in a way that makes this line throw at bundle time, not runtime, catching here will make bundling succeed\n      mongodbClientEncryption = require(process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE);\n    } catch {\n      // ignore\n    }\n  } else {\n    try {\n      // NOTE(NODE-3199): Ensure you always wrap an optional require literally in the try block\n      // Cannot be moved to helper utility function, bundlers search and replace the actual require call\n      // in a way that makes this line throw at bundle time, not runtime, catching here will make bundling succeed\n      mongodbClientEncryption = require('mongodb-client-encryption');\n    } catch {\n      // ignore\n    }\n  }\n\n  return mongodbClientEncryption;\n}\n\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nexport function compareObjectId(oid1?: ObjectId | null, oid2?: ObjectId | null): 0 | 1 | -1 {\n  if (oid1 == null && oid2 == null) {\n    return 0;\n  }\n\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  return ByteUtils.compare(oid1.id, oid2.id);\n}\n\nexport function parseInteger(value: unknown): number | null {\n  if (typeof value === 'number') return Math.trunc(value);\n  const parsedValue = Number.parseInt(String(value), 10);\n\n  return Number.isNaN(parsedValue) ? null : parsedValue;\n}\n\nexport function parseUnsignedInteger(value: unknown): number | null {\n  const parsedInt = parseInteger(value);\n\n  return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\n\n/**\n * Determines whether a provided address matches the provided parent domain.\n *\n * If a DNS server were to become compromised SRV records would still need to\n * advertise addresses that are under the same domain as the srvHost.\n *\n * @param address - The address to check against a domain\n * @param srvHost - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nexport function matchesParentDomain(address: string, srvHost: string): boolean {\n  // Remove trailing dot if exists on either the resolved address or the srv hostname\n  const normalizedAddress = address.endsWith('.') ? address.slice(0, address.length - 1) : address;\n  const normalizedSrvHost = srvHost.endsWith('.') ? srvHost.slice(0, srvHost.length - 1) : srvHost;\n\n  const allCharacterBeforeFirstDot = /^.*?\\./;\n  // Remove all characters before first dot\n  // Add leading dot back to string so\n  //   an srvHostDomain = '.trusted.site'\n  //   will not satisfy an addressDomain that endsWith '.fake-trusted.site'\n  const addressDomain = `.${normalizedAddress.replace(allCharacterBeforeFirstDot, '')}`;\n  const srvHostDomain = `.${normalizedSrvHost.replace(allCharacterBeforeFirstDot, '')}`;\n\n  return addressDomain.endsWith(srvHostDomain);\n}\n\ninterface RequestOptions {\n  json?: boolean;\n  method?: string;\n  timeout?: number;\n  headers?: http.OutgoingHttpHeaders;\n}\n\nexport async function request(uri: string): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json?: true } & RequestOptions\n): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json: false } & RequestOptions\n): Promise<string>;\nexport async function request(\n  uri: string,\n  options: RequestOptions = {}\n): Promise<string | Record<string, any>> {\n  return new Promise<string | Record<string, any>>((resolve, reject) => {\n    const requestOptions = {\n      method: 'GET',\n      timeout: 10000,\n      json: true,\n      ...url.parse(uri),\n      ...options\n    };\n\n    const req = http.request(requestOptions, res => {\n      res.setEncoding('utf8');\n\n      let data = '';\n      res.on('data', d => {\n        data += d;\n      });\n\n      res.once('end', () => {\n        if (options.json === false) {\n          resolve(data);\n          return;\n        }\n\n        try {\n          const parsed = JSON.parse(data);\n          resolve(parsed);\n        } catch {\n          // TODO(NODE-3483)\n          reject(new MongoRuntimeError(`Invalid JSON response: \"${data}\"`));\n        }\n      });\n    });\n\n    req.once('timeout', () =>\n      req.destroy(\n        new MongoNetworkTimeoutError(\n          `Network request to ${uri} timed out after ${options.timeout} ms`\n        )\n      )\n    );\n    req.once('error', error => reject(error));\n    req.end();\n  });\n}\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport const ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n} as const);\n\n/** @public */\nexport type ExplainVerbosity = string;\n\n/**\n * For backwards compatibility, true is interpreted as \"allPlansExecution\"\n * and false as \"queryPlanner\". Prior to server version 3.6, aggregate()\n * ignores the verbosity parameter and executes in \"queryPlanner\".\n * @public\n */\nexport type ExplainVerbosityLike = ExplainVerbosity | boolean;\n\n/** @public */\nexport interface ExplainOptions {\n  /** Specifies the verbosity mode for the explain output. */\n  explain?: ExplainVerbosityLike;\n}\n\n/** @internal */\nexport class Explain {\n  verbosity: ExplainVerbosity;\n\n  constructor(verbosity: ExplainVerbosityLike) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity\n        ? ExplainVerbosity.allPlansExecution\n        : ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n\n  static fromOptions(options?: ExplainOptions): Explain | undefined {\n    if (options?.explain == null) return;\n\n    const explain = options.explain;\n    if (typeof explain === 'boolean' || typeof explain === 'string') {\n      return new Explain(explain);\n    }\n\n    throw new MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n  }\n}\n", "import { MongoCompatibilityError, MongoInvalidArgumentError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport { ServerType, TopologyType } from './common';\nimport type { ServerDescription, TagSet } from './server_description';\nimport type { TopologyDescription } from './topology_description';\n\n// max staleness constants\nconst IDLE_WRITE_PERIOD = 10000;\nconst SMALLEST_MAX_STALENESS_SECONDS = 90;\n\n//  Minimum version to try writes on secondaries.\nexport const MIN_SECONDARY_WRITE_WIRE_VERSION = 13;\n\n/** @internal */\nexport type ServerSelector = (\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n) => ServerDescription[];\n\n/**\n * Returns a server selector that selects for writable servers\n */\nexport function writableServerSelector(): ServerSelector {\n  return (\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] =>\n    latencyWindowReducer(\n      topologyDescription,\n      servers.filter((s: ServerDescription) => s.isWritable)\n    );\n}\n\n/**\n * The purpose of this selector is to select the same server, only\n * if it is in a state that it can have commands sent to it.\n */\nexport function sameServerSelector(description?: ServerDescription): ServerSelector {\n  return (\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] => {\n    if (!description) return [];\n    // Filter the servers to match the provided description only if\n    // the type is not unknown.\n    return servers.filter(sd => {\n      return sd.address === description.address && sd.type !== ServerType.Unknown;\n    });\n  };\n}\n\n/**\n * Returns a server selector that uses a read preference to select a\n * server potentially for a write on a secondary.\n */\nexport function secondaryWritableServerSelector(\n  wireVersion?: number,\n  readPreference?: ReadPreference\n): ServerSelector {\n  // If server version < 5.0, read preference always primary.\n  // If server version >= 5.0...\n  // - If read preference is supplied, use that.\n  // - If no read preference is supplied, use primary.\n  if (\n    !readPreference ||\n    !wireVersion ||\n    (wireVersion && wireVersion < MIN_SECONDARY_WRITE_WIRE_VERSION)\n  ) {\n    return readPreferenceServerSelector(ReadPreference.primary);\n  }\n  return readPreferenceServerSelector(readPreference);\n}\n\n/**\n * Reduces the passed in array of servers by the rules of the \"Max Staleness\" specification\n * found here: https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.rst\n *\n * @param readPreference - The read preference providing max staleness guidance\n * @param topologyDescription - The topology description\n * @param servers - The list of server descriptions to be reduced\n * @returns The list of servers that satisfy the requirements of max staleness\n */\nfunction maxStalenessReducer(\n  readPreference: ReadPreference,\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (readPreference.maxStalenessSeconds == null || readPreference.maxStalenessSeconds < 0) {\n    return servers;\n  }\n\n  const maxStaleness = readPreference.maxStalenessSeconds;\n  const maxStalenessVariance =\n    (topologyDescription.heartbeatFrequencyMS + IDLE_WRITE_PERIOD) / 1000;\n  if (maxStaleness < maxStalenessVariance) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${maxStalenessVariance} seconds`\n    );\n  }\n\n  if (maxStaleness < SMALLEST_MAX_STALENESS_SECONDS) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${SMALLEST_MAX_STALENESS_SECONDS} seconds`\n    );\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetWithPrimary) {\n    const primary: ServerDescription = Array.from(topologyDescription.servers.values()).filter(\n      primaryFilter\n    )[0];\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        server.lastUpdateTime -\n        server.lastWriteDate -\n        (primary.lastUpdateTime - primary.lastWriteDate) +\n        topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetNoPrimary) {\n    if (servers.length === 0) {\n      return servers;\n    }\n\n    const sMax = servers.reduce((max: ServerDescription, s: ServerDescription) =>\n      s.lastWriteDate > max.lastWriteDate ? s : max\n    );\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        sMax.lastWriteDate - server.lastWriteDate + topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  return servers;\n}\n\n/**\n * Determines whether a server's tags match a given set of tags\n *\n * @param tagSet - The requested tag set to match\n * @param serverTags - The server's tags\n */\nfunction tagSetMatch(tagSet: TagSet, serverTags: TagSet) {\n  const keys = Object.keys(tagSet);\n  const serverTagKeys = Object.keys(serverTags);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (serverTagKeys.indexOf(key) === -1 || serverTags[key] !== tagSet[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Reduces a set of server descriptions based on tags requested by the read preference\n *\n * @param readPreference - The read preference providing the requested tags\n * @param servers - The list of server descriptions to reduce\n * @returns The list of servers matching the requested tags\n */\nfunction tagSetReducer(\n  readPreference: ReadPreference,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (\n    readPreference.tags == null ||\n    (Array.isArray(readPreference.tags) && readPreference.tags.length === 0)\n  ) {\n    return servers;\n  }\n\n  for (let i = 0; i < readPreference.tags.length; ++i) {\n    const tagSet = readPreference.tags[i];\n    const serversMatchingTagset = servers.reduce(\n      (matched: ServerDescription[], server: ServerDescription) => {\n        if (tagSetMatch(tagSet, server.tags)) matched.push(server);\n        return matched;\n      },\n      []\n    );\n\n    if (serversMatchingTagset.length) {\n      return serversMatchingTagset;\n    }\n  }\n\n  return [];\n}\n\n/**\n * Reduces a list of servers to ensure they fall within an acceptable latency window. This is\n * further specified in the \"Server Selection\" specification, found here:\n * https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst\n *\n * @param topologyDescription - The topology description\n * @param servers - The list of servers to reduce\n * @returns The servers which fall within an acceptable latency window\n */\nfunction latencyWindowReducer(\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  const low = servers.reduce(\n    (min: number, server: ServerDescription) =>\n      min === -1 ? server.roundTripTime : Math.min(server.roundTripTime, min),\n    -1\n  );\n\n  const high = low + topologyDescription.localThresholdMS;\n  return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n    if (server.roundTripTime <= high && server.roundTripTime >= low) result.push(server);\n    return result;\n  }, []);\n}\n\n// filters\nfunction primaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSPrimary;\n}\n\nfunction secondaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary;\n}\n\nfunction nearestFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary || server.type === ServerType.RSPrimary;\n}\n\nfunction knownFilter(server: ServerDescription): boolean {\n  return server.type !== ServerType.Unknown;\n}\n\nfunction loadBalancerFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.LoadBalancer;\n}\n\n/**\n * Returns a function which selects servers based on a provided read preference\n *\n * @param readPreference - The read preference to select with\n */\nexport function readPreferenceServerSelector(readPreference: ReadPreference): ServerSelector {\n  if (!readPreference.isValid()) {\n    throw new MongoInvalidArgumentError('Invalid read preference specified');\n  }\n\n  return (\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] => {\n    const commonWireVersion = topologyDescription.commonWireVersion;\n    if (\n      commonWireVersion &&\n      readPreference.minWireVersion &&\n      readPreference.minWireVersion > commonWireVersion\n    ) {\n      throw new MongoCompatibilityError(\n        `Minimum wire version '${readPreference.minWireVersion}' required, but found '${commonWireVersion}'`\n      );\n    }\n\n    if (topologyDescription.type === TopologyType.LoadBalanced) {\n      return servers.filter(loadBalancerFilter);\n    }\n\n    if (topologyDescription.type === TopologyType.Unknown) {\n      return [];\n    }\n\n    if (\n      topologyDescription.type === TopologyType.Single ||\n      topologyDescription.type === TopologyType.Sharded\n    ) {\n      return latencyWindowReducer(topologyDescription, servers.filter(knownFilter));\n    }\n\n    const mode = readPreference.mode;\n    if (mode === ReadPreference.PRIMARY) {\n      return servers.filter(primaryFilter);\n    }\n\n    if (mode === ReadPreference.PRIMARY_PREFERRED) {\n      const result = servers.filter(primaryFilter);\n      if (result.length) {\n        return result;\n      }\n    }\n\n    const filter = mode === ReadPreference.NEAREST ? nearestFilter : secondaryFilter;\n    const selectedServers = latencyWindowReducer(\n      topologyDescription,\n      tagSetReducer(\n        readPreference,\n        maxStalenessReducer(readPreference, topologyDescription, servers.filter(filter))\n      )\n    );\n\n    if (mode === ReadPreference.SECONDARY_PREFERRED && selectedServers.length === 0) {\n      return servers.filter(primaryFilter);\n    }\n\n    return selectedServers;\n  };\n}\n", "import { promisify } from 'util';\n\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from '../bson';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\n\nexport const Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n  MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER')\n} as const;\n\n/** @public */\nexport type Hint = string | Document;\n\nexport interface OperationConstructor extends Function {\n  aspects?: Set<symbol>;\n}\n\n/** @public */\nexport interface OperationOptions extends BSONSerializeOptions {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  willRetryWrite?: boolean;\n\n  /** The preferred read preference (ReadPreference.primary, ReadPreference.primary_preferred, ReadPreference.secondary, ReadPreference.secondary_preferred, ReadPreference.nearest). */\n  readPreference?: ReadPreferenceLike;\n\n  /** @internal Hints to `executeOperation` that this operation should not unpin on an ended transaction */\n  bypassPinningCheck?: boolean;\n  omitReadPreference?: boolean;\n}\n\n/** @internal */\nconst kSession = Symbol('session');\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nexport abstract class AbstractOperation<TResult = any> {\n  ns!: MongoDBNamespace;\n  cmd!: Document;\n  readPreference: ReadPreference;\n  server!: Server;\n  bypassPinningCheck: boolean;\n  trySecondaryWrite: boolean;\n\n  // BSON serialization options\n  bsonOptions?: BSONSerializeOptions;\n\n  options: OperationOptions;\n\n  [kSession]: ClientSession | undefined;\n\n  constructor(options: OperationOptions = {}) {\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\n      ? ReadPreference.primary\n      : ReadPreference.fromOptions(options) ?? ReadPreference.primary;\n\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = resolveBSONOptions(options);\n\n    this[kSession] = options.session != null ? options.session : undefined;\n\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n    this.trySecondaryWrite = false;\n  }\n\n  abstract execute(server: Server, session: ClientSession | undefined): Promise<TResult>;\n\n  hasAspect(aspect: symbol): boolean {\n    const ctor = this.constructor as OperationConstructor;\n    if (ctor.aspects == null) {\n      return false;\n    }\n\n    return ctor.aspects.has(aspect);\n  }\n\n  get session(): ClientSession | undefined {\n    return this[kSession];\n  }\n\n  clearSession() {\n    this[kSession] = undefined;\n  }\n\n  get canRetryRead(): boolean {\n    return true;\n  }\n\n  get canRetryWrite(): boolean {\n    return true;\n  }\n}\n\n/** @internal */\nexport abstract class AbstractCallbackOperation<TResult = any> extends AbstractOperation {\n  constructor(options: OperationOptions = {}) {\n    super(options);\n  }\n\n  execute(server: Server, session: ClientSession | undefined): Promise<TResult> {\n    return promisify((callback: (e: Error, r: TResult) => void) => {\n      this.executeCallback(server, session, callback as any);\n    })();\n  }\n\n  protected abstract executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<TResult>\n  ): void;\n}\nexport function defineAspects(\n  operation: OperationConstructor,\n  aspects: symbol | symbol[] | Set<symbol>\n): Set<symbol> {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n\n  return aspects;\n}\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport { MongoInvalidArgumentError } from '../error';\nimport { Explain, type ExplainOptions } from '../explain';\nimport { ReadConcern } from '../read_concern';\nimport type { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport { MIN_SECONDARY_WRITE_WIRE_VERSION } from '../sdam/server_selection';\nimport type { ClientSession } from '../sessions';\nimport {\n  type Callback,\n  commandSupportsReadConcern,\n  decorateWithExplain,\n  maxWireVersion,\n  MongoDBNamespace\n} from '../utils';\nimport { WriteConcern, type WriteConcernOptions } from '../write_concern';\nimport type { ReadConcernLike } from './../read_concern';\nimport { AbstractCallbackOperation, Aspect, type OperationOptions } from './operation';\n\n/** @public */\nexport interface CollationOptions {\n  locale: string;\n  caseLevel?: boolean;\n  caseFirst?: string;\n  strength?: number;\n  numericOrdering?: boolean;\n  alternate?: string;\n  maxVariable?: string;\n  backwards?: boolean;\n  normalization?: boolean;\n}\n\n/** @public */\nexport interface CommandOperationOptions\n  extends OperationOptions,\n    WriteConcernOptions,\n    ExplainOptions {\n  /** Specify a read concern and level for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** Collation */\n  collation?: CollationOptions;\n  maxTimeMS?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n\n  // Admin command overrides.\n  dbName?: string;\n  authdb?: string;\n  noResponse?: boolean;\n}\n\n/** @internal */\nexport interface OperationParent {\n  s: { namespace: MongoDBNamespace };\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  readPreference?: ReadPreference;\n  bsonOptions?: BSONSerializeOptions;\n}\n\n/** @internal */\nexport abstract class CommandOperation<T> extends AbstractCallbackOperation<T> {\n  override options: CommandOperationOptions;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  explain?: Explain;\n\n  constructor(parent?: OperationParent, options?: CommandOperationOptions) {\n    super(options);\n    this.options = options ?? {};\n\n    // NOTE: this was explicitly added for the add/remove user operations, it's likely\n    //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n    //       as a parent?\n    const dbNameOverride = options?.dbName || options?.authdb;\n    if (dbNameOverride) {\n      this.ns = new MongoDBNamespace(dbNameOverride, '$cmd');\n    } else {\n      this.ns = parent\n        ? parent.s.namespace.withCollection('$cmd')\n        : new MongoDBNamespace('admin', '$cmd');\n    }\n\n    this.readConcern = ReadConcern.fromOptions(options);\n    this.writeConcern = WriteConcern.fromOptions(options);\n\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n    } else if (options?.explain != null) {\n      throw new MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n    }\n  }\n\n  override get canRetryWrite(): boolean {\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      return this.explain == null;\n    }\n    return true;\n  }\n\n  executeCommand(\n    server: Server,\n    session: ClientSession | undefined,\n    cmd: Document,\n    callback: Callback\n  ): void {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n\n    const options = {\n      ...this.options,\n      ...this.bsonOptions,\n      readPreference: this.readPreference,\n      session\n    };\n\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, { readConcern: this.readConcern });\n    }\n\n    if (this.trySecondaryWrite && serverWireVersion < MIN_SECONDARY_WRITE_WIRE_VERSION) {\n      options.omitReadPreference = true;\n    }\n\n    if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION) && !inTransaction) {\n      WriteConcern.apply(cmd, this.writeConcern);\n    }\n\n    if (\n      options.collation &&\n      typeof options.collation === 'object' &&\n      !this.hasAspect(Aspect.SKIP_COLLATION)\n    ) {\n      Object.assign(cmd, { collation: options.collation });\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\n      cmd = decorateWithExplain(cmd, this.explain);\n    }\n\n    server.command(this.ns, cmd, options, callback);\n  }\n}\n", "import * as crypto from 'crypto';\n\nimport type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, emitWarningOnce, getTopology } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/**\n * @public\n * @deprecated Use the createUser command directly instead.\n */\nexport interface RoleSpecification {\n  /**\n   * A role grants privileges to perform sets of actions on defined resources.\n   * A given role applies to the database on which it is defined and can grant access down to a collection level of granularity.\n   */\n  role: string;\n  /** The database this user's role should effect. */\n  db: string;\n}\n\n/**\n * @public\n * @deprecated Use the createUser command directly instead.\n */\nexport interface AddUserOptions extends CommandOperationOptions {\n  /** Roles associated with the created user */\n  roles?: string | string[] | RoleSpecification | RoleSpecification[];\n  /** Custom data associated with the user (only Mongodb 2.6 or higher) */\n  customData?: Document;\n}\n\n/** @internal */\nexport class AddUserOperation extends CommandOperation<Document> {\n  override options: AddUserOptions;\n  db: Db;\n  username: string;\n  password?: string;\n\n  constructor(db: Db, username: string, password: string | undefined, options?: AddUserOptions) {\n    super(db, options);\n\n    this.db = db;\n    this.username = username;\n    this.password = password;\n    this.options = options ?? {};\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const db = this.db;\n    const username = this.username;\n    const password = this.password;\n    const options = this.options;\n\n    // Error out if digestPassword set\n    // v5 removed the digestPassword option from AddUserOptions but we still want to throw\n    // an error when digestPassword is provided.\n    if ('digestPassword' in options && options.digestPassword != null) {\n      return callback(\n        new MongoInvalidArgumentError(\n          'Option \"digestPassword\" not supported via addUser, use db.command(...) instead'\n        )\n      );\n    }\n\n    let roles;\n    if (!options.roles || (Array.isArray(options.roles) && options.roles.length === 0)) {\n      emitWarningOnce(\n        'Creating a user without roles is deprecated. Defaults to \"root\" if db is \"admin\" or \"dbOwner\" otherwise'\n      );\n      if (db.databaseName.toLowerCase() === 'admin') {\n        roles = ['root'];\n      } else {\n        roles = ['dbOwner'];\n      }\n    } else {\n      roles = Array.isArray(options.roles) ? options.roles : [options.roles];\n    }\n\n    let topology;\n    try {\n      topology = getTopology(db);\n    } catch (error) {\n      return callback(error);\n    }\n\n    const digestPassword = topology.lastHello().maxWireVersion >= 7;\n\n    let userPassword = password;\n\n    if (!digestPassword) {\n      // Use node md5 generator\n      const md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(`${username}:mongo:${password}`);\n      userPassword = md5.digest('hex');\n    }\n\n    // Build the command to execute\n    const command: Document = {\n      createUser: username,\n      customData: options.customData || {},\n      roles: roles,\n      digestPassword\n    };\n\n    // No password\n    if (typeof password === 'string') {\n      command.pwd = userPassword;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\ndefineAspects(AddUserOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport {\n  isRetryableReadError,\n  isRetryableWriteError,\n  MongoCompatibilityError,\n  MONGODB_ERROR_CODES,\n  MongoError,\n  MongoErrorLabel,\n  MongoExpiredSessionError,\n  MongoNetworkError,\n  MongoNotConnectedError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError\n} from '../error';\nimport type { MongoClient } from '../mongo_client';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport {\n  sameServerSelector,\n  secondaryWritableServerSelector,\n  type ServerSelector\n} from '../sdam/server_selection';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maybeCallback, supportsRetryableWrites } from '../utils';\nimport { AbstractCallbackOperation, Aspect } from './operation';\n\nconst MMAPv1_RETRY_WRITES_ERROR_CODE = MONGODB_ERROR_CODES.IllegalOperation;\nconst MMAPv1_RETRY_WRITES_ERROR_MESSAGE =\n  'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.';\n\ntype ResultTypeFromOperation<TOperation> = TOperation extends AbstractCallbackOperation<infer K>\n  ? K\n  : never;\n\n/** @internal */\nexport interface ExecutionResult {\n  /** The server selected for the operation */\n  server: Server;\n  /** The session used for this operation, may be implicitly created */\n  session?: ClientSession;\n  /** The raw server response for the operation */\n  response: Document;\n}\n\n/**\n * Executes the given operation with provided arguments.\n * @internal\n *\n * @remarks\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param topology - The topology to execute this operation on\n * @param operation - The operation to execute\n * @param callback - The command result callback\n */\nexport function executeOperation<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T): Promise<TResult>;\nexport function executeOperation<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T, callback: Callback<TResult>): void;\nexport function executeOperation<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T, callback?: Callback<TResult>): Promise<TResult> | void;\nexport function executeOperation<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T, callback?: Callback<TResult>): Promise<TResult> | void {\n  return maybeCallback(() => executeOperationAsync(client, operation), callback);\n}\n\nasync function executeOperationAsync<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T): Promise<TResult> {\n  if (!(operation instanceof AbstractCallbackOperation)) {\n    // TODO(NODE-3483): Extend MongoRuntimeError\n    throw new MongoRuntimeError('This method requires a valid operation instance');\n  }\n\n  if (client.topology == null) {\n    // Auto connect on operation\n    if (client.s.hasBeenClosed) {\n      throw new MongoNotConnectedError('Client must be connected before running operations');\n    }\n    client.s.options[Symbol.for('@@mdb.skipPingOnConnect')] = true;\n    try {\n      await client.connect();\n    } finally {\n      delete client.s.options[Symbol.for('@@mdb.skipPingOnConnect')];\n    }\n  }\n\n  const { topology } = client;\n  if (topology == null) {\n    throw new MongoRuntimeError('client.connect did not create a topology but also did not throw');\n  }\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session = operation.session;\n  let owner: symbol | undefined;\n\n  if (session == null) {\n    owner = Symbol();\n    session = client.startSession({ owner, explicit: false });\n  } else if (session.hasEnded) {\n    throw new MongoExpiredSessionError('Use of expired sessions is not permitted');\n  } else if (session.snapshotEnabled && !topology.capabilities.supportsSnapshotReads) {\n    throw new MongoCompatibilityError('Snapshot reads require MongoDB 5.0 or later');\n  }\n\n  const readPreference = operation.readPreference ?? ReadPreference.primary;\n  const inTransaction = !!session?.inTransaction();\n\n  if (inTransaction && !readPreference.equals(ReadPreference.primary)) {\n    throw new MongoTransactionError(\n      `Read preference in a transaction must be primary, not: ${readPreference.mode}`\n    );\n  }\n\n  if (session?.isPinned && session.transaction.isCommitted && !operation.bypassPinningCheck) {\n    session.unpin();\n  }\n\n  let selector: ReadPreference | ServerSelector;\n\n  if (operation.hasAspect(Aspect.MUST_SELECT_SAME_SERVER)) {\n    // GetMore and KillCursor operations must always select the same server, but run through\n    // server selection to potentially force monitor checks if the server is\n    // in an unknown state.\n    selector = sameServerSelector(operation.server?.description);\n  } else if (operation.trySecondaryWrite) {\n    // If operation should try to write to secondary use the custom server selector\n    // otherwise provide the read preference.\n    selector = secondaryWritableServerSelector(topology.commonWireVersion, readPreference);\n  } else {\n    selector = readPreference;\n  }\n\n  const server = await topology.selectServerAsync(selector, { session });\n\n  if (session == null) {\n    // No session also means it is not retryable, early exit\n    return operation.execute(server, undefined);\n  }\n\n  if (!operation.hasAspect(Aspect.RETRYABLE)) {\n    // non-retryable operation, early exit\n    try {\n      return await operation.execute(server, session);\n    } finally {\n      if (session?.owner != null && session.owner === owner) {\n        await session.endSession().catch(() => null);\n      }\n    }\n  }\n\n  const willRetryRead = topology.s.options.retryReads && !inTransaction && operation.canRetryRead;\n\n  const willRetryWrite =\n    topology.s.options.retryWrites &&\n    !inTransaction &&\n    supportsRetryableWrites(server) &&\n    operation.canRetryWrite;\n\n  const hasReadAspect = operation.hasAspect(Aspect.READ_OPERATION);\n  const hasWriteAspect = operation.hasAspect(Aspect.WRITE_OPERATION);\n  const willRetry = (hasReadAspect && willRetryRead) || (hasWriteAspect && willRetryWrite);\n\n  if (hasWriteAspect && willRetryWrite) {\n    operation.options.willRetryWrite = true;\n    session.incrementTransactionNumber();\n  }\n\n  try {\n    return await operation.execute(server, session);\n  } catch (operationError) {\n    if (willRetry && operationError instanceof MongoError) {\n      return await retryOperation(operation, operationError, {\n        session,\n        topology,\n        selector\n      });\n    }\n    throw operationError;\n  } finally {\n    if (session?.owner != null && session.owner === owner) {\n      await session.endSession().catch(() => null);\n    }\n  }\n}\n\n/** @internal */\ntype RetryOptions = {\n  session: ClientSession;\n  topology: Topology;\n  selector: ReadPreference | ServerSelector;\n};\n\nasync function retryOperation<\n  T extends AbstractCallbackOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(\n  operation: T,\n  originalError: MongoError,\n  { session, topology, selector }: RetryOptions\n): Promise<TResult> {\n  const isWriteOperation = operation.hasAspect(Aspect.WRITE_OPERATION);\n  const isReadOperation = operation.hasAspect(Aspect.READ_OPERATION);\n\n  if (isWriteOperation && originalError.code === MMAPv1_RETRY_WRITES_ERROR_CODE) {\n    throw new MongoServerError({\n      message: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n      errmsg: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n      originalError\n    });\n  }\n\n  if (isWriteOperation && !isRetryableWriteError(originalError)) {\n    throw originalError;\n  }\n\n  if (isReadOperation && !isRetryableReadError(originalError)) {\n    throw originalError;\n  }\n\n  if (\n    originalError instanceof MongoNetworkError &&\n    session.isPinned &&\n    !session.inTransaction() &&\n    operation.hasAspect(Aspect.CURSOR_CREATING)\n  ) {\n    // If we have a cursor and the initial command fails with a network error,\n    // we can retry it on another connection. So we need to check it back in, clear the\n    // pool for the service id, and retry again.\n    session.unpin({ force: true, forceClear: true });\n  }\n\n  // select a new server, and attempt to retry the operation\n  const server = await topology.selectServerAsync(selector, { session });\n\n  if (isWriteOperation && !supportsRetryableWrites(server)) {\n    throw new MongoUnexpectedServerResponseError(\n      'Selected server does not support retryable writes'\n    );\n  }\n\n  try {\n    return await operation.execute(server, session);\n  } catch (retryError) {\n    if (\n      retryError instanceof MongoError &&\n      retryError.hasErrorLabel(MongoErrorLabel.NoWritesPerformed)\n    ) {\n      throw originalError;\n    }\n    throw retryError;\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maxWireVersion, MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface ListDatabasesResult {\n  databases: ({ name: string; sizeOnDisk?: number; empty?: boolean } & Document)[];\n  totalSize?: number;\n  totalSizeMb?: number;\n  ok: 1 | 0;\n}\n\n/** @public */\nexport interface ListDatabasesOptions extends CommandOperationOptions {\n  /** A query predicate that determines which databases are listed */\n  filter?: Document;\n  /** A flag to indicate whether the command should return just the database names, or return both database names and size information */\n  nameOnly?: boolean;\n  /** A flag that determines which databases are returned based on the user privileges when access control is enabled */\n  authorizedDatabases?: boolean;\n}\n\n/** @internal */\nexport class ListDatabasesOperation extends CommandOperation<ListDatabasesResult> {\n  override options: ListDatabasesOptions;\n\n  constructor(db: Db, options?: ListDatabasesOptions) {\n    super(db, options);\n    this.options = options ?? {};\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<ListDatabasesResult>\n  ): void {\n    const cmd: Document = { listDatabases: 1 };\n\n    if (typeof this.options.nameOnly === 'boolean') {\n      cmd.nameOnly = this.options.nameOnly;\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (maxWireVersion(server) >= 9 && this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, callback);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type RemoveUserOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RemoveUserOperation extends CommandOperation<boolean> {\n  override options: RemoveUserOptions;\n  username: string;\n\n  constructor(db: Db, username: string, options: RemoveUserOptions) {\n    super(db, options);\n    this.options = options;\n    this.username = username;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    super.executeCommand(server, session, { dropUser: this.username }, err => {\n      callback(err, err ? false : true);\n    });\n  }\n}\n\ndefineAspects(RemoveUserOperation, [Aspect.WRITE_OPERATION]);\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, MongoDBNamespace } from '../utils';\nimport { CommandOperation, type OperationParent } from './command';\n\n/** @public */\nexport type RunCommandOptions = {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  /** The read preference */\n  readPreference?: ReadPreferenceLike;\n\n  // The following options were \"accidentally\" supported\n  // Since the options are generally supported through inheritance\n\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  willRetryWrite?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  omitReadPreference?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  writeConcern?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  explain?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  readConcern?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  collation?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  maxTimeMS?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  comment?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  retryWrites?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  dbName?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  authdb?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  noResponse?: any;\n\n  /** @internal Used for transaction commands */\n  bypassPinningCheck?: boolean;\n} & BSONSerializeOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends CommandOperation<T> {\n  override options: RunCommandOptions;\n  command: Document;\n\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, command, options);\n    this.ns = new MongoDBNamespace('admin');\n  }\n}\n", "import type { Admin } from '../admin';\nimport type { Document } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\n/** @public */\nexport interface ValidateCollectionOptions extends CommandOperationOptions {\n  /** Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+) */\n  background?: boolean;\n}\n\n/** @internal */\nexport class ValidateCollectionOperation extends CommandOperation<Document> {\n  override options: ValidateCollectionOptions;\n  collectionName: string;\n  command: Document;\n\n  constructor(admin: Admin, collectionName: string, options: ValidateCollectionOptions) {\n    // Decorate command with extra options\n    const command: Document = { validate: collectionName };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = (options as Document)[keys[i]];\n      }\n    }\n\n    super(admin.s.db, options);\n    this.options = options;\n    this.command = command;\n    this.collectionName = collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const collectionName = this.collectionName;\n\n    super.executeCommand(server, session, this.command, (err, doc) => {\n      if (err != null) return callback(err);\n\n      // TODO(NODE-3483): Replace these with MongoUnexpectedServerResponseError\n      if (doc.ok === 0) return callback(new MongoRuntimeError('Error with validate command'));\n      if (doc.result != null && typeof doc.result !== 'string')\n        return callback(new MongoRuntimeError('Error with validation data'));\n      if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n        return callback(new MongoRuntimeError(`Invalid collection ${collectionName}`));\n      if (doc.valid != null && !doc.valid)\n        return callback(new MongoRuntimeError(`Invalid collection ${collectionName}`));\n\n      return callback(undefined, doc);\n    });\n  }\n}\n", "import type { Document } from './bson';\nimport type { Db } from './db';\nimport { AddUserOperation, type AddUserOptions } from './operations/add_user';\nimport type { CommandOperationOptions } from './operations/command';\nimport { executeOperation } from './operations/execute_operation';\nimport {\n  ListDatabasesOperation,\n  type ListDatabasesOptions,\n  type ListDatabasesResult\n} from './operations/list_databases';\nimport { RemoveUserOperation, type RemoveUserOptions } from './operations/remove_user';\nimport { RunCommandOperation, type RunCommandOptions } from './operations/run_command';\nimport {\n  ValidateCollectionOperation,\n  type ValidateCollectionOptions\n} from './operations/validate_collection';\n\n/** @internal */\nexport interface AdminPrivate {\n  db: Db;\n}\n\n/**\n * The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const admin = client.db().admin();\n * const dbInfo = await admin.listDatabases();\n * for (const db of dbInfo.databases) {\n *   console.log(db.name);\n * }\n * ```\n */\nexport class Admin {\n  /** @internal */\n  s: AdminPrivate;\n\n  /**\n   * Create a new Admin instance\n   * @internal\n   */\n  constructor(db: Db) {\n    this.s = { db };\n  }\n\n  /**\n   * Execute a command\n   *\n   * The driver will ensure the following fields are attached to the command sent to the server:\n   * - `lsid` - sourced from an implicit session or options.session\n   * - `$readPreference` - defaults to primary or can be configured by options.readPreference\n   * - `$db` - sourced from the name of this database\n   *\n   * If the client has a serverApi setting:\n   * - `apiVersion`\n   * - `apiStrict`\n   * - `apiDeprecationErrors`\n   *\n   * When in a transaction:\n   * - `readConcern` - sourced from readConcern set on the TransactionOptions\n   * - `writeConcern` - sourced from writeConcern set on the TransactionOptions\n   *\n   * Attaching any of the above fields to the command will have no effect as the driver will overwrite the value.\n   *\n   * @param command - The command to execute\n   * @param options - Optional settings for the command\n   */\n  async command(command: Document, options?: RunCommandOptions): Promise<Document> {\n    return executeOperation(\n      this.s.db.client,\n      new RunCommandOperation(this.s.db, command, { dbName: 'admin', ...options })\n    );\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   */\n  async buildInfo(options?: CommandOperationOptions): Promise<Document> {\n    return this.command({ buildinfo: 1 }, options);\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   */\n  async serverInfo(options?: CommandOperationOptions): Promise<Document> {\n    return this.command({ buildinfo: 1 }, options);\n  }\n\n  /**\n   * Retrieve this db's server status.\n   *\n   * @param options - Optional settings for the command\n   */\n  async serverStatus(options?: CommandOperationOptions): Promise<Document> {\n    return this.command({ serverStatus: 1 }, options);\n  }\n\n  /**\n   * Ping the MongoDB server and retrieve results\n   *\n   * @param options - Optional settings for the command\n   */\n  async ping(options?: CommandOperationOptions): Promise<Document> {\n    return this.command({ ping: 1 }, options);\n  }\n\n  /**\n   * Add a user to the database\n   *\n   * @param username - The username for the new user\n   * @param passwordOrOptions - An optional password for the new user, or the options for the command\n   * @param options - Optional settings for the command\n   * @deprecated Use the createUser command in `db.command()` instead.\n   * @see https://www.mongodb.com/docs/manual/reference/command/createUser/\n   */\n  async addUser(\n    username: string,\n    passwordOrOptions?: string | AddUserOptions,\n    options?: AddUserOptions\n  ): Promise<Document> {\n    options =\n      options != null && typeof options === 'object'\n        ? options\n        : passwordOrOptions != null && typeof passwordOrOptions === 'object'\n        ? passwordOrOptions\n        : undefined;\n    const password = typeof passwordOrOptions === 'string' ? passwordOrOptions : undefined;\n    return executeOperation(\n      this.s.db.client,\n      new AddUserOperation(this.s.db, username, password, { dbName: 'admin', ...options })\n    );\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   */\n  async removeUser(username: string, options?: RemoveUserOptions): Promise<boolean> {\n    return executeOperation(\n      this.s.db.client,\n      new RemoveUserOperation(this.s.db, username, { dbName: 'admin', ...options })\n    );\n  }\n\n  /**\n   * Validate an existing collection\n   *\n   * @param collectionName - The name of the collection to validate.\n   * @param options - Optional settings for the command\n   */\n  async validateCollection(\n    collectionName: string,\n    options: ValidateCollectionOptions = {}\n  ): Promise<Document> {\n    return executeOperation(\n      this.s.db.client,\n      new ValidateCollectionOperation(this, collectionName, options)\n    );\n  }\n\n  /**\n   * List the available databases\n   *\n   * @param options - Optional settings for the command\n   */\n  async listDatabases(options?: ListDatabasesOptions): Promise<ListDatabasesResult> {\n    return executeOperation(this.s.db.client, new ListDatabasesOperation(this.s.db, options));\n  }\n\n  /**\n   * Get ReplicaSet status\n   *\n   * @param options - Optional settings for the command\n   */\n  async replSetGetStatus(options?: CommandOperationOptions): Promise<Document> {\n    return this.command({ replSetGetStatus: 1 }, options);\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @public */\nexport interface DeleteOptions extends CommandOperationOptions, WriteConcernOptions {\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** Specifies the collation to use for the operation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @public */\nexport interface DeleteResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined. */\n  acknowledged: boolean;\n  /** The number of documents that were deleted */\n  deletedCount: number;\n}\n\n/** @public */\nexport interface DeleteStatement {\n  /** The query that matches documents to delete. */\n  q: Document;\n  /** The number of matching documents to delete. */\n  limit: number;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class DeleteOperation extends CommandOperation<DeleteResult> {\n  override options: DeleteOptions;\n  statements: DeleteStatement[];\n\n  constructor(ns: MongoDBNamespace, statements: DeleteStatement[], options: DeleteOptions) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback\n  ): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        callback(new MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n        return;\n      }\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class DeleteOneOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport class DeleteManyOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport function makeDeleteStatement(\n  filter: Document,\n  options: DeleteOptions & { limit?: number }\n): DeleteStatement {\n  const op: DeleteStatement = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  return op;\n}\n\ndefineAspects(DeleteOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(DeleteOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(DeleteManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\n", "import type {\n  AnyBulkWriteOperation,\n  BulkOperationBase,\n  BulkWriteOptions,\n  BulkWriteResult\n} from '../bulk/common';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCallbackOperation, Aspect, defineAspects } from './operation';\n\n/** @internal */\nexport class BulkWriteOperation extends AbstractCallbackOperation<BulkWriteResult> {\n  override options: BulkWriteOptions;\n  collection: Collection;\n  operations: AnyBulkWriteOperation[];\n\n  constructor(\n    collection: Collection,\n    operations: AnyBulkWriteOperation[],\n    options: BulkWriteOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.operations = operations;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<BulkWriteResult>\n  ): void {\n    const coll = this.collection;\n    const operations = this.operations;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n\n    // Create the bulk operation\n    const bulk: BulkOperationBase =\n      options.ordered === false\n        ? coll.initializeUnorderedBulkOp(options)\n        : coll.initializeOrderedBulkOp(options);\n\n    // for each op go through and add to the bulk\n    try {\n      for (let i = 0; i < operations.length; i++) {\n        bulk.raw(operations[i]);\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Execute the bulk\n    bulk.execute({ ...options, session }).then(\n      result => callback(undefined, result),\n      error => callback(error)\n    );\n  }\n}\n\ndefineAspects(BulkWriteOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoTopologyClosedError } from '../error';\nimport type { ReadPreference } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, getTopology } from '../utils';\n\n/** @public */\nexport interface IndexInformationOptions {\n  full?: boolean;\n  readPreference?: ReadPreference;\n  session?: ClientSession;\n}\n/**\n * Retrieves this collections index info.\n *\n * @param db - The Db instance on which to retrieve the index info.\n * @param name - The name of the collection.\n */\nexport function indexInformation(db: Db, name: string, callback: Callback): void;\nexport function indexInformation(\n  db: Db,\n  name: string,\n  options: IndexInformationOptions,\n  callback?: Callback\n): void;\nexport function indexInformation(\n  db: Db,\n  name: string,\n  _optionsOrCallback: IndexInformationOptions | Callback,\n  _callback?: Callback\n): void {\n  let options = _optionsOrCallback as IndexInformationOptions;\n  let callback = _callback as Callback;\n  if ('function' === typeof _optionsOrCallback) {\n    callback = _optionsOrCallback;\n    options = {};\n  }\n  // If we specified full information\n  const full = options.full == null ? false : options.full;\n\n  let topology;\n  try {\n    topology = getTopology(db);\n  } catch (error) {\n    return callback(error);\n  }\n\n  // Did the user destroy the topology\n  if (topology.isDestroyed()) return callback(new MongoTopologyClosedError());\n  // Process all the results from the index command and collection\n  function processResults(indexes: any) {\n    // Contains all the information\n    const info: any = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (const name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db.collection(name)\n    .listIndexes(options)\n    .toArray()\n    .then(\n      indexes => {\n        if (!Array.isArray(indexes)) return callback(undefined, []);\n        if (full) return callback(undefined, indexes);\n        callback(undefined, processResults(indexes));\n      },\n      error => callback(error)\n    );\n}\n\nexport function prepareDocs(\n  coll: Collection,\n  docs: Document[],\n  options: { forceServerObjectId?: boolean }\n): Document[] {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options?.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(doc => {\n    if (doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n", "import type { Document } from '../bson';\nimport type { BulkWriteOptions } from '../bulk/common';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError, MongoServerError } from '../error';\nimport type { InferIdType } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { WriteConcern } from '../write_concern';\nimport { BulkWriteOperation } from './bulk_write';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { prepareDocs } from './common_functions';\nimport { AbstractCallbackOperation, Aspect, defineAspects } from './operation';\n\n/** @internal */\nexport class InsertOperation extends CommandOperation<Document> {\n  override options: BulkWriteOptions;\n  documents: Document[];\n\n  constructor(ns: MongoDBNamespace, documents: Document[], options: BulkWriteOptions) {\n    super(undefined, options);\n    this.options = { ...options, checkKeys: options.checkKeys ?? false };\n    this.ns = ns;\n    this.documents = documents;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      insert: this.ns.collection,\n      documents: this.documents,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @public */\nexport interface InsertOneOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n}\n\n/** @public */\nexport interface InsertOneResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The identifier that was inserted. If the server generated the identifier, this value will be null as the driver does not have access to that data */\n  insertedId: InferIdType<TSchema>;\n}\n\nexport class InsertOneOperation extends InsertOperation {\n  constructor(collection: Collection, doc: Document, options: InsertOneOptions) {\n    super(collection.s.namespace, prepareDocs(collection, [doc], options), options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<InsertOneResult>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) {\n        // This should be a WriteError but we can't change it now because of error hierarchy\n        return callback(new MongoServerError(res.writeErrors[0]));\n      }\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        insertedId: this.documents[0]._id\n      });\n    });\n  }\n}\n\n/** @public */\nexport interface InsertManyResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of inserted documents for this operations */\n  insertedCount: number;\n  /** Map of the index of the inserted document to the id of the inserted document */\n  insertedIds: { [key: number]: InferIdType<TSchema> };\n}\n\n/** @internal */\nexport class InsertManyOperation extends AbstractCallbackOperation<InsertManyResult> {\n  override options: BulkWriteOptions;\n  collection: Collection;\n  docs: Document[];\n\n  constructor(collection: Collection, docs: Document[], options: BulkWriteOptions) {\n    super(options);\n\n    if (!Array.isArray(docs)) {\n      throw new MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n    }\n\n    this.options = options;\n    this.collection = collection;\n    this.docs = docs;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<InsertManyResult>\n  ): void {\n    const coll = this.collection;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n    const writeConcern = WriteConcern.fromOptions(options);\n    const bulkWriteOperation = new BulkWriteOperation(\n      coll,\n      prepareDocs(coll, this.docs, options).map(document => ({ insertOne: { document } })),\n      options\n    );\n\n    bulkWriteOperation.executeCallback(server, session, (err, res) => {\n      if (err || res == null) {\n        if (err && err.message === 'Operation must be an object with an operation key') {\n          err = new MongoInvalidArgumentError(\n            'Collection.insertMany() cannot be called with an array that has null/undefined values'\n          );\n        }\n        return callback(err);\n      }\n      callback(undefined, {\n        acknowledged: writeConcern?.w !== 0 ?? true,\n        insertedCount: res.insertedCount,\n        insertedIds: res.insertedIds\n      });\n    });\n  }\n}\n\ndefineAspects(InsertOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertOneOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertManyOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoInvalidArgumentError, MongoServerError } from '../error';\nimport type { InferIdType } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, hasAtomicOperators, type MongoDBNamespace } from '../utils';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @public */\nexport interface UpdateOptions extends CommandOperationOptions {\n  /** A set of filters specifying to which array elements an update should apply */\n  arrayFilters?: Document[];\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/**\n * @public\n * `TSchema` is the schema of the collection\n */\nexport interface UpdateResult<TSchema extends Document = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of documents that matched the filter */\n  matchedCount: number;\n  /** The number of documents that were modified */\n  modifiedCount: number;\n  /** The number of documents that were upserted */\n  upsertedCount: number;\n  /** The identifier of the inserted document if an upsert took place */\n  upsertedId: InferIdType<TSchema> | null;\n}\n\n/** @public */\nexport interface UpdateStatement {\n  /** The query that matches documents to update. */\n  q: Document;\n  /** The modifications to apply. */\n  u: Document | Document[];\n  /**  If true, perform an insert if no documents match the query. */\n  upsert?: boolean;\n  /** If true, updates all documents that meet the query criteria. */\n  multi?: boolean;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** An array of filter documents that determines which array elements to modify for an update operation on an array field. */\n  arrayFilters?: Document[];\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class UpdateOperation extends CommandOperation<Document> {\n  override options: UpdateOptions & { ordered?: boolean };\n  statements: UpdateStatement[];\n\n  constructor(\n    ns: MongoDBNamespace,\n    statements: UpdateStatement[],\n    options: UpdateOptions & { ordered?: boolean }\n  ) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n\n    this.statements = statements;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => op.multi == null || op.multi === false);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      update: this.ns.collection,\n      updates: this.statements,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        callback(new MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n        return;\n      }\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @internal */\nexport class UpdateOneOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: false })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\n/** @internal */\nexport class UpdateManyOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: true })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\n/** @public */\nexport interface ReplaceOptions extends CommandOperationOptions {\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @internal */\nexport class ReplaceOneOperation extends UpdateOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: ReplaceOptions\n  ) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, replacement, { ...options, multi: false })],\n      options\n    );\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.executeCallback(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\nexport function makeUpdateStatement(\n  filter: Document,\n  update: Document | Document[],\n  options: UpdateOptions & { multi?: boolean }\n): UpdateStatement {\n  if (filter == null || typeof filter !== 'object') {\n    throw new MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n  }\n\n  if (update == null || typeof update !== 'object') {\n    throw new MongoInvalidArgumentError('Document must be a valid JavaScript object');\n  }\n\n  const op: UpdateStatement = { q: filter, u: update };\n  if (typeof options.upsert === 'boolean') {\n    op.upsert = options.upsert;\n  }\n\n  if (options.multi) {\n    op.multi = options.multi;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (options.arrayFilters) {\n    op.arrayFilters = options.arrayFilters;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  return op;\n}\n\ndefineAspects(UpdateOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION, Aspect.SKIP_COLLATION]);\ndefineAspects(UpdateOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(UpdateManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(ReplaceOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.SKIP_COLLATION\n]);\n", "import { type BSONSerializeOptions, type Document, ObjectId, resolveBSONOptions } from '../bson';\nimport type { Collection } from '../collection';\nimport {\n  type AnyError,\n  MongoBatchReExecutionError,\n  MONGODB_ERROR_CODES,\n  MongoInvalidArgumentError,\n  MongoServerError,\n  MongoWriteConcernError\n} from '../error';\nimport type { Filter, OneOrMore, OptionalId, UpdateFilter, WithoutId } from '../mongo_types';\nimport type { CollationOptions, CommandOperationOptions } from '../operations/command';\nimport { DeleteOperation, type DeleteStatement, makeDeleteStatement } from '../operations/delete';\nimport { executeOperation } from '../operations/execute_operation';\nimport { InsertOperation } from '../operations/insert';\nimport { AbstractCallbackOperation, type Hint } from '../operations/operation';\nimport { makeUpdateStatement, UpdateOperation, type UpdateStatement } from '../operations/update';\nimport type { Server } from '../sdam/server';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport {\n  applyRetryableWrites,\n  type Callback,\n  getTopology,\n  hasAtomicOperators,\n  type MongoDBNamespace,\n  resolveOptions\n} from '../utils';\nimport { WriteConcern } from '../write_concern';\n\n/** @internal */\nconst kServerError = Symbol('serverError');\n\n/** @public */\nexport const BatchType = Object.freeze({\n  INSERT: 1,\n  UPDATE: 2,\n  DELETE: 3\n} as const);\n\n/** @public */\nexport type BatchType = (typeof BatchType)[keyof typeof BatchType];\n\n/** @public */\nexport interface InsertOneModel<TSchema extends Document = Document> {\n  /** The document to insert. */\n  document: OptionalId<TSchema>;\n}\n\n/** @public */\nexport interface DeleteOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface DeleteManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface ReplaceOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the replaced document. */\n  filter: Filter<TSchema>;\n  /** The document with which to replace the matched document. */\n  replacement: WithoutId<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /** A document or pipeline containing update operators. */\n  update: UpdateFilter<TSchema> | UpdateFilter<TSchema>[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /** A document or pipeline containing update operators. */\n  update: UpdateFilter<TSchema> | UpdateFilter<TSchema>[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport type AnyBulkWriteOperation<TSchema extends Document = Document> =\n  | { insertOne: InsertOneModel<TSchema> }\n  | { replaceOne: ReplaceOneModel<TSchema> }\n  | { updateOne: UpdateOneModel<TSchema> }\n  | { updateMany: UpdateManyModel<TSchema> }\n  | { deleteOne: DeleteOneModel<TSchema> }\n  | { deleteMany: DeleteManyModel<TSchema> };\n\n/** @internal */\nexport interface BulkResult {\n  ok: number;\n  writeErrors: WriteError[];\n  writeConcernErrors: WriteConcernError[];\n  insertedIds: Document[];\n  nInserted: number;\n  nUpserted: number;\n  nMatched: number;\n  nModified: number;\n  nRemoved: number;\n  upserted: Document[];\n}\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n *\n * @public\n */\nexport class Batch<T = Document> {\n  originalZeroIndex: number;\n  currentIndex: number;\n  originalIndexes: number[];\n  batchType: BatchType;\n  operations: T[];\n  size: number;\n  sizeBytes: number;\n\n  constructor(batchType: BatchType, originalZeroIndex: number) {\n    this.originalZeroIndex = originalZeroIndex;\n    this.currentIndex = 0;\n    this.originalIndexes = [];\n    this.batchType = batchType;\n    this.operations = [];\n    this.size = 0;\n    this.sizeBytes = 0;\n  }\n}\n\n/**\n * @public\n * The result of a bulk write.\n */\nexport class BulkWriteResult {\n  private readonly result: BulkResult;\n  /** Number of documents inserted. */\n  readonly insertedCount: number;\n  /** Number of documents matched for update. */\n  readonly matchedCount: number;\n  /** Number of documents modified. */\n  readonly modifiedCount: number;\n  /** Number of documents deleted. */\n  readonly deletedCount: number;\n  /** Number of documents upserted. */\n  readonly upsertedCount: number;\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  readonly upsertedIds: { [key: number]: any };\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  readonly insertedIds: { [key: number]: any };\n\n  private static generateIdMap(ids: Document[]): { [key: number]: any } {\n    const idMap: { [index: number]: any } = {};\n    for (const doc of ids) {\n      idMap[doc.index] = doc._id;\n    }\n    return idMap;\n  }\n\n  /**\n   * Create a new BulkWriteResult instance\n   * @internal\n   */\n  constructor(bulkResult: BulkResult) {\n    this.result = bulkResult;\n    this.insertedCount = this.result.nInserted ?? 0;\n    this.matchedCount = this.result.nMatched ?? 0;\n    this.modifiedCount = this.result.nModified ?? 0;\n    this.deletedCount = this.result.nRemoved ?? 0;\n    this.upsertedCount = this.result.upserted.length ?? 0;\n    this.upsertedIds = BulkWriteResult.generateIdMap(this.result.upserted);\n    this.insertedIds = BulkWriteResult.generateIdMap(this.result.insertedIds);\n    Object.defineProperty(this, 'result', { value: this.result, enumerable: false });\n  }\n\n  /** Evaluates to true if the bulk operation correctly executes */\n  get ok(): number {\n    return this.result.ok;\n  }\n\n  /**\n   * The number of inserted documents\n   * @deprecated Use insertedCount instead.\n   */\n  get nInserted(): number {\n    return this.result.nInserted;\n  }\n\n  /**\n   * Number of upserted documents\n   * @deprecated User upsertedCount instead.\n   */\n  get nUpserted(): number {\n    return this.result.nUpserted;\n  }\n\n  /**\n   * Number of matched documents\n   * @deprecated Use matchedCount instead.\n   */\n  get nMatched(): number {\n    return this.result.nMatched;\n  }\n\n  /**\n   * Number of documents updated physically on disk\n   * @deprecated Use modifiedCount instead.\n   */\n  get nModified(): number {\n    return this.result.nModified;\n  }\n\n  /**\n   * Number of removed documents\n   * @deprecated Use deletedCount instead.\n   */\n  get nRemoved(): number {\n    return this.result.nRemoved;\n  }\n\n  /**\n   * Returns an array of all inserted ids\n   * @deprecated Use insertedIds instead.\n   */\n  getInsertedIds(): Document[] {\n    return this.result.insertedIds;\n  }\n\n  /**\n   * Returns an array of all upserted ids\n   * @deprecated Use upsertedIds instead.\n   */\n  getUpsertedIds(): Document[] {\n    return this.result.upserted;\n  }\n\n  /** Returns the upserted id at the given index */\n  getUpsertedIdAt(index: number): Document | undefined {\n    return this.result.upserted[index];\n  }\n\n  /** Returns raw internal result */\n  getRawResponse(): Document {\n    return this.result;\n  }\n\n  /** Returns true if the bulk operation contains a write error */\n  hasWriteErrors(): boolean {\n    return this.result.writeErrors.length > 0;\n  }\n\n  /** Returns the number of write errors off the bulk operation */\n  getWriteErrorCount(): number {\n    return this.result.writeErrors.length;\n  }\n\n  /** Returns a specific write error object */\n  getWriteErrorAt(index: number): WriteError | undefined {\n    return index < this.result.writeErrors.length ? this.result.writeErrors[index] : undefined;\n  }\n\n  /** Retrieve all write errors */\n  getWriteErrors(): WriteError[] {\n    return this.result.writeErrors;\n  }\n\n  /** Retrieve the write concern error if one exists */\n  getWriteConcernError(): WriteConcernError | undefined {\n    if (this.result.writeConcernErrors.length === 0) {\n      return;\n    } else if (this.result.writeConcernErrors.length === 1) {\n      // Return the error\n      return this.result.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      let errmsg = '';\n      for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n        const err = this.result.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg, code: MONGODB_ERROR_CODES.WriteConcernFailed });\n    }\n  }\n\n  toString(): string {\n    return `BulkWriteResult(${this.result})`;\n  }\n\n  isOk(): boolean {\n    return this.result.ok === 1;\n  }\n}\n\n/** @public */\nexport interface WriteConcernErrorData {\n  code: number;\n  errmsg: string;\n  errInfo?: Document;\n}\n\n/**\n * An error representing a failure by the server to apply the requested write concern to the bulk operation.\n * @public\n * @category Error\n */\nexport class WriteConcernError {\n  /** @internal */\n  [kServerError]: WriteConcernErrorData;\n\n  constructor(error: WriteConcernErrorData) {\n    this[kServerError] = error;\n  }\n\n  /** Write concern error code. */\n  get code(): number | undefined {\n    return this[kServerError].code;\n  }\n\n  /** Write concern error message. */\n  get errmsg(): string | undefined {\n    return this[kServerError].errmsg;\n  }\n\n  /** Write concern error info. */\n  get errInfo(): Document | undefined {\n    return this[kServerError].errInfo;\n  }\n\n  toJSON(): WriteConcernErrorData {\n    return this[kServerError];\n  }\n\n  toString(): string {\n    return `WriteConcernError(${this.errmsg})`;\n  }\n}\n\n/** @public */\nexport interface BulkWriteOperationError {\n  index: number;\n  code: number;\n  errmsg: string;\n  errInfo: Document;\n  op: Document | UpdateStatement | DeleteStatement;\n}\n\n/**\n * An error that occurred during a BulkWrite on the server.\n * @public\n * @category Error\n */\nexport class WriteError {\n  err: BulkWriteOperationError;\n\n  constructor(err: BulkWriteOperationError) {\n    this.err = err;\n  }\n\n  /** WriteError code. */\n  get code(): number {\n    return this.err.code;\n  }\n\n  /** WriteError original bulk operation index. */\n  get index(): number {\n    return this.err.index;\n  }\n\n  /** WriteError message. */\n  get errmsg(): string | undefined {\n    return this.err.errmsg;\n  }\n\n  /** WriteError details. */\n  get errInfo(): Document | undefined {\n    return this.err.errInfo;\n  }\n\n  /** Returns the underlying operation that caused the error */\n  getOperation(): Document {\n    return this.err.op;\n  }\n\n  toJSON(): { code: number; index: number; errmsg?: string; op: Document } {\n    return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n  }\n\n  toString(): string {\n    return `WriteError(${JSON.stringify(this.toJSON())})`;\n  }\n}\n\n/** Merges results into shared data structure */\nexport function mergeBatchResults(\n  batch: Batch,\n  bulkResult: BulkResult,\n  err?: AnyError,\n  result?: Document\n): void {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  }\n\n  if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    const writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      errInfo: result.errInfo,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // If we have an insert Batch type\n  if (isInsertBatch(batch) && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (isDeleteBatch(batch) && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  let nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (let i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (isUpdateBatch(batch) && result.n) {\n    const nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = 0;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (let i = 0; i < result.writeErrors.length; i++) {\n      const writeError = {\n        index: batch.originalIndexes[result.writeErrors[i].index],\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        errInfo: result.writeErrors[i].errInfo,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\nfunction executeCommands(\n  bulkOperation: BulkOperationBase,\n  options: BulkWriteOptions,\n  callback: Callback<BulkWriteResult>\n) {\n  if (bulkOperation.s.batches.length === 0) {\n    return callback(undefined, new BulkWriteResult(bulkOperation.s.bulkResult));\n  }\n\n  const batch = bulkOperation.s.batches.shift() as Batch;\n\n  function resultHandler(err?: AnyError, result?: Document) {\n    // Error is a driver related error not a bulk op error, return early\n    if (err && 'message' in err && !(err instanceof MongoWriteConcernError)) {\n      return callback(\n        new MongoBulkWriteError(err, new BulkWriteResult(bulkOperation.s.bulkResult))\n      );\n    }\n\n    if (err instanceof MongoWriteConcernError) {\n      return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, err, callback);\n    }\n\n    // Merge the results together\n    mergeBatchResults(batch, bulkOperation.s.bulkResult, err, result);\n    const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n    if (bulkOperation.handleWriteError(callback, writeResult)) return;\n\n    // Execute the next command in line\n    executeCommands(bulkOperation, options, callback);\n  }\n\n  const finalOptions = resolveOptions(bulkOperation, {\n    ...options,\n    ordered: bulkOperation.isOrdered\n  });\n\n  if (finalOptions.bypassDocumentValidation !== true) {\n    delete finalOptions.bypassDocumentValidation;\n  }\n\n  // Set an operationIf if provided\n  if (bulkOperation.operationId) {\n    resultHandler.operationId = bulkOperation.operationId;\n  }\n\n  // Is the bypassDocumentValidation options specific\n  if (bulkOperation.s.bypassDocumentValidation === true) {\n    finalOptions.bypassDocumentValidation = true;\n  }\n\n  // Is the checkKeys option disabled\n  if (bulkOperation.s.checkKeys === false) {\n    finalOptions.checkKeys = false;\n  }\n\n  if (finalOptions.retryWrites) {\n    if (isUpdateBatch(batch)) {\n      finalOptions.retryWrites = finalOptions.retryWrites && !batch.operations.some(op => op.multi);\n    }\n\n    if (isDeleteBatch(batch)) {\n      finalOptions.retryWrites =\n        finalOptions.retryWrites && !batch.operations.some(op => op.limit === 0);\n    }\n  }\n\n  try {\n    if (isInsertBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.collection.client,\n        new InsertOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    } else if (isUpdateBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.collection.client,\n        new UpdateOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    } else if (isDeleteBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.collection.client,\n        new DeleteOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    }\n  } catch (err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return\n    mergeBatchResults(batch, bulkOperation.s.bulkResult, err, undefined);\n    callback();\n  }\n}\n\nfunction handleMongoWriteConcernError(\n  batch: Batch,\n  bulkResult: BulkResult,\n  err: MongoWriteConcernError,\n  callback: Callback<BulkWriteResult>\n) {\n  mergeBatchResults(batch, bulkResult, undefined, err.result);\n\n  callback(\n    new MongoBulkWriteError(\n      {\n        message: err.result?.writeConcernError.errmsg,\n        code: err.result?.writeConcernError.result\n      },\n      new BulkWriteResult(bulkResult)\n    )\n  );\n}\n\n/**\n * An error indicating an unsuccessful Bulk Write\n * @public\n * @category Error\n */\nexport class MongoBulkWriteError extends MongoServerError {\n  result: BulkWriteResult;\n  writeErrors: OneOrMore<WriteError> = [];\n  err?: WriteConcernError;\n\n  /** Creates a new MongoBulkWriteError */\n  constructor(\n    error:\n      | { message: string; code: number; writeErrors?: WriteError[] }\n      | WriteConcernError\n      | AnyError,\n    result: BulkWriteResult\n  ) {\n    super(error);\n\n    if (error instanceof WriteConcernError) this.err = error;\n    else if (!(error instanceof Error)) {\n      this.message = error.message;\n      this.code = error.code;\n      this.writeErrors = error.writeErrors ?? [];\n    }\n\n    this.result = result;\n    Object.assign(this, error);\n  }\n\n  override get name(): string {\n    return 'MongoBulkWriteError';\n  }\n\n  /** Number of documents inserted. */\n  get insertedCount(): number {\n    return this.result.insertedCount;\n  }\n  /** Number of documents matched for update. */\n  get matchedCount(): number {\n    return this.result.matchedCount;\n  }\n  /** Number of documents modified. */\n  get modifiedCount(): number {\n    return this.result.modifiedCount;\n  }\n  /** Number of documents deleted. */\n  get deletedCount(): number {\n    return this.result.deletedCount;\n  }\n  /** Number of documents upserted. */\n  get upsertedCount(): number {\n    return this.result.upsertedCount;\n  }\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  get insertedIds(): { [key: number]: any } {\n    return this.result.insertedIds;\n  }\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  get upsertedIds(): { [key: number]: any } {\n    return this.result.upsertedIds;\n  }\n}\n\n/**\n * A builder object that is returned from {@link BulkOperationBase#find}.\n * Is used to build a write operation that involves a query filter.\n *\n * @public\n */\nexport class FindOperators {\n  bulkOperation: BulkOperationBase;\n\n  /**\n   * Creates a new FindOperators object.\n   * @internal\n   */\n  constructor(bulkOperation: BulkOperationBase) {\n    this.bulkOperation = bulkOperation;\n  }\n\n  /** Add a multiple update operation to the bulk operation */\n  update(updateDocument: Document | Document[]): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, {\n        ...currentOp,\n        multi: true\n      })\n    );\n  }\n\n  /** Add a single update operation to the bulk operation */\n  updateOne(updateDocument: Document | Document[]): BulkOperationBase {\n    if (!hasAtomicOperators(updateDocument)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a replace one operation to the bulk operation */\n  replaceOne(replacement: Document): BulkOperationBase {\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, replacement, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a delete one operation to the bulk operation */\n  deleteOne(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 1 })\n    );\n  }\n\n  /** Add a delete many operation to the bulk operation */\n  delete(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 0 })\n    );\n  }\n\n  /** Upsert modifier for update bulk operation, noting that this operation is an upsert. */\n  upsert(): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.upsert = true;\n    return this;\n  }\n\n  /** Specifies the collation for the query condition. */\n  collation(collation: CollationOptions): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.collation = collation;\n    return this;\n  }\n\n  /** Specifies arrayFilters for UpdateOne or UpdateMany bulk operations. */\n  arrayFilters(arrayFilters: Document[]): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.arrayFilters = arrayFilters;\n    return this;\n  }\n\n  /** Specifies hint for the bulk operation. */\n  hint(hint: Hint): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.hint = hint;\n    return this;\n  }\n}\n\n/** @internal */\nexport interface BulkOperationPrivate {\n  bulkResult: BulkResult;\n  currentBatch?: Batch;\n  currentIndex: number;\n  // ordered specific\n  currentBatchSize: number;\n  currentBatchSizeBytes: number;\n  // unordered specific\n  currentInsertBatch?: Batch;\n  currentUpdateBatch?: Batch;\n  currentRemoveBatch?: Batch;\n  batches: Batch[];\n  // Write concern\n  writeConcern?: WriteConcern;\n  // Max batch size options\n  maxBsonObjectSize: number;\n  maxBatchSizeBytes: number;\n  maxWriteBatchSize: number;\n  maxKeySize: number;\n  // Namespace\n  namespace: MongoDBNamespace;\n  // Topology\n  topology: Topology;\n  // Options\n  options: BulkWriteOptions;\n  // BSON options\n  bsonOptions: BSONSerializeOptions;\n  // Document used to build a bulk operation\n  currentOp?: Document;\n  // Executed\n  executed: boolean;\n  // Collection\n  collection: Collection;\n  // Fundamental error\n  err?: AnyError;\n  // check keys\n  checkKeys: boolean;\n  bypassDocumentValidation?: boolean;\n}\n\n/** @public */\nexport interface BulkWriteOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/**\n * TODO(NODE-4063)\n * BulkWrites merge complexity is implemented in executeCommands\n * This provides a vehicle to treat bulkOperations like any other operation (hence \"shim\")\n * We would like this logic to simply live inside the BulkWriteOperation class\n * @internal\n */\nclass BulkWriteShimOperation extends AbstractCallbackOperation {\n  bulkOperation: BulkOperationBase;\n  constructor(bulkOperation: BulkOperationBase, options: BulkWriteOptions) {\n    super(options);\n    this.bulkOperation = bulkOperation;\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<any>\n  ): void {\n    if (this.options.session == null) {\n      // An implicit session could have been created by 'executeOperation'\n      // So if we stick it on finalOptions here, each bulk operation\n      // will use this same session, it'll be passed in the same way\n      // an explicit session would be\n      this.options.session = session;\n    }\n    return executeCommands(this.bulkOperation, this.options, callback);\n  }\n}\n\n/** @public */\nexport abstract class BulkOperationBase {\n  isOrdered: boolean;\n  /** @internal */\n  s: BulkOperationPrivate;\n  operationId?: number;\n\n  /**\n   * Create a new OrderedBulkOperation or UnorderedBulkOperation instance\n   * @internal\n   */\n  constructor(collection: Collection, options: BulkWriteOptions, isOrdered: boolean) {\n    // determine whether bulkOperation is ordered or unordered\n    this.isOrdered = isOrdered;\n\n    const topology = getTopology(collection);\n    options = options == null ? {} : options;\n    // TODO Bring from driver information in hello\n    // Get the namespace for the write operations\n    const namespace = collection.s.namespace;\n    // Used to mark operation as executed\n    const executed = false;\n\n    // Current item\n    const currentOp = undefined;\n\n    // Set max byte size\n    const hello = topology.lastHello();\n\n    // If we have autoEncryption on, batch-splitting must be done on 2mb chunks, but single documents\n    // over 2mb are still allowed\n    const usingAutoEncryption = !!(topology.s.options && topology.s.options.autoEncrypter);\n    const maxBsonObjectSize =\n      hello && hello.maxBsonObjectSize ? hello.maxBsonObjectSize : 1024 * 1024 * 16;\n    const maxBatchSizeBytes = usingAutoEncryption ? 1024 * 1024 * 2 : maxBsonObjectSize;\n    const maxWriteBatchSize = hello && hello.maxWriteBatchSize ? hello.maxWriteBatchSize : 1000;\n\n    // Calculates the largest possible size of an Array key, represented as a BSON string\n    // element. This calculation:\n    //     1 byte for BSON type\n    //     # of bytes = length of (string representation of (maxWriteBatchSize - 1))\n    //   + 1 bytes for null terminator\n    const maxKeySize = (maxWriteBatchSize - 1).toString(10).length + 2;\n\n    // Final options for retryable writes\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, collection.s.db);\n\n    // Final results\n    const bulkResult: BulkResult = {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    };\n\n    // Internal state\n    this.s = {\n      // Final result\n      bulkResult,\n      // Current batch state\n      currentBatch: undefined,\n      currentIndex: 0,\n      // ordered specific\n      currentBatchSize: 0,\n      currentBatchSizeBytes: 0,\n      // unordered specific\n      currentInsertBatch: undefined,\n      currentUpdateBatch: undefined,\n      currentRemoveBatch: undefined,\n      batches: [],\n      // Write concern\n      writeConcern: WriteConcern.fromOptions(options),\n      // Max batch size options\n      maxBsonObjectSize,\n      maxBatchSizeBytes,\n      maxWriteBatchSize,\n      maxKeySize,\n      // Namespace\n      namespace,\n      // Topology\n      topology,\n      // Options\n      options: finalOptions,\n      // BSON options\n      bsonOptions: resolveBSONOptions(options),\n      // Current operation\n      currentOp,\n      // Executed\n      executed,\n      // Collection\n      collection,\n      // Fundamental error\n      err: undefined,\n      // check keys\n      checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : false\n    };\n\n    // bypass Validation\n    if (options.bypassDocumentValidation === true) {\n      this.s.bypassDocumentValidation = true;\n    }\n  }\n\n  /**\n   * Add a single insert document to the bulk operation\n   *\n   * @example\n   * ```ts\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Adds three inserts to the bulkOp.\n   * bulkOp\n   *   .insert({ a: 1 })\n   *   .insert({ b: 2 })\n   *   .insert({ c: 3 });\n   * await bulkOp.execute();\n   * ```\n   */\n  insert(document: Document): BulkOperationBase {\n    if (document._id == null && !shouldForceServerObjectId(this)) {\n      document._id = new ObjectId();\n    }\n\n    return this.addToOperationsList(BatchType.INSERT, document);\n  }\n\n  /**\n   * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne.\n   * Returns a builder object used to complete the definition of the operation.\n   *\n   * @example\n   * ```ts\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Add an updateOne to the bulkOp\n   * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n   *\n   * // Add an updateMany to the bulkOp\n   * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n   *\n   * // Add an upsert\n   * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n   *\n   * // Add a deletion\n   * bulkOp.find({ g: 7 }).deleteOne();\n   *\n   * // Add a multi deletion\n   * bulkOp.find({ h: 8 }).delete();\n   *\n   * // Add a replaceOne\n   * bulkOp.find({ i: 9 }).replaceOne({writeConcern: { j: 10 }});\n   *\n   * // Update using a pipeline (requires Mongodb 4.2 or higher)\n   * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n   *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n   * ]);\n   *\n   * // All of the ops will now be executed\n   * await bulkOp.execute();\n   * ```\n   */\n  find(selector: Document): FindOperators {\n    if (!selector) {\n      throw new MongoInvalidArgumentError('Bulk find operation must specify a selector');\n    }\n\n    // Save a current selector\n    this.s.currentOp = {\n      selector: selector\n    };\n\n    return new FindOperators(this);\n  }\n\n  /** Specifies a raw operation to perform in the bulk write. */\n  raw(op: AnyBulkWriteOperation): this {\n    if (op == null || typeof op !== 'object') {\n      throw new MongoInvalidArgumentError('Operation must be an object with an operation key');\n    }\n    if ('insertOne' in op) {\n      const forceServerObjectId = shouldForceServerObjectId(this);\n      if (op.insertOne && op.insertOne.document == null) {\n        // NOTE: provided for legacy support, but this is a malformed operation\n        if (forceServerObjectId !== true && (op.insertOne as Document)._id == null) {\n          (op.insertOne as Document)._id = new ObjectId();\n        }\n\n        return this.addToOperationsList(BatchType.INSERT, op.insertOne);\n      }\n\n      if (forceServerObjectId !== true && op.insertOne.document._id == null) {\n        op.insertOne.document._id = new ObjectId();\n      }\n\n      return this.addToOperationsList(BatchType.INSERT, op.insertOne.document);\n    }\n\n    if ('replaceOne' in op || 'updateOne' in op || 'updateMany' in op) {\n      if ('replaceOne' in op) {\n        if ('q' in op.replaceOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(\n          op.replaceOne.filter,\n          op.replaceOne.replacement,\n          { ...op.replaceOne, multi: false }\n        );\n        if (hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateOne' in op) {\n        if ('q' in op.updateOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateOne.filter, op.updateOne.update, {\n          ...op.updateOne,\n          multi: false\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateMany' in op) {\n        if ('q' in op.updateMany) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateMany.filter, op.updateMany.update, {\n          ...op.updateMany,\n          multi: true\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n    }\n\n    if ('deleteOne' in op) {\n      if ('q' in op.deleteOne) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteOne.filter, { ...op.deleteOne, limit: 1 })\n      );\n    }\n\n    if ('deleteMany' in op) {\n      if ('q' in op.deleteMany) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteMany.filter, { ...op.deleteMany, limit: 0 })\n      );\n    }\n\n    // otherwise an unknown operation was provided\n    throw new MongoInvalidArgumentError(\n      'bulkWrite only supports insertOne, updateOne, updateMany, deleteOne, deleteMany'\n    );\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get batches(): Batch[] {\n    const batches = [...this.s.batches];\n    if (this.isOrdered) {\n      if (this.s.currentBatch) batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) batches.push(this.s.currentRemoveBatch);\n    }\n    return batches;\n  }\n\n  async execute(options: BulkWriteOptions = {}): Promise<BulkWriteResult> {\n    if (this.s.executed) {\n      throw new MongoBatchReExecutionError();\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      this.s.writeConcern = writeConcern;\n    }\n\n    // If we have current batch\n    if (this.isOrdered) {\n      if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n    }\n    // If we have no operations in the bulk raise an error\n    if (this.s.batches.length === 0) {\n      throw new MongoInvalidArgumentError('Invalid BulkOperation, Batch cannot be empty');\n    }\n\n    this.s.executed = true;\n    const finalOptions = { ...this.s.options, ...options };\n    const operation = new BulkWriteShimOperation(this, finalOptions);\n\n    return executeOperation(this.s.collection.client, operation);\n  }\n\n  /**\n   * Handles the write error before executing commands\n   * @internal\n   */\n  handleWriteError(callback: Callback<BulkWriteResult>, writeResult: BulkWriteResult): boolean {\n    if (this.s.bulkResult.writeErrors.length > 0) {\n      const msg = this.s.bulkResult.writeErrors[0].errmsg\n        ? this.s.bulkResult.writeErrors[0].errmsg\n        : 'write operation failed';\n\n      callback(\n        new MongoBulkWriteError(\n          {\n            message: msg,\n            code: this.s.bulkResult.writeErrors[0].code,\n            writeErrors: this.s.bulkResult.writeErrors\n          },\n          writeResult\n        )\n      );\n\n      return true;\n    }\n\n    const writeConcernError = writeResult.getWriteConcernError();\n    if (writeConcernError) {\n      callback(new MongoBulkWriteError(writeConcernError, writeResult));\n      return true;\n    }\n\n    return false;\n  }\n\n  abstract addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this;\n}\n\nObject.defineProperty(BulkOperationBase.prototype, 'length', {\n  enumerable: true,\n  get() {\n    return this.s.currentIndex;\n  }\n});\n\nfunction shouldForceServerObjectId(bulkOperation: BulkOperationBase): boolean {\n  if (typeof bulkOperation.s.options.forceServerObjectId === 'boolean') {\n    return bulkOperation.s.options.forceServerObjectId;\n  }\n\n  if (typeof bulkOperation.s.collection.s.db.options?.forceServerObjectId === 'boolean') {\n    return bulkOperation.s.collection.s.db.options?.forceServerObjectId;\n  }\n\n  return false;\n}\n\nfunction isInsertBatch(batch: Batch): boolean {\n  return batch.batchType === BatchType.INSERT;\n}\n\nfunction isUpdateBatch(batch: Batch): batch is Batch<UpdateStatement> {\n  return batch.batchType === BatchType.UPDATE;\n}\n\nfunction isDeleteBatch(batch: Batch): batch is Batch<DeleteStatement> {\n  return batch.batchType === BatchType.DELETE;\n}\n\nfunction buildCurrentOp(bulkOp: BulkOperationBase): Document {\n  let { currentOp } = bulkOp.s;\n  bulkOp.s.currentOp = undefined;\n  if (!currentOp) currentOp = {};\n  return currentOp;\n}\n", "import type { Document } from '../bson';\nimport * as BSON from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { DeleteStatement } from '../operations/delete';\nimport type { UpdateStatement } from '../operations/update';\nimport { Batch, BatchType, BulkOperationBase, type BulkWriteOptions } from './common';\n\n/** @public */\nexport class OrderedBulkOperation extends BulkOperationBase {\n  /** @internal */\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, true);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize)\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatchSize + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatchSize > 0 &&\n        this.s.currentBatchSizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n\n      // Reset the current size trackers\n      this.s.currentBatchSize = 0;\n      this.s.currentBatchSizeBytes = 0;\n    }\n\n    if (batchType === BatchType.INSERT) {\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.currentIndex,\n        _id: (document as Document)._id\n      });\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatchSize += 1;\n    this.s.currentBatchSizeBytes += maxKeySize + bsonSize;\n    this.s.currentIndex += 1;\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport * as BSON from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { DeleteStatement } from '../operations/delete';\nimport type { UpdateStatement } from '../operations/update';\nimport type { Callback } from '../utils';\nimport {\n  Batch,\n  BatchType,\n  BulkOperationBase,\n  type BulkWriteOptions,\n  type BulkWriteResult\n} from './common';\n\n/** @public */\nexport class UnorderedBulkOperation extends BulkOperationBase {\n  /** @internal */\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, false);\n  }\n\n  override handleWriteError(callback: Callback, writeResult: BulkWriteResult): boolean {\n    if (this.s.batches.length) {\n      return false;\n    }\n\n    return super.handleWriteError(callback, writeResult);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize) {\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n    }\n\n    // Holds the current batch\n    this.s.currentBatch = undefined;\n    // Get the right type of batch\n    if (batchType === BatchType.INSERT) {\n      this.s.currentBatch = this.s.currentInsertBatch;\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentBatch = this.s.currentUpdateBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentBatch = this.s.currentRemoveBatch;\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatch.size + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatch.size > 0 &&\n        this.s.currentBatch.sizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentIndex = this.s.currentIndex + 1;\n\n    // Save back the current Batch to the right type\n    if (batchType === BatchType.INSERT) {\n      this.s.currentInsertBatch = this.s.currentBatch;\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.bulkResult.insertedIds.length,\n        _id: (document as Document)._id\n      });\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentUpdateBatch = this.s.currentBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentRemoveBatch = this.s.currentBatch;\n    }\n\n    // Update current batch size\n    this.s.currentBatch.size += 1;\n    this.s.currentBatch.sizeBytes += maxKeySize + bsonSize;\n\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport { WriteConcern } from '../write_concern';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @internal */\nexport const DB_AGGREGATE_COLLECTION = 1 as const;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8 as const;\n\n/** @public */\nexport interface AggregateOptions extends CommandOperationOptions {\n  /** allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 \\>). */\n  allowDiskUse?: boolean;\n  /** The number of documents to return per batch. See [aggregation documentation](https://www.mongodb.com/docs/manual/reference/command/aggregate). */\n  batchSize?: number;\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** Return the query as cursor, on 2.6 \\> it returns as a real cursor on pre 2.6 it returns as an emulated cursor. */\n  cursor?: Document;\n  /** specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. */\n  maxAwaitTimeMS?: number;\n  /** Specify collation. */\n  collation?: CollationOptions;\n  /** Add an index selection hint to an aggregation command */\n  hint?: Hint;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  out?: string;\n}\n\n/** @internal */\nexport class AggregateOperation<T = Document> extends CommandOperation<T> {\n  override options: AggregateOptions;\n  target: string | typeof DB_AGGREGATE_COLLECTION;\n  pipeline: Document[];\n  hasWriteStage: boolean;\n\n  constructor(ns: MongoDBNamespace, pipeline: Document[], options?: AggregateOptions) {\n    super(undefined, { ...options, dbName: ns.db });\n\n    this.options = { ...options };\n\n    // Covers when ns.collection is null, undefined or the empty string, use DB_AGGREGATE_COLLECTION\n    this.target = ns.collection || DB_AGGREGATE_COLLECTION;\n\n    this.pipeline = pipeline;\n\n    // determine if we have a write stage, override read preference if so\n    this.hasWriteStage = false;\n    if (typeof options?.out === 'string') {\n      this.pipeline = this.pipeline.concat({ $out: options.out });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.trySecondaryWrite = true;\n    } else {\n      delete this.options.writeConcern;\n    }\n\n    if (this.explain && this.writeConcern) {\n      throw new MongoInvalidArgumentError(\n        'Option \"explain\" cannot be used on an aggregate call with writeConcern'\n      );\n    }\n\n    if (options?.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoInvalidArgumentError('Cursor options must be an object');\n    }\n  }\n\n  override get canRetryRead(): boolean {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage: Document): void {\n    this.pipeline.push(stage);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const options: AggregateOptions = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command: Document = { aggregate: this.target, pipeline: this.pipeline };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = undefined;\n    }\n\n    if (this.hasWriteStage && this.writeConcern) {\n      WriteConcern.apply(command, this.writeConcern);\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    command.cursor = options.cursor || {};\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\ndefineAspects(AggregateOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { BSONType, ObjectIdLike } from 'bson';\nimport { EventEmitter } from 'events';\n\nimport type {\n  Binary,\n  BSONRegExp,\n  Decimal128,\n  Document,\n  Double,\n  Int32,\n  Long,\n  ObjectId,\n  Timestamp\n} from './bson';\nimport type { MongoLoggableComponent, MongoLogger } from './mongo_logger';\nimport type { Sort } from './sort';\n\n/** @internal */\nexport type TODO_NODE_3286 = any;\n\n/** Given an object shaped type, return the type of the _id field or default to ObjectId @public */\nexport type InferIdType<TSchema> = TSchema extends { _id: infer IdType }\n  ? // user has defined a type for _id\n    Record<any, never> extends IdType\n    ? never // explicitly forbid empty objects as the type of _id\n    : IdType\n  : TSchema extends { _id?: infer IdType }\n  ? // optional _id defined - return ObjectId | IdType\n    unknown extends IdType\n    ? ObjectId // infer the _id type as ObjectId if the type of _id is unknown\n    : IdType\n  : ObjectId; // user has not defined _id on schema\n\n/** Add an _id field to an object shaped type @public */\nexport type WithId<TSchema> = EnhancedOmit<TSchema, '_id'> & { _id: InferIdType<TSchema> };\n\n/**\n * Add an optional _id field to an object shaped type\n * @public\n */\nexport type OptionalId<TSchema> = EnhancedOmit<TSchema, '_id'> & { _id?: InferIdType<TSchema> };\n\n/**\n * Adds an optional _id field to an object shaped type, unless the _id field is required on that type.\n * In the case _id is required, this method continues to require_id.\n *\n * @public\n *\n * @privateRemarks\n * `ObjectId extends TSchema['_id']` is a confusing ordering at first glance. Rather than ask\n * `TSchema['_id'] extends ObjectId` which translated to \"Is the _id property ObjectId?\"\n * we instead ask \"Does ObjectId look like (have the same shape) as the _id?\"\n */\nexport type OptionalUnlessRequiredId<TSchema> = TSchema extends { _id: any }\n  ? TSchema\n  : OptionalId<TSchema>;\n\n/** TypeScript Omit (Exclude to be specific) does not work for objects with an \"any\" indexed type, and breaks discriminated unions @public */\nexport type EnhancedOmit<TRecordOrUnion, KeyUnion> = string extends keyof TRecordOrUnion\n  ? TRecordOrUnion // TRecordOrUnion has indexed type e.g. { _id: string; [k: string]: any; } or it is \"any\"\n  : TRecordOrUnion extends any\n  ? Pick<TRecordOrUnion, Exclude<keyof TRecordOrUnion, KeyUnion>> // discriminated unions\n  : never;\n\n/** Remove the _id field from an object shaped type @public */\nexport type WithoutId<TSchema> = Omit<TSchema, '_id'>;\n\n/** A MongoDB filter can be some portion of the schema or a set of operators @public */\nexport type Filter<TSchema> = {\n  [P in keyof WithId<TSchema>]?: Condition<WithId<TSchema>[P]>;\n} & RootFilterOperators<WithId<TSchema>>;\n\n/** @public */\nexport type Condition<T> = AlternativeType<T> | FilterOperators<AlternativeType<T>>;\n\n/**\n * It is possible to search using alternative types in mongodb e.g.\n * string types can be searched using a regex in mongo\n * array types can be searched using their element type\n * @public\n */\nexport type AlternativeType<T> = T extends ReadonlyArray<infer U>\n  ? T | RegExpOrString<U>\n  : RegExpOrString<T>;\n\n/** @public */\nexport type RegExpOrString<T> = T extends string ? BSONRegExp | RegExp | T : T;\n\n/** @public */\nexport interface RootFilterOperators<TSchema> extends Document {\n  $and?: Filter<TSchema>[];\n  $nor?: Filter<TSchema>[];\n  $or?: Filter<TSchema>[];\n  $text?: {\n    $search: string;\n    $language?: string;\n    $caseSensitive?: boolean;\n    $diacriticSensitive?: boolean;\n  };\n  $where?: string | ((this: TSchema) => boolean);\n  $comment?: string | Document;\n}\n\n/**\n * @public\n * A type that extends Document but forbids anything that \"looks like\" an object id.\n */\nexport type NonObjectIdLikeDocument = {\n  [key in keyof ObjectIdLike]?: never;\n} & Document;\n\n/** @public */\nexport interface FilterOperators<TValue> extends NonObjectIdLikeDocument {\n  // Comparison\n  $eq?: TValue;\n  $gt?: TValue;\n  $gte?: TValue;\n  $in?: ReadonlyArray<TValue>;\n  $lt?: TValue;\n  $lte?: TValue;\n  $ne?: TValue;\n  $nin?: ReadonlyArray<TValue>;\n  // Logical\n  $not?: TValue extends string ? FilterOperators<TValue> | RegExp : FilterOperators<TValue>;\n  // Element\n  /**\n   * When `true`, `$exists` matches the documents that contain the field,\n   * including documents where the field value is null.\n   */\n  $exists?: boolean;\n  $type?: BSONType | BSONTypeAlias;\n  // Evaluation\n  $expr?: Record<string, any>;\n  $jsonSchema?: Record<string, any>;\n  $mod?: TValue extends number ? [number, number] : never;\n  $regex?: TValue extends string ? RegExp | BSONRegExp | string : never;\n  $options?: TValue extends string ? string : never;\n  // Geospatial\n  $geoIntersects?: { $geometry: Document };\n  $geoWithin?: Document;\n  $near?: Document;\n  $nearSphere?: Document;\n  $maxDistance?: number;\n  // Array\n  $all?: ReadonlyArray<any>;\n  $elemMatch?: Document;\n  $size?: TValue extends ReadonlyArray<any> ? number : never;\n  // Bitwise\n  $bitsAllClear?: BitwiseFilter;\n  $bitsAllSet?: BitwiseFilter;\n  $bitsAnyClear?: BitwiseFilter;\n  $bitsAnySet?: BitwiseFilter;\n  $rand?: Record<string, never>;\n}\n\n/** @public */\nexport type BitwiseFilter =\n  | number /** numeric bit mask */\n  | Binary /** BinData bit mask */\n  | ReadonlyArray<number>; /** `[ <position1>, <position2>, ... ]` */\n\n/** @public */\nexport type BSONTypeAlias = keyof typeof BSONType;\n\n/** @public */\nexport type IsAny<Type, ResultIfAny, ResultIfNotAny> = true extends false & Type\n  ? ResultIfAny\n  : ResultIfNotAny;\n\n/** @public */\nexport type Flatten<Type> = Type extends ReadonlyArray<infer Item> ? Item : Type;\n\n/** @public */\nexport type ArrayElement<Type> = Type extends ReadonlyArray<infer Item> ? Item : never;\n\n/** @public */\nexport type SchemaMember<T, V> = { [P in keyof T]?: V } | { [key: string]: V };\n\n/** @public */\nexport type IntegerType = number | Int32 | Long | bigint;\n\n/** @public */\nexport type NumericType = IntegerType | Decimal128 | Double;\n\n/** @public */\nexport type FilterOperations<T> = T extends Record<string, any>\n  ? { [key in keyof T]?: FilterOperators<T[key]> }\n  : FilterOperators<T>;\n\n/** @public */\nexport type KeysOfAType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? key : never;\n}[keyof TSchema];\n\n/** @public */\nexport type KeysOfOtherType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? never : key;\n}[keyof TSchema];\n\n/** @public */\nexport type AcceptedFields<TSchema, FieldType, AssignableType> = {\n  readonly [key in KeysOfAType<TSchema, FieldType>]?: AssignableType;\n};\n\n/** It avoids using fields with not acceptable types @public */\nexport type NotAcceptedFields<TSchema, FieldType> = {\n  readonly [key in KeysOfOtherType<TSchema, FieldType>]?: never;\n};\n\n/** @public */\nexport type OnlyFieldsOfType<TSchema, FieldType = any, AssignableType = FieldType> = IsAny<\n  TSchema[keyof TSchema],\n  Record<string, FieldType>,\n  AcceptedFields<TSchema, FieldType, AssignableType> &\n    NotAcceptedFields<TSchema, FieldType> &\n    Record<string, AssignableType>\n>;\n\n/** @public */\nexport type MatchKeysAndValues<TSchema> = Readonly<Partial<TSchema>> & Record<string, any>;\n\n/** @public */\nexport type AddToSetOperators<Type> = {\n  $each?: Array<Flatten<Type>>;\n};\n\n/** @public */\nexport type ArrayOperator<Type> = {\n  $each?: Array<Flatten<Type>>;\n  $slice?: number;\n  $position?: number;\n  $sort?: Sort;\n};\n\n/** @public */\nexport type SetFields<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any> | undefined>]?:\n    | OptionalId<Flatten<TSchema[key]>>\n    | AddToSetOperators<Array<OptionalId<Flatten<TSchema[key]>>>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any> | undefined>) & {\n  readonly [key: string]: AddToSetOperators<any> | any;\n};\n\n/** @public */\nexport type PushOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Flatten<TSchema[key]>\n    | ArrayOperator<Array<Flatten<TSchema[key]>>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ArrayOperator<any> | any;\n};\n\n/** @public */\nexport type PullOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Partial<Flatten<TSchema[key]>>\n    | FilterOperations<Flatten<TSchema[key]>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: FilterOperators<any> | any;\n};\n\n/** @public */\nexport type PullAllOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?: TSchema[key];\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ReadonlyArray<any>;\n};\n\n/** @public */\nexport type UpdateFilter<TSchema> = {\n  $currentDate?: OnlyFieldsOfType<\n    TSchema,\n    Date | Timestamp,\n    true | { $type: 'date' | 'timestamp' }\n  >;\n  $inc?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $min?: MatchKeysAndValues<TSchema>;\n  $max?: MatchKeysAndValues<TSchema>;\n  $mul?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $rename?: Record<string, string>;\n  $set?: MatchKeysAndValues<TSchema>;\n  $setOnInsert?: MatchKeysAndValues<TSchema>;\n  $unset?: OnlyFieldsOfType<TSchema, any, '' | true | 1>;\n  $addToSet?: SetFields<TSchema>;\n  $pop?: OnlyFieldsOfType<TSchema, ReadonlyArray<any>, 1 | -1>;\n  $pull?: PullOperator<TSchema>;\n  $push?: PushOperator<TSchema>;\n  $pullAll?: PullAllOperator<TSchema>;\n  $bit?: OnlyFieldsOfType<\n    TSchema,\n    NumericType | undefined,\n    { and: IntegerType } | { or: IntegerType } | { xor: IntegerType }\n  >;\n} & Document;\n\n/** @public */\nexport type Nullable<AnyType> = AnyType | null | undefined;\n\n/** @public */\nexport type OneOrMore<T> = T | ReadonlyArray<T>;\n\n/** @public */\nexport type GenericListener = (...args: any[]) => void;\n\n/**\n * Event description type\n * @public\n */\nexport type EventsDescription = Record<string, GenericListener>;\n\n/** @public */\nexport type CommonEvents = 'newListener' | 'removeListener';\n\n/**\n * Typescript type safe event emitter\n * @public\n */\nexport declare interface TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {\n  addListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  addListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  addListener(event: string | symbol, listener: GenericListener): this;\n\n  on<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  on(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  on(event: string | symbol, listener: GenericListener): this;\n\n  once<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  once(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  once(event: string | symbol, listener: GenericListener): this;\n\n  removeListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  removeListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  removeListener(event: string | symbol, listener: GenericListener): this;\n\n  off<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  off(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  off(event: string | symbol, listener: GenericListener): this;\n\n  removeAllListeners<EventKey extends keyof Events>(\n    event?: EventKey | CommonEvents | symbol | string\n  ): this;\n\n  listeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  rawListeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  emit<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    ...args: Parameters<Events[EventKey]>\n  ): boolean;\n\n  listenerCount<EventKey extends keyof Events>(\n    type: EventKey | CommonEvents | symbol | string\n  ): number;\n\n  prependListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  prependListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependListener(event: string | symbol, listener: GenericListener): this;\n\n  prependOnceListener<EventKey extends keyof Events>(\n    event: EventKey,\n    listener: Events[EventKey]\n  ): this;\n  prependOnceListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependOnceListener(event: string | symbol, listener: GenericListener): this;\n\n  eventNames(): string[];\n  getMaxListeners(): number;\n  setMaxListeners(n: number): this;\n}\n\n/**\n * Typescript type safe event emitter\n * @public\n */\n\nexport class TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {\n  /** @internal */\n  protected mongoLogger?: MongoLogger;\n  /** @internal */\n  protected component?: MongoLoggableComponent;\n  /** @internal */\n  protected emitAndLog<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    ...args: Parameters<Events[EventKey]>\n  ): void {\n    this.emit(event, ...args);\n    if (this.component) this.mongoLogger?.debug(this.component, args[0]);\n  }\n}\n\n/** @public */\nexport class CancellationToken extends TypedEventEmitter<{ cancel(): void }> {}\n\n/**\n * Helper types for dot-notation filter attributes\n */\n\n/** @public */\nexport type Join<T extends unknown[], D extends string> = T extends []\n  ? ''\n  : T extends [string | number]\n  ? `${T[0]}`\n  : T extends [string | number, ...infer R]\n  ? `${T[0]}${D}${Join<R, D>}`\n  : string;\n\n/** @public */\nexport type PropertyType<Type, Property extends string> = string extends Property\n  ? unknown\n  : Property extends keyof Type\n  ? Type[Property]\n  : Property extends `${number}`\n  ? Type extends ReadonlyArray<infer ArrayType>\n    ? ArrayType\n    : unknown\n  : Property extends `${infer Key}.${infer Rest}`\n  ? Key extends `${number}`\n    ? Type extends ReadonlyArray<infer ArrayType>\n      ? PropertyType<ArrayType, Rest>\n      : unknown\n    : Key extends keyof Type\n    ? Type[Key] extends Map<string, infer MapType>\n      ? MapType\n      : PropertyType<Type[Key], Rest>\n    : unknown\n  : unknown;\n\n/**\n * @public\n * returns tuple of strings (keys to be joined on '.') that represent every path into a schema\n * https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/\n *\n * @remarks\n * Through testing we determined that a depth of 8 is safe for the typescript compiler\n * and provides reasonable compilation times. This number is otherwise not special and\n * should be changed if issues are found with this level of checking. Beyond this\n * depth any helpers that make use of NestedPaths should devolve to not asserting any\n * type safety on the input.\n */\nexport type NestedPaths<Type, Depth extends number[]> = Depth['length'] extends 8\n  ? []\n  : Type extends\n      | string\n      | number\n      | bigint\n      | boolean\n      | Date\n      | RegExp\n      | Buffer\n      | Uint8Array\n      | ((...args: any[]) => any)\n      | { _bsontype: string }\n  ? []\n  : Type extends ReadonlyArray<infer ArrayType>\n  ? [] | [number, ...NestedPaths<ArrayType, [...Depth, 1]>]\n  : Type extends Map<string, any>\n  ? [string]\n  : Type extends object\n  ? {\n      [Key in Extract<keyof Type, string>]: Type[Key] extends Type // type of value extends the parent\n        ? [Key]\n        : // for a recursive union type, the child will never extend the parent type.\n        // but the parent will still extend the child\n        Type extends Type[Key]\n        ? [Key]\n        : Type[Key] extends ReadonlyArray<infer ArrayType> // handling recursive types with arrays\n        ? Type extends ArrayType // is the type of the parent the same as the type of the array?\n          ? [Key] // yes, it's a recursive array type\n          : // for unions, the child type extends the parent\n          ArrayType extends Type\n          ? [Key] // we have a recursive array union\n          : // child is an array, but it's not a recursive array\n            [Key, ...NestedPaths<Type[Key], [...Depth, 1]>]\n        : // child is not structured the same as the parent\n          [Key, ...NestedPaths<Type[Key], [...Depth, 1]>] | [Key];\n    }[Extract<keyof Type, string>]\n  : [];\n\n/**\n * @public\n * returns keys (strings) for every path into a schema with a value of type\n * https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/\n */\nexport type NestedPathsOfType<TSchema, Type> = KeysOfAType<\n  {\n    [Property in Join<NestedPaths<TSchema, []>, '.'>]: PropertyType<TSchema, Property>;\n  },\n  Type\n>;\n\n/**\n * @public\n * @experimental\n */\nexport type StrictFilter<TSchema> =\n  | Partial<TSchema>\n  | ({\n      [Property in Join<NestedPaths<WithId<TSchema>, []>, '.'>]?: Condition<\n        PropertyType<WithId<TSchema>, Property>\n      >;\n    } & RootFilterOperators<WithId<TSchema>>);\n\n/**\n * @public\n * @experimental\n */\nexport type StrictUpdateFilter<TSchema> = {\n  $currentDate?: OnlyFieldsOfType<\n    TSchema,\n    Date | Timestamp,\n    true | { $type: 'date' | 'timestamp' }\n  >;\n  $inc?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $min?: StrictMatchKeysAndValues<TSchema>;\n  $max?: StrictMatchKeysAndValues<TSchema>;\n  $mul?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $rename?: Record<string, string>;\n  $set?: StrictMatchKeysAndValues<TSchema>;\n  $setOnInsert?: StrictMatchKeysAndValues<TSchema>;\n  $unset?: OnlyFieldsOfType<TSchema, any, '' | true | 1>;\n  $addToSet?: SetFields<TSchema>;\n  $pop?: OnlyFieldsOfType<TSchema, ReadonlyArray<any>, 1 | -1>;\n  $pull?: PullOperator<TSchema>;\n  $push?: PushOperator<TSchema>;\n  $pullAll?: PullAllOperator<TSchema>;\n  $bit?: OnlyFieldsOfType<\n    TSchema,\n    NumericType | undefined,\n    { and: IntegerType } | { or: IntegerType } | { xor: IntegerType }\n  >;\n} & Document;\n\n/**\n * @public\n * @experimental\n */\nexport type StrictMatchKeysAndValues<TSchema> = Readonly<\n  {\n    [Property in Join<NestedPaths<TSchema, []>, '.'>]?: PropertyType<TSchema, Property>;\n  } & {\n    [Property in `${NestedPathsOfType<TSchema, any[]>}.$${`[${string}]` | ''}`]?: ArrayElement<\n      PropertyType<TSchema, Property extends `${infer Key}.$${string}` ? Key : never>\n    >;\n  } & {\n    [Property in `${NestedPathsOfType<TSchema, Record<string, any>[]>}.$${\n      | `[${string}]`\n      | ''}.${string}`]?: any; // Could be further narrowed\n  } & Document\n>;\n", "import type { Document, Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  AbstractCallbackOperation,\n  Aspect,\n  defineAspects,\n  type OperationOptions\n} from './operation';\n\n/** @internal */\nexport interface GetMoreOptions extends OperationOptions {\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * getMore only supports 'comment' in server versions 4.4 and above.\n   */\n  comment?: unknown;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** TODO(NODE-4413): Address bug with maxAwaitTimeMS not being passed in from the cursor correctly */\n  maxAwaitTimeMS?: number;\n}\n\n/**\n * GetMore command: https://www.mongodb.com/docs/manual/reference/command/getMore/\n * @internal\n */\nexport interface GetMoreCommand {\n  getMore: Long;\n  collection: string;\n  batchSize?: number;\n  maxTimeMS?: number;\n  /** Only supported on wire versions 10 or greater */\n  comment?: unknown;\n}\n\n/** @internal */\nexport class GetMoreOperation extends AbstractCallbackOperation {\n  cursorId: Long;\n  override options: GetMoreOptions;\n\n  constructor(ns: MongoDBNamespace, cursorId: Long, server: Server, options: GetMoreOptions) {\n    super(options);\n\n    this.options = options;\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Getmore must run on the same server operation began on')\n      );\n    }\n\n    if (this.cursorId == null || this.cursorId.isZero()) {\n      return callback(new MongoRuntimeError('Unable to iterate cursor with no id'));\n    }\n\n    const collection = this.ns.collection;\n    if (collection == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(new MongoRuntimeError('A collection name must be determined before getMore'));\n    }\n\n    const getMoreCmd: GetMoreCommand = {\n      getMore: this.cursorId,\n      collection\n    };\n\n    if (typeof this.options.batchSize === 'number') {\n      getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n    }\n\n    if (typeof this.options.maxAwaitTimeMS === 'number') {\n      getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined && maxWireVersion(server) >= 9) {\n      getMoreCmd.comment = this.options.comment;\n    }\n\n    const commandOptions = {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch',\n      ...this.options\n    };\n\n    server.command(this.ns, getMoreCmd, commandOptions, callback);\n  }\n}\n\ndefineAspects(GetMoreOperation, [Aspect.READ_OPERATION, Aspect.MUST_SELECT_SAME_SERVER]);\n", "import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport {\n  AbstractCallbackOperation,\n  Aspect,\n  defineAspects,\n  type OperationOptions\n} from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractCallbackOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<void>\n  ): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Killcursor must run on the same server operation began on')\n      );\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(\n        new MongoRuntimeError('A collection name must be determined before killCursors')\n      );\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n\n    server.command(this.ns, killCursorsCommand, { session }, () => callback());\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n", "/** @internal */\nexport class ConnectionPoolMetrics {\n  static readonly TXN = 'txn' as const;\n  static readonly CURSOR = 'cursor' as const;\n  static readonly OTHER = 'other' as const;\n\n  txnConnections = 0;\n  cursorConnections = 0;\n  otherConnections = 0;\n\n  /**\n   * Mark a connection as pinned for a specific operation.\n   */\n  markPinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections += 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections += 1;\n    } else {\n      this.otherConnections += 1;\n    }\n  }\n\n  /**\n   * Unmark a connection as pinned for an operation.\n   */\n  markUnpinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections -= 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections -= 1;\n    } else {\n      this.otherConnections -= 1;\n    }\n  }\n\n  /**\n   * Return information about the cmap metrics as a string.\n   */\n  info(maxPoolSize: number): string {\n    return (\n      'Timed out while checking out a connection from connection pool: ' +\n      `maxPoolSize: ${maxPoolSize}, ` +\n      `connections in use by cursors: ${this.cursorConnections}, ` +\n      `connections in use by transactions: ${this.txnConnections}, ` +\n      `connections in use by other operations: ${this.otherConnections}`\n    );\n  }\n\n  /**\n   * Reset the metrics to the initial values.\n   */\n  reset(): void {\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n}\n", "import { type Document, Long, type ObjectId } from '../bson';\nimport { type MongoError, MongoRuntimeError, type MongoServerError } from '../error';\nimport { arrayStrictEqual, compareObjectId, errorStrictEqual, HostAddress, now } from '../utils';\nimport type { ClusterTime } from './common';\nimport { ServerType } from './common';\n\nconst WRITABLE_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.Standalone,\n  ServerType.Mongos,\n  ServerType.LoadBalancer\n]);\n\nconst DATA_BEARING_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.RSSecondary,\n  ServerType.Mongos,\n  ServerType.Standalone,\n  ServerType.LoadBalancer\n]);\n\n/** @public */\nexport interface TopologyVersion {\n  processId: ObjectId;\n  counter: Long;\n}\n\n/** @public */\nexport type TagSet = { [key: string]: string };\n\n/** @internal */\nexport interface ServerDescriptionOptions {\n  /** An Error used for better reporting debugging */\n  error?: MongoServerError;\n\n  /** The round trip time to ping this server (in ms) */\n  roundTripTime?: number;\n\n  /** If the client is in load balancing mode. */\n  loadBalanced?: boolean;\n}\n\n/**\n * The client's view of a single server, based on the most recent hello outcome.\n *\n * Internal type, not meant to be directly instantiated\n * @public\n */\nexport class ServerDescription {\n  address: string;\n  type: ServerType;\n  hosts: string[];\n  passives: string[];\n  arbiters: string[];\n  tags: TagSet;\n  error: MongoError | null;\n  topologyVersion: TopologyVersion | null;\n  minWireVersion: number;\n  maxWireVersion: number;\n  roundTripTime: number;\n  lastUpdateTime: number;\n  lastWriteDate: number;\n  me: string | null;\n  primary: string | null;\n  setName: string | null;\n  setVersion: number | null;\n  electionId: ObjectId | null;\n  logicalSessionTimeoutMinutes: number | null;\n\n  // NOTE: does this belong here? It seems we should gossip the cluster time at the CMAP level\n  $clusterTime?: ClusterTime;\n\n  /**\n   * Create a ServerDescription\n   * @internal\n   *\n   * @param address - The address of the server\n   * @param hello - An optional hello response for this server\n   */\n  constructor(\n    address: HostAddress | string,\n    hello?: Document,\n    options: ServerDescriptionOptions = {}\n  ) {\n    if (address == null || address === '') {\n      throw new MongoRuntimeError('ServerDescription must be provided with a non-empty address');\n    }\n\n    this.address =\n      typeof address === 'string'\n        ? HostAddress.fromString(address).toString() // Use HostAddress to normalize\n        : address.toString();\n    this.type = parseServerType(hello, options);\n    this.hosts = hello?.hosts?.map((host: string) => host.toLowerCase()) ?? [];\n    this.passives = hello?.passives?.map((host: string) => host.toLowerCase()) ?? [];\n    this.arbiters = hello?.arbiters?.map((host: string) => host.toLowerCase()) ?? [];\n    this.tags = hello?.tags ?? {};\n    this.minWireVersion = hello?.minWireVersion ?? 0;\n    this.maxWireVersion = hello?.maxWireVersion ?? 0;\n    this.roundTripTime = options?.roundTripTime ?? -1;\n    this.lastUpdateTime = now();\n    this.lastWriteDate = hello?.lastWrite?.lastWriteDate ?? 0;\n    this.error = options.error ?? null;\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    this.topologyVersion = this.error?.topologyVersion ?? hello?.topologyVersion ?? null;\n    this.setName = hello?.setName ?? null;\n    this.setVersion = hello?.setVersion ?? null;\n    this.electionId = hello?.electionId ?? null;\n    this.logicalSessionTimeoutMinutes = hello?.logicalSessionTimeoutMinutes ?? null;\n    this.primary = hello?.primary ?? null;\n    this.me = hello?.me?.toLowerCase() ?? null;\n    this.$clusterTime = hello?.$clusterTime ?? null;\n  }\n\n  get hostAddress(): HostAddress {\n    return HostAddress.fromString(this.address);\n  }\n\n  get allHosts(): string[] {\n    return this.hosts.concat(this.arbiters).concat(this.passives);\n  }\n\n  /** Is this server available for reads*/\n  get isReadable(): boolean {\n    return this.type === ServerType.RSSecondary || this.isWritable;\n  }\n\n  /** Is this server data bearing */\n  get isDataBearing(): boolean {\n    return DATA_BEARING_SERVER_TYPES.has(this.type);\n  }\n\n  /** Is this server available for writes */\n  get isWritable(): boolean {\n    return WRITABLE_SERVER_TYPES.has(this.type);\n  }\n\n  get host(): string {\n    const chopLength = `:${this.port}`.length;\n    return this.address.slice(0, -chopLength);\n  }\n\n  get port(): number {\n    const port = this.address.split(':').pop();\n    return port ? Number.parseInt(port, 10) : 27017;\n  }\n\n  /**\n   * Determines if another `ServerDescription` is equal to this one per the rules defined\n   * in the {@link https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#serverdescription|SDAM spec}\n   */\n  equals(other?: ServerDescription | null): boolean {\n    // Despite using the comparator that would determine a nullish topologyVersion as greater than\n    // for equality we should only always perform direct equality comparison\n    const topologyVersionsEqual =\n      this.topologyVersion === other?.topologyVersion ||\n      compareTopologyVersion(this.topologyVersion, other?.topologyVersion) === 0;\n\n    const electionIdsEqual =\n      this.electionId != null && other?.electionId != null\n        ? compareObjectId(this.electionId, other.electionId) === 0\n        : this.electionId === other?.electionId;\n\n    return (\n      other != null &&\n      errorStrictEqual(this.error, other.error) &&\n      this.type === other.type &&\n      this.minWireVersion === other.minWireVersion &&\n      arrayStrictEqual(this.hosts, other.hosts) &&\n      tagsStrictEqual(this.tags, other.tags) &&\n      this.setName === other.setName &&\n      this.setVersion === other.setVersion &&\n      electionIdsEqual &&\n      this.primary === other.primary &&\n      this.logicalSessionTimeoutMinutes === other.logicalSessionTimeoutMinutes &&\n      topologyVersionsEqual\n    );\n  }\n}\n\n// Parses a `hello` message and determines the server type\nexport function parseServerType(hello?: Document, options?: ServerDescriptionOptions): ServerType {\n  if (options?.loadBalanced) {\n    return ServerType.LoadBalancer;\n  }\n\n  if (!hello || !hello.ok) {\n    return ServerType.Unknown;\n  }\n\n  if (hello.isreplicaset) {\n    return ServerType.RSGhost;\n  }\n\n  if (hello.msg && hello.msg === 'isdbgrid') {\n    return ServerType.Mongos;\n  }\n\n  if (hello.setName) {\n    if (hello.hidden) {\n      return ServerType.RSOther;\n    } else if (hello.isWritablePrimary) {\n      return ServerType.RSPrimary;\n    } else if (hello.secondary) {\n      return ServerType.RSSecondary;\n    } else if (hello.arbiterOnly) {\n      return ServerType.RSArbiter;\n    } else {\n      return ServerType.RSOther;\n    }\n  }\n\n  return ServerType.Standalone;\n}\n\nfunction tagsStrictEqual(tags: TagSet, tags2: TagSet): boolean {\n  const tagsKeys = Object.keys(tags);\n  const tags2Keys = Object.keys(tags2);\n\n  return (\n    tagsKeys.length === tags2Keys.length &&\n    tagsKeys.every((key: string) => tags2[key] === tags[key])\n  );\n}\n\n/**\n * Compares two topology versions.\n *\n * 1. If the response topologyVersion is unset or the ServerDescription's\n *    topologyVersion is null, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is not equal to the\n *    ServerDescription's, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is equal to the\n *    ServerDescription's, the client MUST use the counter field to determine\n *    which topologyVersion is more recent.\n *\n * ```ts\n * currentTv <   newTv === -1\n * currentTv === newTv === 0\n * currentTv >   newTv === 1\n * ```\n */\nexport function compareTopologyVersion(\n  currentTv?: TopologyVersion | null,\n  newTv?: TopologyVersion | null\n): 0 | -1 | 1 {\n  if (currentTv == null || newTv == null) {\n    return -1;\n  }\n\n  if (!currentTv.processId.equals(newTv.processId)) {\n    return -1;\n  }\n\n  // TODO(NODE-2674): Preserve int64 sent from MongoDB\n  const currentCounter = Long.isLong(currentTv.counter)\n    ? currentTv.counter\n    : Long.fromNumber(currentTv.counter);\n  const newCounter = Long.isLong(newTv.counter) ? newTv.counter : Long.fromNumber(newTv.counter);\n\n  return currentCounter.compare(newCounter);\n}\n", "import type { ObjectId } from '../bson';\nimport * as WIRE_CONSTANTS from '../cmap/wire_protocol/constants';\nimport { MongoRuntimeError, type MongoServerError } from '../error';\nimport { compareObjectId, shuffle } from '../utils';\nimport { ServerType, TopologyType } from './common';\nimport { ServerDescription } from './server_description';\nimport type { SrvPollingEvent } from './srv_polling';\n\n// constants related to compatibility checks\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\n\nconst MONGOS_OR_UNKNOWN = new Set<ServerType>([ServerType.Mongos, ServerType.Unknown]);\nconst MONGOS_OR_STANDALONE = new Set<ServerType>([ServerType.Mongos, ServerType.Standalone]);\nconst NON_PRIMARY_RS_MEMBERS = new Set<ServerType>([\n  ServerType.RSSecondary,\n  ServerType.RSArbiter,\n  ServerType.RSOther\n]);\n\n/** @public */\nexport interface TopologyDescriptionOptions {\n  heartbeatFrequencyMS?: number;\n  localThresholdMS?: number;\n}\n\n/**\n * Representation of a deployment of servers\n * @public\n */\nexport class TopologyDescription {\n  type: TopologyType;\n  setName: string | null;\n  maxSetVersion: number | null;\n  maxElectionId: ObjectId | null;\n  servers: Map<string, ServerDescription>;\n  stale: boolean;\n  compatible: boolean;\n  compatibilityError?: string;\n  logicalSessionTimeoutMinutes: number | null;\n  heartbeatFrequencyMS: number;\n  localThresholdMS: number;\n  commonWireVersion: number;\n\n  /**\n   * Create a TopologyDescription\n   */\n  constructor(\n    topologyType: TopologyType,\n    serverDescriptions: Map<string, ServerDescription> | null = null,\n    setName: string | null = null,\n    maxSetVersion: number | null = null,\n    maxElectionId: ObjectId | null = null,\n    commonWireVersion: number | null = null,\n    options: TopologyDescriptionOptions | null = null\n  ) {\n    options = options ?? {};\n\n    this.type = topologyType ?? TopologyType.Unknown;\n    this.servers = serverDescriptions ?? new Map();\n    this.stale = false;\n    this.compatible = true;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 0;\n    this.localThresholdMS = options.localThresholdMS ?? 15;\n    this.setName = setName ?? null;\n    this.maxElectionId = maxElectionId ?? null;\n    this.maxSetVersion = maxSetVersion ?? null;\n    this.commonWireVersion = commonWireVersion ?? 0;\n\n    // determine server compatibility\n    for (const serverDescription of this.servers.values()) {\n      // Load balancer mode is always compatible.\n      if (\n        serverDescription.type === ServerType.Unknown ||\n        serverDescription.type === ServerType.LoadBalancer\n      ) {\n        continue;\n      }\n\n      if (serverDescription.minWireVersion > MAX_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} requires wire version ${serverDescription.minWireVersion}, but this version of the driver only supports up to ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n      }\n\n      if (serverDescription.maxWireVersion < MIN_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} reports wire version ${serverDescription.maxWireVersion}, but this version of the driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION}).`;\n        break;\n      }\n    }\n\n    // Whenever a client updates the TopologyDescription from a hello response, it MUST set\n    // TopologyDescription.logicalSessionTimeoutMinutes to the smallest logicalSessionTimeoutMinutes\n    // value among ServerDescriptions of all data-bearing server types. If any have a null\n    // logicalSessionTimeoutMinutes, then TopologyDescription.logicalSessionTimeoutMinutes MUST be\n    // set to null.\n    this.logicalSessionTimeoutMinutes = null;\n    for (const [, server] of this.servers) {\n      if (server.isReadable) {\n        if (server.logicalSessionTimeoutMinutes == null) {\n          // If any of the servers have a null logicalSessionsTimeout, then the whole topology does\n          this.logicalSessionTimeoutMinutes = null;\n          break;\n        }\n\n        if (this.logicalSessionTimeoutMinutes == null) {\n          // First server with a non null logicalSessionsTimeout\n          this.logicalSessionTimeoutMinutes = server.logicalSessionTimeoutMinutes;\n          continue;\n        }\n\n        // Always select the smaller of the:\n        // current server logicalSessionsTimeout and the topologies logicalSessionsTimeout\n        this.logicalSessionTimeoutMinutes = Math.min(\n          this.logicalSessionTimeoutMinutes,\n          server.logicalSessionTimeoutMinutes\n        );\n      }\n    }\n  }\n\n  /**\n   * Returns a new TopologyDescription based on the SrvPollingEvent\n   * @internal\n   */\n  updateFromSrvPollingEvent(ev: SrvPollingEvent, srvMaxHosts = 0): TopologyDescription {\n    /** The SRV addresses defines the set of addresses we should be using */\n    const incomingHostnames = ev.hostnames();\n    const currentHostnames = new Set(this.servers.keys());\n\n    const hostnamesToAdd = new Set<string>(incomingHostnames);\n    const hostnamesToRemove = new Set<string>();\n    for (const hostname of currentHostnames) {\n      // filter hostnamesToAdd (made from incomingHostnames) down to what is *not* present in currentHostnames\n      hostnamesToAdd.delete(hostname);\n      if (!incomingHostnames.has(hostname)) {\n        // If the SRV Records no longer include this hostname\n        // we have to stop using it\n        hostnamesToRemove.add(hostname);\n      }\n    }\n\n    if (hostnamesToAdd.size === 0 && hostnamesToRemove.size === 0) {\n      // No new hosts to add and none to remove\n      return this;\n    }\n\n    const serverDescriptions = new Map(this.servers);\n    for (const removedHost of hostnamesToRemove) {\n      serverDescriptions.delete(removedHost);\n    }\n\n    if (hostnamesToAdd.size > 0) {\n      if (srvMaxHosts === 0) {\n        // Add all!\n        for (const hostToAdd of hostnamesToAdd) {\n          serverDescriptions.set(hostToAdd, new ServerDescription(hostToAdd));\n        }\n      } else if (serverDescriptions.size < srvMaxHosts) {\n        // Add only the amount needed to get us back to srvMaxHosts\n        const selectedHosts = shuffle(hostnamesToAdd, srvMaxHosts - serverDescriptions.size);\n        for (const selectedHostToAdd of selectedHosts) {\n          serverDescriptions.set(selectedHostToAdd, new ServerDescription(selectedHostToAdd));\n        }\n      }\n    }\n\n    return new TopologyDescription(\n      this.type,\n      serverDescriptions,\n      this.setName,\n      this.maxSetVersion,\n      this.maxElectionId,\n      this.commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  /**\n   * Returns a copy of this description updated with a given ServerDescription\n   * @internal\n   */\n  update(serverDescription: ServerDescription): TopologyDescription {\n    const address = serverDescription.address;\n\n    // potentially mutated values\n    let { type: topologyType, setName, maxSetVersion, maxElectionId, commonWireVersion } = this;\n\n    const serverType = serverDescription.type;\n    const serverDescriptions = new Map(this.servers);\n\n    // update common wire version\n    if (serverDescription.maxWireVersion !== 0) {\n      if (commonWireVersion == null) {\n        commonWireVersion = serverDescription.maxWireVersion;\n      } else {\n        commonWireVersion = Math.min(commonWireVersion, serverDescription.maxWireVersion);\n      }\n    }\n\n    if (\n      typeof serverDescription.setName === 'string' &&\n      typeof setName === 'string' &&\n      serverDescription.setName !== setName\n    ) {\n      if (topologyType === TopologyType.Single) {\n        // \"Single\" Topology with setName mismatch is direct connection usage, mark unknown do not remove\n        serverDescription = new ServerDescription(address);\n      } else {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    // update the actual server description\n    serverDescriptions.set(address, serverDescription);\n\n    if (topologyType === TopologyType.Single) {\n      // once we are defined as single, that never changes\n      return new TopologyDescription(\n        TopologyType.Single,\n        serverDescriptions,\n        setName,\n        maxSetVersion,\n        maxElectionId,\n        commonWireVersion,\n        { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n      );\n    }\n\n    if (topologyType === TopologyType.Unknown) {\n      if (serverType === ServerType.Standalone && this.servers.size !== 1) {\n        serverDescriptions.delete(address);\n      } else {\n        topologyType = topologyTypeForServerType(serverType);\n      }\n    }\n\n    if (topologyType === TopologyType.Sharded) {\n      if (!MONGOS_OR_UNKNOWN.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetNoPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n\n      if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        const result = updateRsNoPrimaryFromMember(serverDescriptions, serverDescription, setName);\n        topologyType = result[0];\n        setName = result[1];\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetWithPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n        topologyType = checkHasPrimary(serverDescriptions);\n      } else if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        topologyType = updateRsWithPrimaryFromMember(\n          serverDescriptions,\n          serverDescription,\n          setName\n        );\n      } else {\n        topologyType = checkHasPrimary(serverDescriptions);\n      }\n    }\n\n    return new TopologyDescription(\n      topologyType,\n      serverDescriptions,\n      setName,\n      maxSetVersion,\n      maxElectionId,\n      commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  get error(): MongoServerError | null {\n    const descriptionsWithError = Array.from(this.servers.values()).filter(\n      (sd: ServerDescription) => sd.error\n    );\n\n    if (descriptionsWithError.length > 0) {\n      return descriptionsWithError[0].error;\n    }\n\n    return null;\n  }\n\n  /**\n   * Determines if the topology description has any known servers\n   */\n  get hasKnownServers(): boolean {\n    return Array.from(this.servers.values()).some(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    );\n  }\n\n  /**\n   * Determines if this topology description has a data-bearing server available.\n   */\n  get hasDataBearingServers(): boolean {\n    return Array.from(this.servers.values()).some((sd: ServerDescription) => sd.isDataBearing);\n  }\n\n  /**\n   * Determines if the topology has a definition for the provided address\n   * @internal\n   */\n  hasServer(address: string): boolean {\n    return this.servers.has(address);\n  }\n}\n\nfunction topologyTypeForServerType(serverType: ServerType): TopologyType {\n  switch (serverType) {\n    case ServerType.Standalone:\n      return TopologyType.Single;\n    case ServerType.Mongos:\n      return TopologyType.Sharded;\n    case ServerType.RSPrimary:\n      return TopologyType.ReplicaSetWithPrimary;\n    case ServerType.RSOther:\n    case ServerType.RSSecondary:\n      return TopologyType.ReplicaSetNoPrimary;\n    default:\n      return TopologyType.Unknown;\n  }\n}\n\nfunction updateRsFromPrimary(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null,\n  maxSetVersion: number | null = null,\n  maxElectionId: ObjectId | null = null\n): [TopologyType, string | null, number | null, ObjectId | null] {\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n  }\n\n  if (serverDescription.maxWireVersion >= 17) {\n    const electionIdComparison = compareObjectId(maxElectionId, serverDescription.electionId);\n    const maxElectionIdIsEqual = electionIdComparison === 0;\n    const maxElectionIdIsLess = electionIdComparison === -1;\n    const maxSetVersionIsLessOrEqual =\n      (maxSetVersion ?? -1) <= (serverDescription.setVersion ?? -1);\n\n    if (maxElectionIdIsLess || (maxElectionIdIsEqual && maxSetVersionIsLessOrEqual)) {\n      // The reported electionId was greater\n      // or the electionId was equal and reported setVersion was greater\n      // Always update both values, they are a tuple\n      maxElectionId = serverDescription.electionId;\n      maxSetVersion = serverDescription.setVersion;\n    } else {\n      // Stale primary\n      // replace serverDescription with a default ServerDescription of type \"Unknown\"\n      serverDescriptions.set(\n        serverDescription.address,\n        new ServerDescription(serverDescription.address)\n      );\n\n      return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n    }\n  } else {\n    const electionId = serverDescription.electionId ? serverDescription.electionId : null;\n    if (serverDescription.setVersion && electionId) {\n      if (maxSetVersion && maxElectionId) {\n        if (\n          maxSetVersion > serverDescription.setVersion ||\n          compareObjectId(maxElectionId, electionId) > 0\n        ) {\n          // this primary is stale, we must remove it\n          serverDescriptions.set(\n            serverDescription.address,\n            new ServerDescription(serverDescription.address)\n          );\n\n          return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n        }\n      }\n\n      maxElectionId = serverDescription.electionId;\n    }\n\n    if (\n      serverDescription.setVersion != null &&\n      (maxSetVersion == null || serverDescription.setVersion > maxSetVersion)\n    ) {\n      maxSetVersion = serverDescription.setVersion;\n    }\n  }\n\n  // We've heard from the primary. Is it the same primary as before?\n  for (const [address, server] of serverDescriptions) {\n    if (server.type === ServerType.RSPrimary && server.address !== serverDescription.address) {\n      // Reset old primary's type to Unknown.\n      serverDescriptions.set(address, new ServerDescription(server.address));\n\n      // There can only be one primary\n      break;\n    }\n  }\n\n  // Discover new hosts from this primary's response.\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  // Remove hosts not in the response.\n  const currentAddresses = Array.from(serverDescriptions.keys());\n  const responseAddresses = serverDescription.allHosts;\n  currentAddresses\n    .filter((addr: string) => responseAddresses.indexOf(addr) === -1)\n    .forEach((address: string) => {\n      serverDescriptions.delete(address);\n    });\n\n  return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n}\n\nfunction updateRsWithPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null\n): TopologyType {\n  if (setName == null) {\n    // TODO(NODE-3483): should be an appropriate runtime error\n    throw new MongoRuntimeError('Argument \"setName\" is required if connected to a replica set');\n  }\n\n  if (\n    setName !== serverDescription.setName ||\n    (serverDescription.me && serverDescription.address !== serverDescription.me)\n  ) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return checkHasPrimary(serverDescriptions);\n}\n\nfunction updateRsNoPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null\n): [TopologyType, string | null] {\n  const topologyType = TopologyType.ReplicaSetNoPrimary;\n  setName = setName ?? serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [topologyType, setName];\n  }\n\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  if (serverDescription.me && serverDescription.address !== serverDescription.me) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return [topologyType, setName];\n}\n\nfunction checkHasPrimary(serverDescriptions: Map<string, ServerDescription>): TopologyType {\n  for (const serverDescription of serverDescriptions.values()) {\n    if (serverDescription.type === ServerType.RSPrimary) {\n      return TopologyType.ReplicaSetWithPrimary;\n    }\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n", "import { MongoInvalidArgumentError } from '../../error';\nimport type { ReadPreferenceLike } from '../../read_preference';\nimport { ReadPreference } from '../../read_preference';\nimport { ServerType } from '../../sdam/common';\nimport type { Server } from '../../sdam/server';\nimport type { ServerDescription } from '../../sdam/server_description';\nimport type { Topology } from '../../sdam/topology';\nimport { TopologyDescription } from '../../sdam/topology_description';\nimport type { Connection } from '../connection';\n\nexport interface ReadPreferenceOption {\n  readPreference?: ReadPreferenceLike;\n}\n\nexport function getReadPreference(options?: ReadPreferenceOption): ReadPreference {\n  // Default to command version of the readPreference\n  let readPreference = options?.readPreference ?? ReadPreference.primary;\n  // If we have an option readPreference override the command one\n  if (options?.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = ReadPreference.fromString(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoInvalidArgumentError(\n      'Option \"readPreference\" must be a ReadPreference instance'\n    );\n  }\n\n  return readPreference;\n}\n\nexport function isSharded(topologyOrServer?: Topology | Server | Connection): boolean {\n  if (topologyOrServer == null) {\n    return false;\n  }\n\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  //       happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers: ServerDescription[] = Array.from(topologyOrServer.description.servers.values());\n    return servers.some((server: ServerDescription) => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n", "import type { Document } from './bson';\nimport { MongoRuntimeError, MongoTransactionError } from './error';\nimport type { CommandOperationOptions } from './operations/command';\nimport { ReadConcern, type ReadConcernLike } from './read_concern';\nimport type { ReadPreferenceLike } from './read_preference';\nimport { ReadPreference } from './read_preference';\nimport type { Server } from './sdam/server';\nimport { WriteConcern } from './write_concern';\n\n/** @internal */\nexport const TxnState = Object.freeze({\n  NO_TRANSACTION: 'NO_TRANSACTION',\n  STARTING_TRANSACTION: 'STARTING_TRANSACTION',\n  TRANSACTION_IN_PROGRESS: 'TRANSACTION_IN_PROGRESS',\n  TRANSACTION_COMMITTED: 'TRANSACTION_COMMITTED',\n  TRANSACTION_COMMITTED_EMPTY: 'TRANSACTION_COMMITTED_EMPTY',\n  TRANSACTION_ABORTED: 'TRANSACTION_ABORTED'\n} as const);\n\n/** @internal */\nexport type TxnState = (typeof TxnState)[keyof typeof TxnState];\n\nconst stateMachine: { [state in TxnState]: TxnState[] } = {\n  [TxnState.NO_TRANSACTION]: [TxnState.NO_TRANSACTION, TxnState.STARTING_TRANSACTION],\n  [TxnState.STARTING_TRANSACTION]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_IN_PROGRESS]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_COMMITTED]: [\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.STARTING_TRANSACTION,\n    TxnState.NO_TRANSACTION\n  ],\n  [TxnState.TRANSACTION_ABORTED]: [TxnState.STARTING_TRANSACTION, TxnState.NO_TRANSACTION],\n  [TxnState.TRANSACTION_COMMITTED_EMPTY]: [\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.NO_TRANSACTION\n  ]\n};\n\nconst ACTIVE_STATES: Set<TxnState> = new Set([\n  TxnState.STARTING_TRANSACTION,\n  TxnState.TRANSACTION_IN_PROGRESS\n]);\n\nconst COMMITTED_STATES: Set<TxnState> = new Set([\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_COMMITTED_EMPTY,\n  TxnState.TRANSACTION_ABORTED\n]);\n\n/**\n * Configuration options for a transaction.\n * @public\n */\nexport interface TransactionOptions extends CommandOperationOptions {\n  // TODO(NODE-3344): These options use the proper class forms of these settings, it should accept the basic enum values too\n  /** A default read concern for commands in this transaction */\n  readConcern?: ReadConcernLike;\n  /** A default writeConcern for commands in this transaction */\n  writeConcern?: WriteConcern;\n  /** A default read preference for commands in this transaction */\n  readPreference?: ReadPreferenceLike;\n  /** Specifies the maximum amount of time to allow a commit action on a transaction to run in milliseconds */\n  maxCommitTimeMS?: number;\n}\n\n/**\n * @public\n * A class maintaining state related to a server transaction. Internal Only\n */\nexport class Transaction {\n  /** @internal */\n  state: TxnState;\n  options: TransactionOptions;\n  /** @internal */\n  _pinnedServer?: Server;\n  /** @internal */\n  _recoveryToken?: Document;\n\n  /** Create a transaction @internal */\n  constructor(options?: TransactionOptions) {\n    options = options ?? {};\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      if (writeConcern.w === 0) {\n        throw new MongoTransactionError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = writeConcern;\n    }\n\n    if (options.readConcern) {\n      this.options.readConcern = ReadConcern.fromOptions(options);\n    }\n\n    if (options.readPreference) {\n      this.options.readPreference = ReadPreference.fromOptions(options);\n    }\n\n    if (options.maxCommitTimeMS) {\n      this.options.maxTimeMS = options.maxCommitTimeMS;\n    }\n\n    // TODO: This isn't technically necessary\n    this._pinnedServer = undefined;\n    this._recoveryToken = undefined;\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this._pinnedServer;\n  }\n\n  get recoveryToken(): Document | undefined {\n    return this._recoveryToken;\n  }\n\n  get isPinned(): boolean {\n    return !!this.server;\n  }\n\n  /** @returns Whether the transaction has started */\n  get isStarting(): boolean {\n    return this.state === TxnState.STARTING_TRANSACTION;\n  }\n\n  /**\n   * @returns Whether this session is presently in a transaction\n   */\n  get isActive(): boolean {\n    return ACTIVE_STATES.has(this.state);\n  }\n\n  get isCommitted(): boolean {\n    return COMMITTED_STATES.has(this.state);\n  }\n  /**\n   * Transition the transaction in the state machine\n   * @internal\n   * @param nextState - The new state to transition to\n   */\n  transition(nextState: TxnState): void {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.includes(nextState)) {\n      this.state = nextState;\n      if (\n        this.state === TxnState.NO_TRANSACTION ||\n        this.state === TxnState.STARTING_TRANSACTION ||\n        this.state === TxnState.TRANSACTION_ABORTED\n      ) {\n        this.unpinServer();\n      }\n      return;\n    }\n\n    throw new MongoRuntimeError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n\n  /** @internal */\n  pinServer(server: Server): void {\n    if (this.isActive) {\n      this._pinnedServer = server;\n    }\n  }\n\n  /** @internal */\n  unpinServer(): void {\n    this._pinnedServer = undefined;\n  }\n}\n\nexport function isTransactionCommand(command: Document): boolean {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n", "import { promisify } from 'util';\n\nimport { Binary, type Document, Long, type Timestamp } from './bson';\nimport type { CommandOptions, Connection } from './cmap/connection';\nimport { ConnectionPoolMetrics } from './cmap/metrics';\nimport { isSharded } from './cmap/wire_protocol/shared';\nimport { PINNED, UNPINNED } from './constants';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport {\n  type AnyError,\n  MongoAPIError,\n  MongoCompatibilityError,\n  MONGODB_ERROR_CODES,\n  type MongoDriverError,\n  MongoError,\n  MongoErrorLabel,\n  MongoExpiredSessionError,\n  MongoInvalidArgumentError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoTransactionError,\n  MongoWriteConcernError\n} from './error';\nimport type { MongoClient, MongoOptions } from './mongo_client';\nimport { TypedEventEmitter } from './mongo_types';\nimport { executeOperation } from './operations/execute_operation';\nimport { RunAdminCommandOperation } from './operations/run_command';\nimport { ReadConcernLevel } from './read_concern';\nimport { ReadPreference } from './read_preference';\nimport { _advanceClusterTime, type ClusterTime, TopologyType } from './sdam/common';\nimport {\n  isTransactionCommand,\n  Transaction,\n  type TransactionOptions,\n  TxnState\n} from './transactions';\nimport {\n  ByteUtils,\n  calculateDurationInMs,\n  type Callback,\n  commandSupportsReadConcern,\n  isPromiseLike,\n  List,\n  maxWireVersion,\n  now,\n  uuidV4\n} from './utils';\nimport { WriteConcern } from './write_concern';\n\nconst minWireVersionForShardedTransactions = 8;\n\n/** @public */\nexport interface ClientSessionOptions {\n  /** Whether causal consistency should be enabled on this session */\n  causalConsistency?: boolean;\n  /** Whether all read operations should be read from the same snapshot for this session (NOTE: not compatible with `causalConsistency=true`) */\n  snapshot?: boolean;\n  /** The default TransactionOptions to use for transactions started on this session. */\n  defaultTransactionOptions?: TransactionOptions;\n\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  /** @internal */\n  explicit?: boolean;\n  /** @internal */\n  initialClusterTime?: ClusterTime;\n}\n\n/** @public */\nexport type WithTransactionCallback<T = void> = (session: ClientSession) => Promise<T>;\n\n/** @public */\nexport type ClientSessionEvents = {\n  ended(session: ClientSession): void;\n};\n\n/** @internal */\nconst kServerSession = Symbol('serverSession');\n/** @internal */\nconst kSnapshotTime = Symbol('snapshotTime');\n/** @internal */\nconst kSnapshotEnabled = Symbol('snapshotEnabled');\n/** @internal */\nconst kPinnedConnection = Symbol('pinnedConnection');\n/** @internal Accumulates total number of increments to add to txnNumber when applying session to command */\nconst kTxnNumberIncrement = Symbol('txnNumberIncrement');\n\n/** @public */\nexport interface EndSessionOptions {\n  /**\n   * An optional error which caused the call to end this session\n   * @internal\n   */\n  error?: AnyError;\n  force?: boolean;\n  forceClear?: boolean;\n}\n\n/**\n * A class representing a client session on the server\n *\n * NOTE: not meant to be instantiated directly.\n * @public\n */\nexport class ClientSession extends TypedEventEmitter<ClientSessionEvents> {\n  /** @internal */\n  client: MongoClient;\n  /** @internal */\n  sessionPool: ServerSessionPool;\n  hasEnded: boolean;\n  clientOptions?: MongoOptions;\n  supports: { causalConsistency: boolean };\n  clusterTime?: ClusterTime;\n  operationTime?: Timestamp;\n  explicit: boolean;\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  defaultTransactionOptions: TransactionOptions;\n  transaction: Transaction;\n  /** @internal */\n  [kServerSession]: ServerSession | null;\n  /** @internal */\n  [kSnapshotTime]?: Timestamp;\n  /** @internal */\n  [kSnapshotEnabled] = false;\n  /** @internal */\n  [kPinnedConnection]?: Connection;\n  /** @internal */\n  [kTxnNumberIncrement]: number;\n\n  /**\n   * Create a client session.\n   * @internal\n   * @param client - The current client\n   * @param sessionPool - The server session pool (Internal Class)\n   * @param options - Optional settings\n   * @param clientOptions - Optional settings provided when creating a MongoClient\n   */\n  constructor(\n    client: MongoClient,\n    sessionPool: ServerSessionPool,\n    options: ClientSessionOptions,\n    clientOptions?: MongoOptions\n  ) {\n    super();\n\n    if (client == null) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a MongoClient');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options ?? {};\n\n    if (options.snapshot === true) {\n      this[kSnapshotEnabled] = true;\n      if (options.causalConsistency === true) {\n        throw new MongoInvalidArgumentError(\n          'Properties \"causalConsistency\" and \"snapshot\" are mutually exclusive'\n        );\n      }\n    }\n\n    this.client = client;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.clientOptions = clientOptions;\n\n    this.explicit = !!options.explicit;\n    this[kServerSession] = this.explicit ? this.sessionPool.acquire() : null;\n    this[kTxnNumberIncrement] = 0;\n\n    const defaultCausalConsistencyValue = this.explicit && options.snapshot !== true;\n    this.supports = {\n      // if we can enable causal consistency, do so by default\n      causalConsistency: options.causalConsistency ?? defaultCausalConsistencyValue\n    };\n\n    this.clusterTime = options.initialClusterTime;\n\n    this.operationTime = undefined;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /** The server id associated with this session */\n  get id(): ServerSessionId | undefined {\n    return this[kServerSession]?.id;\n  }\n\n  get serverSession(): ServerSession {\n    let serverSession = this[kServerSession];\n    if (serverSession == null) {\n      if (this.explicit) {\n        throw new MongoRuntimeError('Unexpected null serverSession for an explicit session');\n      }\n      if (this.hasEnded) {\n        throw new MongoRuntimeError('Unexpected null serverSession for an ended implicit session');\n      }\n      serverSession = this.sessionPool.acquire();\n      this[kServerSession] = serverSession;\n    }\n    return serverSession;\n  }\n\n  /** Whether or not this session is configured for snapshot reads */\n  get snapshotEnabled(): boolean {\n    return this[kSnapshotEnabled];\n  }\n\n  get loadBalanced(): boolean {\n    return this.client.topology?.description.type === TopologyType.LoadBalanced;\n  }\n\n  /** @internal */\n  get pinnedConnection(): Connection | undefined {\n    return this[kPinnedConnection];\n  }\n\n  /** @internal */\n  pin(conn: Connection): void {\n    if (this[kPinnedConnection]) {\n      throw TypeError('Cannot pin multiple connections to the same session');\n    }\n\n    this[kPinnedConnection] = conn;\n    conn.emit(\n      PINNED,\n      this.inTransaction() ? ConnectionPoolMetrics.TXN : ConnectionPoolMetrics.CURSOR\n    );\n  }\n\n  /** @internal */\n  unpin(options?: { force?: boolean; forceClear?: boolean; error?: AnyError }): void {\n    if (this.loadBalanced) {\n      return maybeClearPinnedConnection(this, options);\n    }\n\n    this.transaction.unpinServer();\n  }\n\n  get isPinned(): boolean {\n    return this.loadBalanced ? !!this[kPinnedConnection] : this.transaction.isPinned;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param options - Optional settings. Currently reserved for future use\n   */\n  async endSession(options?: EndSessionOptions): Promise<void> {\n    try {\n      if (this.inTransaction()) {\n        await this.abortTransaction();\n      }\n      if (!this.hasEnded) {\n        const serverSession = this[kServerSession];\n        if (serverSession != null) {\n          // release the server session back to the pool\n          this.sessionPool.release(serverSession);\n          // Make sure a new serverSession never makes it onto this ClientSession\n          Object.defineProperty(this, kServerSession, {\n            value: ServerSession.clone(serverSession),\n            writable: false\n          });\n        }\n        // mark the session as ended, and emit a signal\n        this.hasEnded = true;\n        this.emit('ended', this);\n      }\n    } catch {\n      // spec indicates that we should ignore all errors for `endSessions`\n    } finally {\n      maybeClearPinnedConnection(this, { force: true, ...options });\n    }\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param operationTime - the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime: Timestamp): void {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Advances the clusterTime for a ClientSession to the provided clusterTime of another ClientSession\n   *\n   * @param clusterTime - the $clusterTime returned by the server from another session in the form of a document containing the `BSON.Timestamp` clusterTime and signature\n   */\n  advanceClusterTime(clusterTime: ClusterTime): void {\n    if (!clusterTime || typeof clusterTime !== 'object') {\n      throw new MongoInvalidArgumentError('input cluster time must be an object');\n    }\n    if (!clusterTime.clusterTime || clusterTime.clusterTime._bsontype !== 'Timestamp') {\n      throw new MongoInvalidArgumentError(\n        'input cluster time \"clusterTime\" property must be a valid BSON Timestamp'\n      );\n    }\n    if (\n      !clusterTime.signature ||\n      clusterTime.signature.hash?._bsontype !== 'Binary' ||\n      (typeof clusterTime.signature.keyId !== 'bigint' &&\n        typeof clusterTime.signature.keyId !== 'number' &&\n        clusterTime.signature.keyId?._bsontype !== 'Long') // apparently we decode the key to number?\n    ) {\n      throw new MongoInvalidArgumentError(\n        'input cluster time must have a valid \"signature\" property with BSON Binary hash and BSON Long keyId'\n      );\n    }\n\n    _advanceClusterTime(this, clusterTime);\n  }\n\n  /**\n   * Used to determine if this session equals another\n   *\n   * @param session - The session to compare to\n   */\n  equals(session: ClientSession): boolean {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    if (this.id == null || session.id == null) {\n      return false;\n    }\n\n    return ByteUtils.equals(this.id.id.buffer, session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   *\n   * @privateRemarks\n   * This helper increments a value stored on the client session that will be\n   * added to the serverSession's txnNumber upon applying it to a command.\n   * This is because the serverSession is lazily acquired after a connection is obtained\n   */\n  incrementTransactionNumber(): void {\n    this[kTxnNumberIncrement] += 1;\n  }\n\n  /** @returns whether this session is currently in a transaction or not */\n  inTransaction(): boolean {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param options - Options for the transaction\n   */\n  startTransaction(options?: TransactionOptions): void {\n    if (this[kSnapshotEnabled]) {\n      throw new MongoCompatibilityError('Transactions are not supported in snapshot sessions');\n    }\n\n    if (this.inTransaction()) {\n      throw new MongoTransactionError('Transaction already in progress');\n    }\n\n    if (this.isPinned && this.transaction.isCommitted) {\n      this.unpin();\n    }\n\n    const topologyMaxWireVersion = maxWireVersion(this.client.topology);\n    if (\n      isSharded(this.client.topology) &&\n      topologyMaxWireVersion != null &&\n      topologyMaxWireVersion < minWireVersionForShardedTransactions\n    ) {\n      throw new MongoCompatibilityError(\n        'Transactions are not supported on sharded clusters in MongoDB < 4.2.'\n      );\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n    // create transaction state\n    this.transaction = new Transaction({\n      readConcern:\n        options?.readConcern ??\n        this.defaultTransactionOptions.readConcern ??\n        this.clientOptions?.readConcern,\n      writeConcern:\n        options?.writeConcern ??\n        this.defaultTransactionOptions.writeConcern ??\n        this.clientOptions?.writeConcern,\n      readPreference:\n        options?.readPreference ??\n        this.defaultTransactionOptions.readPreference ??\n        this.clientOptions?.readPreference,\n      maxCommitTimeMS: options?.maxCommitTimeMS ?? this.defaultTransactionOptions.maxCommitTimeMS\n    });\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   */\n  async commitTransaction(): Promise<Document> {\n    return endTransactionAsync(this, 'commitTransaction');\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   */\n  async abortTransaction(): Promise<Document> {\n    return endTransactionAsync(this, 'abortTransaction');\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   */\n  toBSON(): never {\n    throw new MongoRuntimeError('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * Runs a provided callback within a transaction, retrying either the commitTransaction operation\n   * or entire transaction as needed (and when the error permits) to better ensure that\n   * the transaction can complete successfully.\n   *\n   * **IMPORTANT:** This method requires the user to return a Promise, and `await` all operations.\n   * Any callbacks that do not return a Promise will result in undefined behavior.\n   *\n   * @remarks\n   * This function:\n   * - Will return the command response from the final commitTransaction if every operation is successful (can be used as a truthy object)\n   * - Will return `undefined` if the transaction is explicitly aborted with `await session.abortTransaction()`\n   * - Will throw if one of the operations throws or `throw` statement is used inside the `withTransaction` callback\n   *\n   * Checkout a descriptive example here:\n   * @see https://www.mongodb.com/developer/quickstart/node-transactions/\n   *\n   * @param fn - callback to run within a transaction\n   * @param options - optional settings for the transaction\n   * @returns A raw command response or undefined\n   */\n  async withTransaction<T = void>(\n    fn: WithTransactionCallback<T>,\n    options?: TransactionOptions\n  ): Promise<Document | undefined> {\n    const startTime = now();\n    return attemptTransaction(this, startTime, fn, options);\n  }\n}\n\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction hasNotTimedOut(startTime: number, max: number) {\n  return calculateDurationInMs(startTime) < max;\n}\n\nfunction isUnknownTransactionCommitResult(err: MongoError) {\n  const isNonDeterministicWriteConcernError =\n    err instanceof MongoServerError &&\n    err.codeName &&\n    NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName);\n\n  return (\n    isMaxTimeMSExpiredError(err) ||\n    (!isNonDeterministicWriteConcernError &&\n      err.code !== MONGODB_ERROR_CODES.UnsatisfiableWriteConcern &&\n      err.code !== MONGODB_ERROR_CODES.UnknownReplWriteConcern)\n  );\n}\n\nexport function maybeClearPinnedConnection(\n  session: ClientSession,\n  options?: EndSessionOptions\n): void {\n  // unpin a connection if it has been pinned\n  const conn = session[kPinnedConnection];\n  const error = options?.error;\n\n  if (\n    session.inTransaction() &&\n    error &&\n    error instanceof MongoError &&\n    error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n  ) {\n    return;\n  }\n\n  const topology = session.client.topology;\n  // NOTE: the spec talks about what to do on a network error only, but the tests seem to\n  //       to validate that we don't unpin on _all_ errors?\n  if (conn && topology != null) {\n    const servers = Array.from(topology.s.servers.values());\n    const loadBalancer = servers[0];\n\n    if (options?.error == null || options?.force) {\n      loadBalancer.pool.checkIn(conn);\n      conn.emit(\n        UNPINNED,\n        session.transaction.state !== TxnState.NO_TRANSACTION\n          ? ConnectionPoolMetrics.TXN\n          : ConnectionPoolMetrics.CURSOR\n      );\n\n      if (options?.forceClear) {\n        loadBalancer.pool.clear({ serviceId: conn.serviceId });\n      }\n    }\n\n    session[kPinnedConnection] = undefined;\n  }\n}\n\nfunction isMaxTimeMSExpiredError(err: MongoError) {\n  if (err == null || !(err instanceof MongoServerError)) {\n    return false;\n  }\n\n  return (\n    err.code === MONGODB_ERROR_CODES.MaxTimeMSExpired ||\n    (err.writeConcernError && err.writeConcernError.code === MONGODB_ERROR_CODES.MaxTimeMSExpired)\n  );\n}\n\nfunction attemptTransactionCommit<T>(\n  session: ClientSession,\n  startTime: number,\n  fn: WithTransactionCallback<T>,\n  options?: TransactionOptions\n): Promise<T> {\n  return session.commitTransaction().catch((err: MongoError) => {\n    if (\n      err instanceof MongoError &&\n      hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT) &&\n      !isMaxTimeMSExpiredError(err)\n    ) {\n      if (err.hasErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult)) {\n        return attemptTransactionCommit(session, startTime, fn, options);\n      }\n\n      if (err.hasErrorLabel(MongoErrorLabel.TransientTransactionError)) {\n        return attemptTransaction(session, startTime, fn, options);\n      }\n    }\n\n    throw err;\n  });\n}\n\nconst USER_EXPLICIT_TXN_END_STATES = new Set<TxnState>([\n  TxnState.NO_TRANSACTION,\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_ABORTED\n]);\n\nfunction userExplicitlyEndedTransaction(session: ClientSession) {\n  return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\n\nfunction attemptTransaction<TSchema>(\n  session: ClientSession,\n  startTime: number,\n  fn: WithTransactionCallback<TSchema>,\n  options?: TransactionOptions\n): Promise<any> {\n  session.startTransaction(options);\n\n  let promise;\n  try {\n    promise = fn(session);\n  } catch (err) {\n    promise = Promise.reject(err);\n  }\n\n  if (!isPromiseLike(promise)) {\n    session.abortTransaction().catch(() => null);\n    throw new MongoInvalidArgumentError(\n      'Function provided to `withTransaction` must return a Promise'\n    );\n  }\n\n  return promise.then(\n    () => {\n      if (userExplicitlyEndedTransaction(session)) {\n        return;\n      }\n\n      return attemptTransactionCommit(session, startTime, fn, options);\n    },\n    err => {\n      function maybeRetryOrThrow(err: MongoError): Promise<any> {\n        if (\n          err instanceof MongoError &&\n          err.hasErrorLabel(MongoErrorLabel.TransientTransactionError) &&\n          hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)\n        ) {\n          return attemptTransaction(session, startTime, fn, options);\n        }\n\n        if (isMaxTimeMSExpiredError(err)) {\n          err.addErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult);\n        }\n\n        throw err;\n      }\n\n      if (session.inTransaction()) {\n        return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n      }\n\n      return maybeRetryOrThrow(err);\n    }\n  );\n}\n\nconst endTransactionAsync = promisify(\n  endTransaction as (\n    session: ClientSession,\n    commandName: 'abortTransaction' | 'commitTransaction',\n    callback: (error: Error, result: Document) => void\n  ) => void\n);\n\nfunction endTransaction(\n  session: ClientSession,\n  commandName: 'abortTransaction' | 'commitTransaction',\n  callback: Callback<Document>\n) {\n  // handle any initial problematic cases\n  const txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoTransactionError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback();\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(\n        new MongoTransactionError('Cannot call commitTransaction after calling abortTransaction')\n      );\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback();\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoTransactionError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(\n        new MongoTransactionError('Cannot call abortTransaction after calling commitTransaction')\n      );\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command: Document = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  let writeConcern;\n  if (session.transaction.options.writeConcern) {\n    writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n  } else if (session.clientOptions && session.clientOptions.writeConcern) {\n    writeConcern = { w: session.clientOptions.writeConcern.w };\n  }\n\n  if (txnState === TxnState.TRANSACTION_COMMITTED) {\n    writeConcern = Object.assign({ wtimeoutMS: 10000 }, writeConcern, { w: 'majority' });\n  }\n\n  if (writeConcern) {\n    WriteConcern.apply(command, writeConcern);\n  }\n\n  if (commandName === 'commitTransaction' && session.transaction.options.maxTimeMS) {\n    Object.assign(command, { maxTimeMS: session.transaction.options.maxTimeMS });\n  }\n\n  function commandHandler(error?: Error, result?: Document) {\n    if (commandName !== 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      if (session.loadBalanced) {\n        maybeClearPinnedConnection(session, { force: false });\n      }\n\n      // The spec indicates that we should ignore all errors on `abortTransaction`\n      return callback();\n    }\n\n    session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n    if (error instanceof MongoError) {\n      if (\n        error.hasErrorLabel(MongoErrorLabel.RetryableWriteError) ||\n        error instanceof MongoWriteConcernError ||\n        isMaxTimeMSExpiredError(error)\n      ) {\n        if (isUnknownTransactionCommitResult(error)) {\n          error.addErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult);\n\n          // per txns spec, must unpin session in this case\n          session.unpin({ error });\n        }\n      } else if (error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)) {\n        session.unpin({ error });\n      }\n    }\n\n    callback(error, result);\n  }\n\n  if (session.transaction.recoveryToken) {\n    command.recoveryToken = session.transaction.recoveryToken;\n  }\n\n  // send the command\n  executeOperation(\n    session.client,\n    new RunAdminCommandOperation(undefined, command, {\n      session,\n      readPreference: ReadPreference.primary,\n      bypassPinningCheck: true\n    }),\n    (error, result) => {\n      if (command.abortTransaction) {\n        // always unpin on abort regardless of command outcome\n        session.unpin();\n      }\n\n      if (error instanceof MongoError && error.hasErrorLabel(MongoErrorLabel.RetryableWriteError)) {\n        // SPEC-1185: apply majority write concern when retrying commitTransaction\n        if (command.commitTransaction) {\n          // per txns spec, must unpin session in this case\n          session.unpin({ force: true });\n\n          command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n            w: 'majority'\n          });\n        }\n\n        return executeOperation(\n          session.client,\n          new RunAdminCommandOperation(undefined, command, {\n            session,\n            readPreference: ReadPreference.primary,\n            bypassPinningCheck: true\n          }),\n          commandHandler\n        );\n      }\n\n      commandHandler(error, result);\n    }\n  );\n}\n\n/** @public */\nexport type ServerSessionId = { id: Binary };\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @public\n */\nexport class ServerSession {\n  id: ServerSessionId;\n  lastUse: number;\n  txnNumber: number;\n  isDirty: boolean;\n\n  /** @internal */\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = now();\n    this.txnNumber = 0;\n    this.isDirty = false;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   *\n   * @param sessionTimeoutMinutes - The server's \"logicalSessionTimeoutMinutes\"\n   */\n  hasTimedOut(sessionTimeoutMinutes: number): boolean {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      ((calculateDurationInMs(this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n\n  /**\n   * @internal\n   * Cloning meant to keep a readable reference to the server session data\n   * after ClientSession has ended\n   */\n  static clone(serverSession: ServerSession): Readonly<ServerSession> {\n    const arrayBuffer = new ArrayBuffer(16);\n    const idBytes = Buffer.from(arrayBuffer);\n    idBytes.set(serverSession.id.id.buffer);\n\n    const id = new Binary(idBytes, serverSession.id.id.sub_type);\n\n    // Manual prototype construction to avoid modifying the constructor of this class\n    return Object.setPrototypeOf(\n      {\n        id: { id },\n        lastUse: serverSession.lastUse,\n        txnNumber: serverSession.txnNumber,\n        isDirty: serverSession.isDirty\n      },\n      ServerSession.prototype\n    );\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @internal\n */\nexport class ServerSessionPool {\n  client: MongoClient;\n  sessions: List<ServerSession>;\n\n  constructor(client: MongoClient) {\n    if (client == null) {\n      throw new MongoRuntimeError('ServerSessionPool requires a MongoClient');\n    }\n\n    this.client = client;\n    this.sessions = new List<ServerSession>();\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession is created.\n   */\n  acquire(): ServerSession {\n    const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n\n    let session: ServerSession | null = null;\n\n    // Try to obtain from session pool\n    while (this.sessions.length > 0) {\n      const potentialSession = this.sessions.shift();\n      if (\n        potentialSession != null &&\n        (!!this.client.topology?.loadBalanced ||\n          !potentialSession.hasTimedOut(sessionTimeoutMinutes))\n      ) {\n        session = potentialSession;\n        break;\n      }\n    }\n\n    // If nothing valid came from the pool make a new one\n    if (session == null) {\n      session = new ServerSession();\n    }\n\n    return session;\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   *\n   * @param session - The session to release to the pool\n   */\n  release(session: ServerSession): void {\n    const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n\n    if (this.client.topology?.loadBalanced && !sessionTimeoutMinutes) {\n      this.sessions.unshift(session);\n    }\n\n    if (!sessionTimeoutMinutes) {\n      return;\n    }\n\n    this.sessions.prune(session => session.hasTimedOut(sessionTimeoutMinutes));\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      if (session.isDirty) {\n        return;\n      }\n\n      // otherwise, readd this session to the session pool\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param session - the session tracking transaction state\n * @param command - the command to decorate\n * @param options - Optional settings passed to calling operation\n *\n * @internal\n */\nexport function applySession(\n  session: ClientSession,\n  command: Document,\n  options: CommandOptions\n): MongoDriverError | undefined {\n  if (session.hasEnded) {\n    return new MongoExpiredSessionError();\n  }\n\n  // May acquire serverSession here\n  const serverSession = session.serverSession;\n  if (serverSession == null) {\n    return new MongoRuntimeError('Unable to acquire server session');\n  }\n\n  if (options.writeConcern?.w === 0) {\n    if (session && session.explicit) {\n      // Error if user provided an explicit session to an unacknowledged write (SPEC-1019)\n      return new MongoAPIError('Cannot have explicit session with unacknowledged writes');\n    }\n    return;\n  }\n\n  // mark the last use of this session, and apply the `lsid`\n  serverSession.lastUse = now();\n  command.lsid = serverSession.id;\n\n  const inTxnOrTxnCommand = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = !!options.willRetryWrite;\n\n  if (isRetryableWrite || inTxnOrTxnCommand) {\n    serverSession.txnNumber += session[kTxnNumberIncrement];\n    session[kTxnNumberIncrement] = 0;\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    command.txnNumber = Long.fromNumber(serverSession.txnNumber);\n  }\n\n  if (!inTxnOrTxnCommand) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    if (\n      session.supports.causalConsistency &&\n      session.operationTime &&\n      commandSupportsReadConcern(command, options)\n    ) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    } else if (session[kSnapshotEnabled]) {\n      command.readConcern = command.readConcern || { level: ReadConcernLevel.snapshot };\n      if (session[kSnapshotTime] != null) {\n        Object.assign(command.readConcern, { atClusterTime: session[kSnapshotTime] });\n      }\n    }\n\n    return;\n  }\n\n  // now attempt to apply transaction-specific sessions data\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session?.clientOptions?.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n  return;\n}\n\nexport function updateSessionFromResponse(session: ClientSession, document: Document): void {\n  if (document.$clusterTime) {\n    _advanceClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n\n  if (session?.[kSnapshotEnabled] && session[kSnapshotTime] == null) {\n    // find and aggregate commands return atClusterTime on the cursor\n    // distinct includes it in the response body\n    const atClusterTime = document.cursor?.atClusterTime || document.atClusterTime;\n    if (atClusterTime) {\n      session[kSnapshotTime] = atClusterTime;\n    }\n  }\n}\n", "import { Readable, Transform } from 'stream';\nimport { promisify } from 'util';\n\nimport { type BSONSerializeOptions, type Document, Long, pluckBSONSerializeOptions } from '../bson';\nimport {\n  type AnyError,\n  MongoAPIError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoRuntimeError,\n  MongoTailableCursorError\n} from '../error';\nimport type { MongoClient } from '../mongo_client';\nimport { type TODO_NODE_3286, TypedEventEmitter } from '../mongo_types';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { KillCursorsOperation } from '../operations/kill_cursors';\nimport { ReadConcern, type ReadConcernLike } from '../read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport { ClientSession, maybeClearPinnedConnection } from '../sessions';\nimport { type Callback, List, type MongoDBNamespace, ns } from '../utils';\n\n/** @internal */\nconst kId = Symbol('id');\n/** @internal */\nconst kDocuments = Symbol('documents');\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kNamespace = Symbol('namespace');\n/** @internal */\nconst kClient = Symbol('client');\n/** @internal */\nconst kSession = Symbol('session');\n/** @internal */\nconst kOptions = Symbol('options');\n/** @internal */\nconst kTransform = Symbol('transform');\n/** @internal */\nconst kInitialized = Symbol('initialized');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kKilled = Symbol('killed');\n/** @internal */\nconst kInit = Symbol('kInit');\n\n/** @public */\nexport const CURSOR_FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public */\nexport interface CursorStreamOptions {\n  /** A transformation method applied to each document emitted by the stream */\n  transform?(this: void, doc: Document): Document;\n}\n\n/** @public */\nexport type CursorFlag = (typeof CURSOR_FLAGS)[number];\n\n/** @public */\nexport interface AbstractCursorOptions extends BSONSerializeOptions {\n  session?: ClientSession;\n  readPreference?: ReadPreferenceLike;\n  readConcern?: ReadConcernLike;\n  /**\n   * Specifies the number of documents to return in each response from MongoDB\n   */\n  batchSize?: number;\n  /**\n   * When applicable `maxTimeMS` controls the amount of time the initial command\n   * that constructs a cursor should take. (ex. find, aggregate, listCollections)\n   */\n  maxTimeMS?: number;\n  /**\n   * When applicable `maxAwaitTimeMS` controls the amount of time subsequent getMores\n   * that a cursor uses to fetch more data should take. (ex. cursor.next())\n   */\n  maxAwaitTimeMS?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n  /**\n   * By default, MongoDB will automatically close a cursor when the\n   * client has exhausted all results in the cursor. However, for [capped collections](https://www.mongodb.com/docs/manual/core/capped-collections)\n   * you may use a Tailable Cursor that remains open after the client exhausts\n   * the results in the initial cursor.\n   */\n  tailable?: boolean;\n  /**\n   * If awaitData is set to true, when the cursor reaches the end of the capped collection,\n   * MongoDB blocks the query thread for a period of time waiting for new data to arrive.\n   * When new data is inserted into the capped collection, the blocked thread is signaled\n   * to wake up and return the next batch to the client.\n   */\n  awaitData?: boolean;\n  noCursorTimeout?: boolean;\n}\n\n/** @internal */\nexport type InternalAbstractCursorOptions = Omit<AbstractCursorOptions, 'readPreference'> & {\n  // resolved\n  readPreference: ReadPreference;\n  readConcern?: ReadConcern;\n\n  // cursor flags, some are deprecated\n  oplogReplay?: boolean;\n  exhaust?: boolean;\n  partial?: boolean;\n};\n\n/** @public */\nexport type AbstractCursorEvents = {\n  [AbstractCursor.CLOSE](): void;\n};\n\n/** @public */\nexport abstract class AbstractCursor<\n  TSchema = any,\n  CursorEvents extends AbstractCursorEvents = AbstractCursorEvents\n> extends TypedEventEmitter<CursorEvents> {\n  /** @internal */\n  [kId]: Long | null;\n  /** @internal */\n  [kSession]: ClientSession;\n  /** @internal */\n  [kServer]?: Server;\n  /** @internal */\n  [kNamespace]: MongoDBNamespace;\n  /** @internal */\n  [kDocuments]: List<TSchema>;\n  /** @internal */\n  [kClient]: MongoClient;\n  /** @internal */\n  [kTransform]?: (doc: TSchema) => any;\n  /** @internal */\n  [kInitialized]: boolean;\n  /** @internal */\n  [kClosed]: boolean;\n  /** @internal */\n  [kKilled]: boolean;\n  /** @internal */\n  [kOptions]: InternalAbstractCursorOptions;\n\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    options: AbstractCursorOptions = {}\n  ) {\n    super();\n\n    if (!client.s.isMongoClient) {\n      throw new MongoRuntimeError('Cursor must be constructed with MongoClient');\n    }\n    this[kClient] = client;\n    this[kNamespace] = namespace;\n    this[kId] = null;\n    this[kDocuments] = new List();\n    this[kInitialized] = false;\n    this[kClosed] = false;\n    this[kKilled] = false;\n    this[kOptions] = {\n      readPreference:\n        options.readPreference && options.readPreference instanceof ReadPreference\n          ? options.readPreference\n          : ReadPreference.primary,\n      ...pluckBSONSerializeOptions(options)\n    };\n\n    const readConcern = ReadConcern.fromOptions(options);\n    if (readConcern) {\n      this[kOptions].readConcern = readConcern;\n    }\n\n    if (typeof options.batchSize === 'number') {\n      this[kOptions].batchSize = options.batchSize;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      this[kOptions].comment = options.comment;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      this[kOptions].maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.maxAwaitTimeMS === 'number') {\n      this[kOptions].maxAwaitTimeMS = options.maxAwaitTimeMS;\n    }\n\n    if (options.session instanceof ClientSession) {\n      this[kSession] = options.session;\n    } else {\n      this[kSession] = this[kClient].startSession({ owner: this, explicit: false });\n    }\n  }\n\n  get id(): Long | undefined {\n    return this[kId] ?? undefined;\n  }\n\n  /** @internal */\n  get client(): MongoClient {\n    return this[kClient];\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this[kServer];\n  }\n\n  get namespace(): MongoDBNamespace {\n    return this[kNamespace];\n  }\n\n  get readPreference(): ReadPreference {\n    return this[kOptions].readPreference;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this[kOptions].readConcern;\n  }\n\n  /** @internal */\n  get session(): ClientSession {\n    return this[kSession];\n  }\n\n  set session(clientSession: ClientSession) {\n    this[kSession] = clientSession;\n  }\n\n  /** @internal */\n  get cursorOptions(): InternalAbstractCursorOptions {\n    return this[kOptions];\n  }\n\n  get closed(): boolean {\n    return this[kClosed];\n  }\n\n  get killed(): boolean {\n    return this[kKilled];\n  }\n\n  get loadBalanced(): boolean {\n    return !!this[kClient].topology?.loadBalanced;\n  }\n\n  /** Returns current buffered documents length */\n  bufferedCount(): number {\n    return this[kDocuments].length;\n  }\n\n  /** Returns current buffered documents */\n  readBufferedDocuments(number?: number): TSchema[] {\n    const bufferedDocs: TSchema[] = [];\n    const documentsToRead = Math.min(number ?? this[kDocuments].length, this[kDocuments].length);\n\n    for (let count = 0; count < documentsToRead; count++) {\n      const document = this[kDocuments].shift();\n      if (document != null) {\n        bufferedDocs.push(document);\n      }\n    }\n\n    return bufferedDocs;\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<TSchema, void, void> {\n    if (this.closed) {\n      return;\n    }\n\n    try {\n      while (true) {\n        const document = await this.next();\n\n        // Intentional strict null check, because users can map cursors to falsey values.\n        // We allow mapping to all values except for null.\n        // eslint-disable-next-line no-restricted-syntax\n        if (document === null) {\n          if (!this.closed) {\n            const message =\n              'Cursor returned a `null` document, but the cursor is not exhausted.  Mapping documents to `null` is not supported in the cursor transform.';\n\n            await cleanupCursorAsync(this, { needsToEmitClosed: true }).catch(() => null);\n\n            throw new MongoAPIError(message);\n          }\n          break;\n        }\n\n        yield document;\n\n        if (this[kId] === Long.ZERO) {\n          // Cursor exhausted\n          break;\n        }\n      }\n    } finally {\n      // Only close the cursor if it has not already been closed. This finally clause handles\n      // the case when a user would break out of a for await of loop early.\n      if (!this.closed) {\n        await this.close().catch(() => null);\n      }\n    }\n  }\n\n  stream(options?: CursorStreamOptions): Readable & AsyncIterable<TSchema> {\n    if (options?.transform) {\n      const transform = options.transform;\n      const readable = new ReadableCursorStream(this);\n\n      return readable.pipe(\n        new Transform({\n          objectMode: true,\n          highWaterMark: 1,\n          transform(chunk, _, callback) {\n            try {\n              const transformed = transform(chunk);\n              callback(undefined, transformed);\n            } catch (err) {\n              callback(err);\n            }\n          }\n        })\n      );\n    }\n\n    return new ReadableCursorStream(this);\n  }\n\n  async hasNext(): Promise<boolean> {\n    if (this[kId] === Long.ZERO) {\n      return false;\n    }\n\n    if (this[kDocuments].length !== 0) {\n      return true;\n    }\n\n    const doc = await next<TSchema>(this, { blocking: true, transform: false });\n\n    if (doc) {\n      this[kDocuments].unshift(doc);\n      return true;\n    }\n\n    return false;\n  }\n\n  /** Get the next available document from the cursor, returns null if no more documents are available. */\n  async next(): Promise<TSchema | null> {\n    if (this[kId] === Long.ZERO) {\n      throw new MongoCursorExhaustedError();\n    }\n\n    return next(this, { blocking: true, transform: true });\n  }\n\n  /**\n   * Try to get the next available document from the cursor or `null` if an empty batch is returned\n   */\n  async tryNext(): Promise<TSchema | null> {\n    if (this[kId] === Long.ZERO) {\n      throw new MongoCursorExhaustedError();\n    }\n\n    return next(this, { blocking: false, transform: true });\n  }\n\n  /**\n   * Iterates over all the documents for this cursor using the iterator, callback pattern.\n   *\n   * If the iterator returns `false`, iteration will stop.\n   *\n   * @param iterator - The iteration callback.\n   * @deprecated - Will be removed in a future release. Use for await...of instead.\n   */\n  async forEach(iterator: (doc: TSchema) => boolean | void): Promise<void> {\n    if (typeof iterator !== 'function') {\n      throw new MongoInvalidArgumentError('Argument \"iterator\" must be a function');\n    }\n    for await (const document of this) {\n      const result = iterator(document);\n      if (result === false) {\n        break;\n      }\n    }\n  }\n\n  async close(): Promise<void> {\n    const needsToEmitClosed = !this[kClosed];\n    this[kClosed] = true;\n    await cleanupCursorAsync(this, { needsToEmitClosed });\n  }\n\n  /**\n   * Returns an array of documents. The caller is responsible for making sure that there\n   * is enough memory to store the results. Note that the array only contains partial\n   * results when this cursor had been previously accessed. In that case,\n   * cursor.rewind() can be used to reset the cursor.\n   */\n  async toArray(): Promise<TSchema[]> {\n    const array = [];\n    for await (const document of this) {\n      array.push(document);\n    }\n    return array;\n  }\n\n  /**\n   * Add a cursor flag to the cursor\n   *\n   * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n   * @param value - The flag boolean value.\n   */\n  addCursorFlag(flag: CursorFlag, value: boolean): this {\n    assertUninitialized(this);\n    if (!CURSOR_FLAGS.includes(flag)) {\n      throw new MongoInvalidArgumentError(`Flag ${flag} is not one of ${CURSOR_FLAGS}`);\n    }\n\n    if (typeof value !== 'boolean') {\n      throw new MongoInvalidArgumentError(`Flag ${flag} must be a boolean value`);\n    }\n\n    this[kOptions][flag] = value;\n    return this;\n  }\n\n  /**\n   * Map all documents using the provided function\n   * If there is a transform set on the cursor, that will be called first and the result passed to\n   * this function's transform.\n   *\n   * @remarks\n   *\n   * **Note** Cursors use `null` internally to indicate that there are no more documents in the cursor. Providing a mapping\n   * function that maps values to `null` will result in the cursor closing itself before it has finished iterating\n   * all documents.  This will **not** result in a memory leak, just surprising behavior.  For example:\n   *\n   * ```typescript\n   * const cursor = collection.find({});\n   * cursor.map(() => null);\n   *\n   * const documents = await cursor.toArray();\n   * // documents is always [], regardless of how many documents are in the collection.\n   * ```\n   *\n   * Other falsey values are allowed:\n   *\n   * ```typescript\n   * const cursor = collection.find({});\n   * cursor.map(() => '');\n   *\n   * const documents = await cursor.toArray();\n   * // documents is now an array of empty strings\n   * ```\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling map,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<Document> = coll.find();\n   * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n   * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n   * ```\n   * @param transform - The mapping transformation method.\n   */\n  map<T = any>(transform: (doc: TSchema) => T): AbstractCursor<T> {\n    assertUninitialized(this);\n    const oldTransform = this[kTransform] as (doc: TSchema) => TSchema; // TODO(NODE-3283): Improve transform typing\n    if (oldTransform) {\n      this[kTransform] = doc => {\n        return transform(oldTransform(doc));\n      };\n    } else {\n      this[kTransform] = transform;\n    }\n\n    return this as unknown as AbstractCursor<T>;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadPreference(readPreference: ReadPreferenceLike): this {\n    assertUninitialized(this);\n    if (readPreference instanceof ReadPreference) {\n      this[kOptions].readPreference = readPreference;\n    } else if (typeof readPreference === 'string') {\n      this[kOptions].readPreference = ReadPreference.fromString(readPreference);\n    } else {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${readPreference}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadConcern(readConcern: ReadConcernLike): this {\n    assertUninitialized(this);\n    const resolvedReadConcern = ReadConcern.fromOptions({ readConcern });\n    if (resolvedReadConcern) {\n      this[kOptions].readConcern = resolvedReadConcern;\n    }\n\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  maxTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this[kOptions].maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   *\n   * @param value - The number of documents to return per batch. See {@link https://www.mongodb.com/docs/manual/reference/command/find/|find command documentation}.\n   */\n  batchSize(value: number): this {\n    assertUninitialized(this);\n    if (this[kOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support batchSize');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"batchSize\" requires an integer');\n    }\n\n    this[kOptions].batchSize = value;\n    return this;\n  }\n\n  /**\n   * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n   * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n   * if the resultant data has already been retrieved by this cursor.\n   */\n  rewind(): void {\n    if (!this[kInitialized]) {\n      return;\n    }\n\n    this[kId] = null;\n    this[kDocuments].clear();\n    this[kClosed] = false;\n    this[kKilled] = false;\n    this[kInitialized] = false;\n\n    const session = this[kSession];\n    if (session) {\n      // We only want to end this session if we created it, and it hasn't ended yet\n      if (session.explicit === false) {\n        if (!session.hasEnded) {\n          session.endSession().catch(() => null);\n        }\n        this[kSession] = this.client.startSession({ owner: this, explicit: false });\n      }\n    }\n  }\n\n  /**\n   * Returns a new uninitialized copy of this cursor, with options matching those that have been set on the current instance\n   */\n  abstract clone(): AbstractCursor<TSchema>;\n\n  /** @internal */\n  protected abstract _initialize(\n    session: ClientSession | undefined,\n    callback: Callback<ExecutionResult>\n  ): void;\n\n  /** @internal */\n  _getMore(batchSize: number, callback: Callback<Document>): void {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new GetMoreOperation(this[kNamespace], this[kId]!, this[kServer]!, {\n      ...this[kOptions],\n      session: this[kSession],\n      batchSize\n    });\n\n    executeOperation(this[kClient], getMoreOperation, callback);\n  }\n\n  /**\n   * @internal\n   *\n   * This function is exposed for the unified test runner's createChangeStream\n   * operation.  We cannot refactor to use the abstract _initialize method without\n   * a significant refactor.\n   */\n  [kInit](callback: Callback<TSchema | null>): void {\n    this._initialize(this[kSession], (error, state) => {\n      if (state) {\n        const response = state.response;\n        this[kServer] = state.server;\n\n        if (response.cursor) {\n          // TODO(NODE-2674): Preserve int64 sent from MongoDB\n          this[kId] =\n            typeof response.cursor.id === 'number'\n              ? Long.fromNumber(response.cursor.id)\n              : typeof response.cursor.id === 'bigint'\n              ? Long.fromBigInt(response.cursor.id)\n              : response.cursor.id;\n\n          if (response.cursor.ns) {\n            this[kNamespace] = ns(response.cursor.ns);\n          }\n\n          this[kDocuments].pushMany(response.cursor.firstBatch);\n        }\n\n        // When server responses return without a cursor document, we close this cursor\n        // and return the raw server response. This is often the case for explain commands\n        // for example\n        if (this[kId] == null) {\n          this[kId] = Long.ZERO;\n          // TODO(NODE-3286): ExecutionResult needs to accept a generic parameter\n          this[kDocuments].push(state.response as TODO_NODE_3286);\n        }\n      }\n\n      // the cursor is now initialized, even if an error occurred or it is dead\n      this[kInitialized] = true;\n\n      if (error) {\n        return cleanupCursor(this, { error }, () => callback(error, undefined));\n      }\n\n      if (cursorIsDead(this)) {\n        return cleanupCursor(this, undefined, () => callback());\n      }\n\n      callback();\n    });\n  }\n}\n\n/**\n * @param cursor - the cursor on which to call `next`\n * @param blocking - a boolean indicating whether or not the cursor should `block` until data\n *     is available.  Generally, this flag is set to `false` because if the getMore returns no documents,\n *     the cursor has been exhausted.  In certain scenarios (ChangeStreams, tailable await cursors and\n *     `tryNext`, for example) blocking is necessary because a getMore returning no documents does\n *     not indicate the end of the cursor.\n * @param transform - if true, the cursor's transform function is applied to the result document (if the transform exists)\n * @returns the next document in the cursor, or `null`.  When `blocking` is `true`, a `null` document means\n * the cursor has been exhausted.  Otherwise, it means that there is no document available in the cursor's buffer.\n */\nasync function next<T>(\n  cursor: AbstractCursor<T>,\n  {\n    blocking,\n    transform\n  }: {\n    blocking: boolean;\n    transform: boolean;\n  }\n): Promise<T | null> {\n  const cursorId = cursor[kId];\n  if (cursor.closed) {\n    return null;\n  }\n\n  if (cursor[kDocuments].length !== 0) {\n    const doc = cursor[kDocuments].shift();\n\n    if (doc != null && transform && cursor[kTransform]) {\n      try {\n        return cursor[kTransform](doc);\n      } catch (error) {\n        await cleanupCursorAsync(cursor, { error, needsToEmitClosed: true }).catch(() => {\n          // `cleanupCursorAsync` should never throw, but if it does we want to throw the original\n          // error instead.\n        });\n        throw error;\n      }\n    }\n\n    return doc;\n  }\n\n  if (cursorId == null) {\n    // All cursors must operate within a session, one must be made implicitly if not explicitly provided\n    const init = promisify(cb => cursor[kInit](cb));\n    await init();\n    return next(cursor, { blocking, transform });\n  }\n\n  if (cursorIsDead(cursor)) {\n    // if the cursor is dead, we clean it up\n    // cleanupCursorAsync should never throw, but if it does it indicates a bug in the driver\n    // and we should surface the error\n    await cleanupCursorAsync(cursor, {});\n    return null;\n  }\n\n  // otherwise need to call getMore\n  const batchSize = cursor[kOptions].batchSize || 1000;\n  const getMore = promisify((batchSize: number, cb: Callback<Document | undefined>) =>\n    cursor._getMore(batchSize, cb)\n  );\n\n  let response: Document | undefined;\n  try {\n    response = await getMore(batchSize);\n  } catch (error) {\n    if (error) {\n      await cleanupCursorAsync(cursor, { error }).catch(() => {\n        // `cleanupCursorAsync` should never throw, but if it does we want to throw the original\n        // error instead.\n      });\n      throw error;\n    }\n  }\n\n  if (response) {\n    const cursorId =\n      typeof response.cursor.id === 'number'\n        ? Long.fromNumber(response.cursor.id)\n        : typeof response.cursor.id === 'bigint'\n        ? Long.fromBigInt(response.cursor.id)\n        : response.cursor.id;\n\n    cursor[kDocuments].pushMany(response.cursor.nextBatch);\n    cursor[kId] = cursorId;\n  }\n\n  if (cursorIsDead(cursor)) {\n    // If we successfully received a response from a cursor BUT the cursor indicates that it is exhausted,\n    // we intentionally clean up the cursor to release its session back into the pool before the cursor\n    // is iterated.  This prevents a cursor that is exhausted on the server from holding\n    // onto a session indefinitely until the AbstractCursor is iterated.\n    //\n    // cleanupCursorAsync should never throw, but if it does it indicates a bug in the driver\n    // and we should surface the error\n    await cleanupCursorAsync(cursor, {});\n  }\n\n  if (cursor[kDocuments].length === 0 && blocking === false) {\n    return null;\n  }\n\n  return next(cursor, { blocking, transform });\n}\n\nfunction cursorIsDead(cursor: AbstractCursor): boolean {\n  const cursorId = cursor[kId];\n  return !!cursorId && cursorId.isZero();\n}\n\nconst cleanupCursorAsync = promisify(cleanupCursor);\n\nfunction cleanupCursor(\n  cursor: AbstractCursor,\n  options: { error?: AnyError | undefined; needsToEmitClosed?: boolean } | undefined,\n  callback: Callback\n): void {\n  const cursorId = cursor[kId];\n  const cursorNs = cursor[kNamespace];\n  const server = cursor[kServer];\n  const session = cursor[kSession];\n  const error = options?.error;\n\n  // Cursors only emit closed events once the client-side cursor has been exhausted fully or there\n  // was an error.  Notably, when the server returns a cursor id of 0 and a non-empty batch, we\n  // cleanup the cursor but don't emit a `close` event.\n  const needsToEmitClosed = options?.needsToEmitClosed ?? cursor[kDocuments].length === 0;\n\n  if (error) {\n    if (cursor.loadBalanced && error instanceof MongoNetworkError) {\n      return completeCleanup();\n    }\n  }\n\n  if (cursorId == null || server == null || cursorId.isZero() || cursorNs == null) {\n    if (needsToEmitClosed) {\n      cursor[kClosed] = true;\n      cursor[kId] = Long.ZERO;\n      cursor.emit(AbstractCursor.CLOSE);\n    }\n\n    if (session) {\n      if (session.owner === cursor) {\n        session.endSession({ error }).finally(() => {\n          callback();\n        });\n        return;\n      }\n\n      if (!session.inTransaction()) {\n        maybeClearPinnedConnection(session, { error });\n      }\n    }\n\n    return callback();\n  }\n\n  function completeCleanup() {\n    if (session) {\n      if (session.owner === cursor) {\n        session.endSession({ error }).finally(() => {\n          cursor.emit(AbstractCursor.CLOSE);\n          callback();\n        });\n        return;\n      }\n\n      if (!session.inTransaction()) {\n        maybeClearPinnedConnection(session, { error });\n      }\n    }\n\n    cursor.emit(AbstractCursor.CLOSE);\n    return callback();\n  }\n\n  cursor[kKilled] = true;\n\n  if (session.hasEnded) {\n    return completeCleanup();\n  }\n\n  executeOperation(\n    cursor[kClient],\n    new KillCursorsOperation(cursorId, cursorNs, server, { session })\n  )\n    .catch(() => null)\n    .finally(completeCleanup);\n}\n\n/** @internal */\nexport function assertUninitialized(cursor: AbstractCursor): void {\n  if (cursor[kInitialized]) {\n    throw new MongoCursorInUseError();\n  }\n}\n\nclass ReadableCursorStream extends Readable {\n  private _cursor: AbstractCursor;\n  private _readInProgress = false;\n\n  constructor(cursor: AbstractCursor) {\n    super({\n      objectMode: true,\n      autoDestroy: false,\n      highWaterMark: 1\n    });\n    this._cursor = cursor;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override _read(size: number): void {\n    if (!this._readInProgress) {\n      this._readInProgress = true;\n      this._readNext();\n    }\n  }\n\n  override _destroy(error: Error | null, callback: (error?: Error | null) => void): void {\n    this._cursor.close().then(\n      () => callback(error),\n      closeError => callback(closeError)\n    );\n  }\n\n  private _readNext() {\n    next(this._cursor, { blocking: true, transform: true }).then(\n      result => {\n        if (result == null) {\n          this.push(null);\n        } else if (this.destroyed) {\n          this._cursor.close().catch(() => null);\n        } else {\n          if (this.push(result)) {\n            return this._readNext();\n          }\n\n          this._readInProgress = false;\n        }\n      },\n      err => {\n        // NOTE: This is questionable, but we have a test backing the behavior. It seems the\n        //       desired behavior is that a stream ends cleanly when a user explicitly closes\n        //       a client during iteration. Alternatively, we could do the \"right\" thing and\n        //       propagate the error message by removing this special case.\n        if (err.message.match(/server is closed/)) {\n          this._cursor.close().catch(() => null);\n          return this.push(null);\n        }\n\n        // NOTE: This is also perhaps questionable. The rationale here is that these errors tend\n        //       to be \"operation was interrupted\", where a cursor has been closed but there is an\n        //       active getMore in-flight. This used to check if the cursor was killed but once\n        //       that changed to happen in cleanup legitimate errors would not destroy the\n        //       stream. There are change streams test specifically test these cases.\n        if (err.message.match(/operation was interrupted/)) {\n          return this.push(null);\n        }\n\n        // NOTE: The two above checks on the message of the error will cause a null to be pushed\n        //       to the stream, thus closing the stream before the destroy call happens. This means\n        //       that either of those error messages on a change stream will not get a proper\n        //       'error' event to be emitted (the error passed to destroy). Change stream resumability\n        //       relies on that error event to be emitted to create its new cursor and thus was not\n        //       working on 4.4 servers because the error emitted on failover was \"interrupted at\n        //       shutdown\" while on 5.0+ it is \"The server is in quiesce mode and will shut down\".\n        //       See NODE-4475.\n        return this.destroy(err);\n      }\n    );\n  }\n}\n", "import type { Document } from '../bson';\nimport type { ExplainVerbosityLike } from '../explain';\nimport type { MongoClient } from '../mongo_client';\nimport { AggregateOperation, type AggregateOptions } from '../operations/aggregate';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport type { ClientSession } from '../sessions';\nimport type { Sort } from '../sort';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { mergeOptions } from '../utils';\nimport type { AbstractCursorOptions } from './abstract_cursor';\nimport { AbstractCursor, assertUninitialized } from './abstract_cursor';\n\n/** @public */\nexport interface AggregationCursorOptions extends AbstractCursorOptions, AggregateOptions {}\n\n/** @internal */\nconst kPipeline = Symbol('pipeline');\n/** @internal */\nconst kOptions = Symbol('options');\n\n/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n * @public\n */\nexport class AggregationCursor<TSchema = any> extends AbstractCursor<TSchema> {\n  /** @internal */\n  [kPipeline]: Document[];\n  /** @internal */\n  [kOptions]: AggregateOptions;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: AggregateOptions = {}\n  ) {\n    super(client, namespace, options);\n\n    this[kPipeline] = pipeline;\n    this[kOptions] = options;\n  }\n\n  get pipeline(): Document[] {\n    return this[kPipeline];\n  }\n\n  clone(): AggregationCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this[kOptions]);\n    delete clonedOptions.session;\n    return new AggregationCursor(this.client, this.namespace, this[kPipeline], {\n      ...clonedOptions\n    });\n  }\n\n  override map<T>(transform: (doc: TSchema) => T): AggregationCursor<T> {\n    return super.map(transform) as AggregationCursor<T>;\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession, callback: Callback<ExecutionResult>): void {\n    const aggregateOperation = new AggregateOperation(this.namespace, this[kPipeline], {\n      ...this[kOptions],\n      ...this.cursorOptions,\n      session\n    });\n\n    executeOperation(this.client, aggregateOperation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: aggregateOperation.server, session, response });\n    });\n  }\n\n  /** Execute the explain for the cursor */\n  async explain(verbosity?: ExplainVerbosityLike): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new AggregateOperation(this.namespace, this[kPipeline], {\n        ...this[kOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        explain: verbosity ?? true\n      })\n    );\n  }\n\n  /** Add a group stage to the aggregation pipeline */\n  group<T = TSchema>($group: Document): AggregationCursor<T>;\n  group($group: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $group });\n    return this;\n  }\n\n  /** Add a limit stage to the aggregation pipeline */\n  limit($limit: number): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $limit });\n    return this;\n  }\n\n  /** Add a match stage to the aggregation pipeline */\n  match($match: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $match });\n    return this;\n  }\n\n  /** Add an out stage to the aggregation pipeline */\n  out($out: { db: string; coll: string } | string): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $out });\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.aggregate().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>($project: Document): AggregationCursor<T> {\n    assertUninitialized(this);\n    this[kPipeline].push({ $project });\n    return this as unknown as AggregationCursor<T>;\n  }\n\n  /** Add a lookup stage to the aggregation pipeline */\n  lookup($lookup: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $lookup });\n    return this;\n  }\n\n  /** Add a redact stage to the aggregation pipeline */\n  redact($redact: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $redact });\n    return this;\n  }\n\n  /** Add a skip stage to the aggregation pipeline */\n  skip($skip: number): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $skip });\n    return this;\n  }\n\n  /** Add a sort stage to the aggregation pipeline */\n  sort($sort: Sort): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $sort });\n    return this;\n  }\n\n  /** Add a unwind stage to the aggregation pipeline */\n  unwind($unwind: Document | string): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $unwind });\n    return this;\n  }\n\n  /** Add a geoNear stage to the aggregation pipeline */\n  geoNear($geoNear: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $geoNear });\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface CountOptions extends CommandOperationOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** An index name hint for the query. */\n  hint?: string | Document;\n}\n\n/** @internal */\nexport class CountOperation extends CommandOperation<number> {\n  override options: CountOptions;\n  collectionName?: string;\n  query: Document;\n\n  constructor(namespace: MongoDBNamespace, filter: Document, options: CountOptions) {\n    super({ s: { namespace: namespace } } as unknown as Collection, options);\n\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    const options = this.options;\n    const cmd: Document = {\n      count: this.collectionName,\n      query: this.query\n    };\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (options.hint != null) {\n      cmd.hint = options.hint;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      callback(err, result ? result.n : 0);\n    });\n  }\n}\n\ndefineAspects(CountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport type SortDirection =\n  | 1\n  | -1\n  | 'asc'\n  | 'desc'\n  | 'ascending'\n  | 'descending'\n  | { $meta: string };\n\n/** @public */\nexport type Sort =\n  | string\n  | Exclude<SortDirection, { $meta: string }>\n  | string[]\n  | { [key: string]: SortDirection }\n  | Map<string, SortDirection>\n  | [string, SortDirection][]\n  | [string, SortDirection];\n\n/** Below stricter types were created for sort that correspond with type that the cmd takes  */\n\n/** @internal */\nexport type SortDirectionForCmd = 1 | -1 | { $meta: string };\n\n/** @internal */\nexport type SortForCmd = Map<string, SortDirectionForCmd>;\n\n/** @internal */\ntype SortPairForCmd = [string, SortDirectionForCmd];\n\n/** @internal */\nfunction prepareDirection(direction: any = 1): SortDirectionForCmd {\n  const value = `${direction}`.toLowerCase();\n  if (isMeta(direction)) return direction;\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new MongoInvalidArgumentError(`Invalid sort direction: ${JSON.stringify(direction)}`);\n  }\n}\n\n/** @internal */\nfunction isMeta(t: SortDirection): t is { $meta: string } {\n  return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n\n/** @internal */\nfunction isPair(t: Sort): t is [string, SortDirection] {\n  if (Array.isArray(t) && t.length === 2) {\n    try {\n      prepareDirection(t[1]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n}\n\nfunction isDeep(t: Sort): t is [string, SortDirection][] {\n  return Array.isArray(t) && Array.isArray(t[0]);\n}\n\nfunction isMap(t: Sort): t is Map<string, SortDirection> {\n  return t instanceof Map && t.size > 0;\n}\n\n/** @internal */\nfunction pairToMap(v: [string, SortDirection]): SortForCmd {\n  return new Map([[`${v[0]}`, prepareDirection([v[1]])]]);\n}\n\n/** @internal */\nfunction deepToMap(t: [string, SortDirection][]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(([k, v]) => [`${k}`, prepareDirection(v)]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction stringsToMap(t: string[]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(key => [`${key}`, 1]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction objectToMap(t: { [key: string]: SortDirection }): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Object.entries(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction mapToMap(t: Map<string, SortDirection>): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Array.from(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nexport function formatSort(\n  sort: Sort | undefined,\n  direction?: SortDirection\n): SortForCmd | undefined {\n  if (sort == null) return undefined;\n  if (typeof sort === 'string') return new Map([[sort, prepareDirection(direction)]]);\n  if (typeof sort !== 'object') {\n    throw new MongoInvalidArgumentError(\n      `Invalid sort format: ${JSON.stringify(sort)} Sort must be a valid object`\n    );\n  }\n  if (!Array.isArray(sort)) {\n    return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n  }\n  if (!sort.length) return undefined;\n  if (isDeep(sort)) return deepToMap(sort);\n  if (isPair(sort)) return pairToMap(sort);\n  return stringsToMap(sort);\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError } from '../error';\nimport { ReadConcern } from '../read_concern';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort } from '../sort';\nimport {\n  type Callback,\n  decorateWithExplain,\n  type MongoDBNamespace,\n  normalizeHintField\n} from '../utils';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/**\n * @public\n * @typeParam TSchema - Unused schema definition, deprecated usage, only specify `FindOptions` with no generic\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface FindOptions<TSchema extends Document = Document>\n  extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Sets the limit of documents returned in the query. */\n  limit?: number;\n  /** Set to sort the documents coming back from the query. Array of indexes, `[['a', 1]]` etc. */\n  sort?: Sort;\n  /** The fields to return in the query. Object of fields to either include or exclude (one of, not both), `{'a':1, 'b': 1}` **or** `{'a': 0, 'b': 0}` */\n  projection?: Document;\n  /** Set to skip N documents ahead in your query (useful for pagination). */\n  skip?: number;\n  /** Tell the query to use specific indexes in the query. Object of indexes to use, `{'_id':1}` */\n  hint?: Hint;\n  /** Specify if the cursor can timeout. */\n  timeout?: boolean;\n  /** Specify if the cursor is tailable. */\n  tailable?: boolean;\n  /** Specify if the cursor is a tailable-await cursor. Requires `tailable` to be true */\n  awaitData?: boolean;\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /** If true, returns only the index keys in the resulting documents. */\n  returnKey?: boolean;\n  /** The inclusive lower bound for a specific index */\n  min?: Document;\n  /** The exclusive upper bound for a specific index */\n  max?: Document;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true */\n  maxAwaitTimeMS?: number;\n  /** The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that. */\n  noCursorTimeout?: boolean;\n  /** Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields). */\n  collation?: CollationOptions;\n  /** Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher) */\n  allowDiskUse?: boolean;\n  /** Determines whether to close the cursor after the first batch. Defaults to false. */\n  singleBatch?: boolean;\n  /** For queries against a sharded collection, allows the command (or subsequent getMore commands) to return partial results, rather than an error, if one or more queried shards are unavailable. */\n  allowPartialResults?: boolean;\n  /** Determines whether to return the record identifier for each document. If true, adds a field $recordId to the returned documents. */\n  showRecordId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Option to enable an optimized code path for queries looking for a particular range of `ts` values in the oplog. Requires `tailable` to be true.\n   * @deprecated Starting from MongoDB 4.4 this flag is not needed and will be ignored.\n   */\n  oplogReplay?: boolean;\n}\n\n/** @internal */\nexport class FindOperation extends CommandOperation<Document> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: FindOptions & { writeConcern?: never };\n  filter: Document;\n\n  constructor(\n    collection: Collection | undefined,\n    ns: MongoDBNamespace,\n    filter: Document = {},\n    options: FindOptions = {}\n  ) {\n    super(collection, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    }\n\n    // special case passing in an ObjectId as a filter\n    this.filter = filter != null && filter._bsontype === 'ObjectId' ? { _id: filter } : filter;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    this.server = server;\n\n    const options = this.options;\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n    if (this.explain) {\n      findCommand = decorateWithExplain(findCommand, this.explain);\n    }\n\n    server.command(\n      this.ns,\n      findCommand,\n      {\n        ...this.options,\n        ...this.bsonOptions,\n        documentsReturnedIn: 'firstBatch',\n        session\n      },\n      callback\n    );\n  }\n}\n\nfunction makeFindCommand(ns: MongoDBNamespace, filter: Document, options: FindOptions): Document {\n  const findCommand: Document = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = formatSort(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (\n        options.limit &&\n        options.limit !== 0 &&\n        Math.abs(options.batchSize) < Math.abs(options.limit)\n      ) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  }\n\n  // we check for undefined specifically here to allow falsy values\n  // eslint-disable-next-line no-restricted-syntax\n  if (options.comment !== undefined) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = ReadConcern.fromOptions(options);\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.oplogReplay === 'boolean') {\n    findCommand.oplogReplay = options.oplogReplay;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport { MongoInvalidArgumentError, MongoTailableCursorError } from '../error';\nimport type { ExplainVerbosityLike } from '../explain';\nimport type { MongoClient } from '../mongo_client';\nimport type { CollationOptions } from '../operations/command';\nimport { CountOperation, type CountOptions } from '../operations/count';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { FindOperation, type FindOptions } from '../operations/find';\nimport type { Hint } from '../operations/operation';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort, type SortDirection } from '../sort';\nimport { type Callback, emitWarningOnce, mergeOptions, type MongoDBNamespace } from '../utils';\nimport { AbstractCursor, assertUninitialized } from './abstract_cursor';\n\n/** @internal */\nconst kFilter = Symbol('filter');\n/** @internal */\nconst kNumReturned = Symbol('numReturned');\n/** @internal */\nconst kBuiltOptions = Symbol('builtOptions');\n\n/** @public Flags allowed for cursor */\nexport const FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public */\nexport class FindCursor<TSchema = any> extends AbstractCursor<TSchema> {\n  /** @internal */\n  [kFilter]: Document;\n  /** @internal */\n  [kNumReturned]?: number;\n  /** @internal */\n  [kBuiltOptions]: FindOptions;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    filter: Document = {},\n    options: FindOptions = {}\n  ) {\n    super(client, namespace, options);\n\n    this[kFilter] = filter;\n    this[kBuiltOptions] = options;\n\n    if (options.sort != null) {\n      this[kBuiltOptions].sort = formatSort(options.sort);\n    }\n  }\n\n  clone(): FindCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this[kBuiltOptions]);\n    delete clonedOptions.session;\n    return new FindCursor(this.client, this.namespace, this[kFilter], {\n      ...clonedOptions\n    });\n  }\n\n  override map<T>(transform: (doc: TSchema) => T): FindCursor<T> {\n    return super.map(transform) as FindCursor<T>;\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession, callback: Callback<ExecutionResult>): void {\n    const findOperation = new FindOperation(undefined, this.namespace, this[kFilter], {\n      ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n      ...this.cursorOptions,\n      session\n    });\n\n    executeOperation(this.client, findOperation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: We only need this for legacy queries that do not support `limit`, maybe\n      //       the value should only be saved in those cases.\n      if (response.cursor) {\n        this[kNumReturned] = response.cursor.firstBatch.length;\n      } else {\n        this[kNumReturned] = response.documents ? response.documents.length : 0;\n      }\n\n      // TODO: NODE-2882\n      callback(undefined, { server: findOperation.server, session, response });\n    });\n  }\n\n  /** @internal */\n  override _getMore(batchSize: number, callback: Callback<Document>): void {\n    // NOTE: this is to support client provided limits in pre-command servers\n    const numReturned = this[kNumReturned];\n    if (numReturned) {\n      const limit = this[kBuiltOptions].limit;\n      batchSize =\n        limit && limit > 0 && numReturned + batchSize > limit ? limit - numReturned : batchSize;\n\n      if (batchSize <= 0) {\n        this.close().finally(() => callback());\n        return;\n      }\n    }\n\n    super._getMore(batchSize, (err, response) => {\n      if (err) return callback(err);\n\n      // TODO: wrap this in some logic to prevent it from happening if we don't need this support\n      if (response) {\n        this[kNumReturned] = this[kNumReturned] + response.cursor.nextBatch.length;\n      }\n\n      callback(undefined, response);\n    });\n  }\n\n  /**\n   * Get the count of documents for this cursor\n   * @deprecated Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n   */\n  async count(options?: CountOptions): Promise<number> {\n    emitWarningOnce(\n      'cursor.count is deprecated and will be removed in the next major version, please use `collection.estimatedDocumentCount` or `collection.countDocuments` instead '\n    );\n    if (typeof options === 'boolean') {\n      throw new MongoInvalidArgumentError('Invalid first parameter to count');\n    }\n    return executeOperation(\n      this.client,\n      new CountOperation(this.namespace, this[kFilter], {\n        ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        ...options\n      })\n    );\n  }\n\n  /** Execute the explain for the cursor */\n  async explain(verbosity?: ExplainVerbosityLike): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new FindOperation(undefined, this.namespace, this[kFilter], {\n        ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        explain: verbosity ?? true\n      })\n    );\n  }\n\n  /** Set the cursor query */\n  filter(filter: Document): this {\n    assertUninitialized(this);\n    this[kFilter] = filter;\n    return this;\n  }\n\n  /**\n   * Set the cursor hint\n   *\n   * @param hint - If specified, then the query system will only consider plans using the hinted index.\n   */\n  hint(hint: Hint): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].hint = hint;\n    return this;\n  }\n\n  /**\n   * Set the cursor min\n   *\n   * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n   */\n  min(min: Document): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].min = min;\n    return this;\n  }\n\n  /**\n   * Set the cursor max\n   *\n   * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n   */\n  max(max: Document): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].max = max;\n    return this;\n  }\n\n  /**\n   * Set the cursor returnKey.\n   * If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents.\n   * If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n   *\n   * @param value - the returnKey value.\n   */\n  returnKey(value: boolean): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].returnKey = value;\n    return this;\n  }\n\n  /**\n   * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n   *\n   * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n   */\n  showRecordId(value: boolean): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].showRecordId = value;\n    return this;\n  }\n\n  /**\n   * Add a query modifier to the cursor query\n   *\n   * @param name - The query modifier (must start with $, such as $orderby etc)\n   * @param value - The modifier value.\n   */\n  addQueryModifier(name: string, value: string | boolean | number | Document): this {\n    assertUninitialized(this);\n    if (name[0] !== '$') {\n      throw new MongoInvalidArgumentError(`${name} is not a valid query modifier`);\n    }\n\n    // Strip of the $\n    const field = name.substr(1);\n\n    // NOTE: consider some TS magic for this\n    switch (field) {\n      case 'comment':\n        this[kBuiltOptions].comment = value as string | Document;\n        break;\n\n      case 'explain':\n        this[kBuiltOptions].explain = value as boolean;\n        break;\n\n      case 'hint':\n        this[kBuiltOptions].hint = value as string | Document;\n        break;\n\n      case 'max':\n        this[kBuiltOptions].max = value as Document;\n        break;\n\n      case 'maxTimeMS':\n        this[kBuiltOptions].maxTimeMS = value as number;\n        break;\n\n      case 'min':\n        this[kBuiltOptions].min = value as Document;\n        break;\n\n      case 'orderby':\n        this[kBuiltOptions].sort = formatSort(value as string | Document);\n        break;\n\n      case 'query':\n        this[kFilter] = value as Document;\n        break;\n\n      case 'returnKey':\n        this[kBuiltOptions].returnKey = value as boolean;\n        break;\n\n      case 'showDiskLoc':\n        this[kBuiltOptions].showRecordId = value as boolean;\n        break;\n\n      default:\n        throw new MongoInvalidArgumentError(`Invalid query modifier: ${name}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Add a comment to the cursor query allowing for tracking the comment in the log.\n   *\n   * @param value - The comment attached to this query.\n   */\n  comment(value: string): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].comment = value;\n    return this;\n  }\n\n  /**\n   * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n   *\n   * @param value - Number of milliseconds to wait before aborting the tailed query.\n   */\n  maxAwaitTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxAwaitTimeMS must be a number');\n    }\n\n    this[kBuiltOptions].maxAwaitTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  override maxTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this[kBuiltOptions].maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic\n   * {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.find().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>(value: Document): FindCursor<T> {\n    assertUninitialized(this);\n    this[kBuiltOptions].projection = value;\n    return this as unknown as FindCursor<T>;\n  }\n\n  /**\n   * Sets the sort order of the cursor query.\n   *\n   * @param sort - The key or keys set for the sort.\n   * @param direction - The direction of the sorting (1 or -1).\n   */\n  sort(sort: Sort | string, direction?: SortDirection): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support sorting');\n    }\n\n    this[kBuiltOptions].sort = formatSort(sort, direction);\n    return this;\n  }\n\n  /**\n   * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n   *\n   * @remarks\n   * {@link https://www.mongodb.com/docs/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n   */\n  allowDiskUse(allow = true): this {\n    assertUninitialized(this);\n\n    if (!this[kBuiltOptions].sort) {\n      throw new MongoInvalidArgumentError('Option \"allowDiskUse\" requires a sort specification');\n    }\n\n    // As of 6.0 the default is true. This allows users to get back to the old behavior.\n    if (!allow) {\n      this[kBuiltOptions].allowDiskUse = false;\n      return this;\n    }\n\n    this[kBuiltOptions].allowDiskUse = true;\n    return this;\n  }\n\n  /**\n   * Set the collation options for the cursor.\n   *\n   * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n   */\n  collation(value: CollationOptions): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].collation = value;\n    return this;\n  }\n\n  /**\n   * Set the limit for the cursor.\n   *\n   * @param value - The limit for the cursor query.\n   */\n  limit(value: number): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support limit');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"limit\" requires an integer');\n    }\n\n    this[kBuiltOptions].limit = value;\n    return this;\n  }\n\n  /**\n   * Set the skip for the cursor.\n   *\n   * @param value - The skip for the cursor query.\n   */\n  skip(value: number): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support skip');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"skip\" requires an integer');\n    }\n\n    this[kBuiltOptions].skip = value;\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoCompatibilityError, MONGODB_ERROR_CODES, MongoError } from '../error';\nimport type { OneOrMore } from '../mongo_types';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, isObject, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  type CollationOptions,\n  CommandOperation,\n  type CommandOperationOptions,\n  type OperationParent\n} from './command';\nimport { indexInformation, type IndexInformationOptions } from './common_functions';\nimport { AbstractCallbackOperation, Aspect, defineAspects } from './operation';\n\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'hidden',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n  'version',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\n/** @public */\nexport type IndexDirection =\n  | -1\n  | 1\n  | '2d'\n  | '2dsphere'\n  | 'text'\n  | 'geoHaystack'\n  | 'hashed'\n  | number;\n\nfunction isIndexDirection(x: unknown): x is IndexDirection {\n  return (\n    typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack'\n  );\n}\n/** @public */\nexport type IndexSpecification = OneOrMore<\n  | string\n  | [string, IndexDirection]\n  | { [key: string]: IndexDirection }\n  | Map<string, IndexDirection>\n>;\n\n/** @public */\nexport interface IndexDescription\n  extends Pick<\n    CreateIndexesOptions,\n    | 'background'\n    | 'unique'\n    | 'partialFilterExpression'\n    | 'sparse'\n    | 'hidden'\n    | 'expireAfterSeconds'\n    | 'storageEngine'\n    | 'version'\n    | 'weights'\n    | 'default_language'\n    | 'language_override'\n    | 'textIndexVersion'\n    | '2dsphereIndexVersion'\n    | 'bits'\n    | 'min'\n    | 'max'\n    | 'bucketSize'\n    | 'wildcardProjection'\n  > {\n  collation?: CollationOptions;\n  name?: string;\n  key: { [key: string]: IndexDirection } | Map<string, IndexDirection>;\n}\n\n/** @public */\nexport interface CreateIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Creates the index in the background, yielding whenever possible. */\n  background?: boolean;\n  /** Creates an unique index. */\n  unique?: boolean;\n  /** Override the autogenerated index name (useful if the resulting name is larger than 128 bytes) */\n  name?: string;\n  /** Creates a partial index based on the given filter object (MongoDB 3.2 or higher) */\n  partialFilterExpression?: Document;\n  /** Creates a sparse index. */\n  sparse?: boolean;\n  /** Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher) */\n  expireAfterSeconds?: number;\n  /** Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher) */\n  storageEngine?: Document;\n  /** (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes. */\n  commitQuorum?: number | string;\n  /** Specifies the index version number, either 0 or 1. */\n  version?: number;\n  // text indexes\n  weights?: Document;\n  default_language?: string;\n  language_override?: string;\n  textIndexVersion?: number;\n  // 2d-sphere indexes\n  '2dsphereIndexVersion'?: number;\n  // 2d indexes\n  bits?: number;\n  /** For geospatial indexes set the lower bound for the co-ordinates. */\n  min?: number;\n  /** For geospatial indexes set the high bound for the co-ordinates. */\n  max?: number;\n  // geoHaystack Indexes\n  bucketSize?: number;\n  // wildcard indexes\n  wildcardProjection?: Document;\n  /** Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher) */\n  hidden?: boolean;\n}\n\nfunction isSingleIndexTuple(t: unknown): t is [string, IndexDirection] {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\n\nfunction makeIndexSpec(\n  indexSpec: IndexSpecification,\n  options?: CreateIndexesOptions\n): IndexDescription {\n  const key: Map<string, IndexDirection> = new Map();\n\n  const indexSpecs =\n    !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n\n  // Iterate through array and handle different types\n  for (const spec of indexSpecs) {\n    if (typeof spec === 'string') {\n      key.set(spec, 1);\n    } else if (Array.isArray(spec)) {\n      key.set(spec[0], spec[1] ?? 1);\n    } else if (spec instanceof Map) {\n      for (const [property, value] of spec) {\n        key.set(property, value);\n      }\n    } else if (isObject(spec)) {\n      for (const [property, value] of Object.entries(spec)) {\n        key.set(property, value);\n      }\n    }\n  }\n\n  return { ...options, key };\n}\n\n/** @internal */\nexport class IndexesOperation extends AbstractCallbackOperation<Document[]> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: IndexInformationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document[]>\n  ): void {\n    const coll = this.collection;\n    const options = this.options;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { full: true, ...options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\n/** @internal */\nexport class CreateIndexesOperation<\n  T extends string | string[] = string[]\n> extends CommandOperation<T> {\n  override options: CreateIndexesOptions;\n  collectionName: string;\n  indexes: ReadonlyArray<Omit<IndexDescription, 'key'> & { key: Map<string, IndexDirection> }>;\n\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, options);\n\n    this.options = options ?? {};\n    this.collectionName = collectionName;\n    this.indexes = indexes.map(userIndex => {\n      // Ensure the key is a Map to preserve index key ordering\n      const key =\n        userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      const name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n      const validIndexOptions = Object.fromEntries(\n        Object.entries({ ...userIndex }).filter(([optionName]) =>\n          VALID_INDEX_OPTIONS.has(optionName)\n        )\n      );\n      return {\n        ...validIndexOptions,\n        name,\n        key\n      };\n    });\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    const cmd: Document = { createIndexes: this.collectionName, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        callback(\n          new MongoCompatibilityError(\n            'Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'\n          )\n        );\n        return;\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    super.executeCommand(server, session, cmd, err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const indexNames = indexes.map(index => index.name || '');\n      callback(undefined, indexNames as T);\n    });\n  }\n}\n\n/** @internal */\nexport class CreateIndexOperation extends CreateIndexesOperation<string> {\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string>\n  ): void {\n    super.executeCallback(server, session, (err, indexNames) => {\n      if (err || !indexNames) return callback(err);\n      return callback(undefined, indexNames[0]);\n    });\n  }\n}\n\n/** @internal */\nexport class EnsureIndexOperation extends CreateIndexOperation {\n  db: Db;\n\n  constructor(\n    db: Db,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(db, collectionName, indexSpec, options);\n\n    this.readPreference = ReadPreference.primary;\n    this.db = db;\n    this.collectionName = collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback\n  ): void {\n    const indexName = this.indexes[0].name;\n    const cursor = this.db.collection(this.collectionName).listIndexes({ session });\n    cursor.toArray().then(\n      indexes => {\n        indexes = Array.isArray(indexes) ? indexes : [indexes];\n        if (indexes.some(index => index.name === indexName)) {\n          callback(undefined, indexName);\n          return;\n        }\n        super.executeCallback(server, session, callback);\n      },\n      error => {\n        if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n          // ignore \"NamespaceNotFound\" errors\n          return super.executeCallback(server, session, callback);\n        }\n        return callback(error);\n      }\n    );\n  }\n}\n\n/** @public */\nexport type DropIndexesOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropIndexOperation extends CommandOperation<Document> {\n  override options: DropIndexesOptions;\n  collection: Collection;\n  indexName: string;\n\n  constructor(collection: Collection, indexName: string, options?: DropIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n    super.executeCommand(server, session, cmd, callback);\n  }\n}\n\n/** @internal */\nexport class DropIndexesOperation extends DropIndexOperation {\n  constructor(collection: Collection, options: DropIndexesOptions) {\n    super(collection, '*', options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback\n  ): void {\n    super.executeCallback(server, session, err => {\n      if (err) return callback(err, false);\n      callback(undefined, true);\n    });\n  }\n}\n\n/** @public */\nexport interface ListIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListIndexesOperation extends CommandOperation<Document> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListIndexesOptions & { writeConcern?: never };\n  collectionNamespace: MongoDBNamespace;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const serverWireVersion = maxWireVersion(server);\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n\n    const command: Document = { listIndexes: this.collectionNamespace.collection, cursor };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @internal */\nexport class IndexExistsOperation extends AbstractCallbackOperation<boolean> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n  indexes: string | string[];\n\n  constructor(\n    collection: Collection,\n    indexes: string | string[],\n    options: IndexInformationOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    const coll = this.collection;\n    const indexes = this.indexes;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { ...this.options, readPreference: this.readPreference, session },\n      (err, indexInformation) => {\n        // If we have an error return\n        if (err != null) return callback(err);\n        // Let's check for the index names\n        if (!Array.isArray(indexes)) return callback(undefined, indexInformation[indexes] != null);\n        // Check in list of indexes\n        for (let i = 0; i < indexes.length; i++) {\n          if (indexInformation[indexes[i]] == null) {\n            return callback(undefined, false);\n          }\n        }\n\n        // All keys found return true\n        return callback(undefined, true);\n      }\n    );\n  }\n}\n\n/** @internal */\nexport class IndexInformationOperation extends AbstractCallbackOperation<Document> {\n  override options: IndexInformationOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options?: IndexInformationOptions) {\n    super(options);\n    this.options = options ?? {};\n    this.db = db;\n    this.name = name;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const db = this.db;\n    const name = this.name;\n\n    indexInformation(\n      db,\n      name,\n      { ...this.options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(CreateIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(EnsureIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexesOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Collection } from '../collection';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { ListIndexesOperation, type ListIndexesOptions } from '../operations/indexes';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCursor } from './abstract_cursor';\n\n/** @public */\nexport class ListIndexesCursor extends AbstractCursor {\n  parent: Collection;\n  options?: ListIndexesOptions;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection.client, collection.s.namespace, options);\n    this.parent = collection;\n    this.options = options;\n  }\n\n  clone(): ListIndexesCursor {\n    return new ListIndexesCursor(this.parent, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const operation = new ListIndexesOperation(this.parent, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation(this.parent.client, operation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: operation.server, session, response });\n    });\n  }\n}\n", "import type { Collection } from '../collection';\nimport type { AggregateOptions } from '../operations/aggregate';\nimport { AggregationCursor } from './aggregation_cursor';\n\n/** @public */\nexport type ListSearchIndexesOptions = AggregateOptions;\n\n/** @public */\nexport class ListSearchIndexesCursor extends AggregationCursor<{ name: string }> {\n  /** @internal */\n  constructor(\n    { fullNamespace: ns, client }: Collection,\n    name: string | null,\n    options: ListSearchIndexesOptions = {}\n  ) {\n    const pipeline =\n      name == null ? [{ $listSearchIndexes: {} }] : [{ $listSearchIndexes: { name } }];\n    super(client, ns, pipeline, options);\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AggregateOperation, type AggregateOptions } from './aggregate';\n\n/** @public */\nexport interface CountDocumentsOptions extends AggregateOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n}\n\n/** @internal */\nexport class CountDocumentsOperation extends AggregateOperation<number> {\n  constructor(collection: Collection, query: Document, options: CountDocumentsOptions) {\n    const pipeline = [];\n    pipeline.push({ $match: query });\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection.s.namespace, pipeline, options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    super.executeCallback(server, session, (err, result) => {\n      if (err || !result) {\n        callback(err);\n        return;\n      }\n\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result as unknown as Document;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(undefined, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(undefined, docs.length ? docs[0].n : 0);\n    });\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, decorateWithCollation, decorateWithReadConcern } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type DistinctOptions = CommandOperationOptions;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nexport class DistinctOperation extends CommandOperation<any[]> {\n  override options: DistinctOptions;\n  collection: Collection;\n  /** Field of the document to find distinct values for. */\n  key: string;\n  /** The query for filtering the set of documents to which we apply the distinct filter. */\n  query: Document;\n\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection: Collection, key: string, query: Document, options?: DistinctOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<any[]>\n  ): void {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd: Document = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof options.comment !== 'undefined') {\n      cmd.comment = options.comment;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, this.explain ? result : result.values);\n    });\n  }\n}\n\ndefineAspects(DistinctOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXPLAINABLE]);\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { MONGODB_ERROR_CODES, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface DropCollectionOptions extends CommandOperationOptions {\n  /** @experimental */\n  encryptedFields?: Document;\n}\n\n/** @internal */\nexport class DropCollectionOperation extends CommandOperation<boolean> {\n  override options: DropCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: DropCollectionOptions = {}) {\n    super(db, options);\n    this.db = db;\n    this.options = options;\n    this.name = name;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    (async () => {\n      const db = this.db;\n      const options = this.options;\n      const name = this.name;\n\n      const encryptedFieldsMap = db.client.options.autoEncryption?.encryptedFieldsMap;\n      let encryptedFields: Document | undefined =\n        options.encryptedFields ?? encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n\n      if (!encryptedFields && encryptedFieldsMap) {\n        // If the MongoClient was configured with an encryptedFieldsMap,\n        // and no encryptedFields config was available in it or explicitly\n        // passed as an argument, the spec tells us to look one up using\n        // listCollections().\n        const listCollectionsResult = await db\n          .listCollections({ name }, { nameOnly: false })\n          .toArray();\n        encryptedFields = listCollectionsResult?.[0]?.options?.encryptedFields;\n      }\n\n      if (encryptedFields) {\n        const escCollection = encryptedFields.escCollection || `enxcol_.${name}.esc`;\n        const ecocCollection = encryptedFields.ecocCollection || `enxcol_.${name}.ecoc`;\n\n        for (const collectionName of [escCollection, ecocCollection]) {\n          // Drop auxilliary collections, ignoring potential NamespaceNotFound errors.\n          const dropOp = new DropCollectionOperation(db, collectionName);\n          try {\n            await dropOp.executeWithoutEncryptedFieldsCheck(server, session);\n          } catch (err) {\n            if (\n              !(err instanceof MongoServerError) ||\n              err.code !== MONGODB_ERROR_CODES.NamespaceNotFound\n            ) {\n              throw err;\n            }\n          }\n        }\n      }\n\n      return this.executeWithoutEncryptedFieldsCheck(server, session);\n    })().then(\n      result => callback(undefined, result),\n      err => callback(err)\n    );\n  }\n\n  private executeWithoutEncryptedFieldsCheck(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      super.executeCommand(server, session, { drop: this.name }, (err, result) => {\n        if (err) return reject(err);\n        resolve(!!result.ok);\n      });\n    });\n  }\n}\n\n/** @public */\nexport type DropDatabaseOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropDatabaseOperation extends CommandOperation<boolean> {\n  override options: DropDatabaseOptions;\n\n  constructor(db: Db, options: DropDatabaseOptions) {\n    super(db, options);\n    this.options = options;\n  }\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    super.executeCommand(server, session, { dropDatabase: 1 }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\ndefineAspects(DropCollectionOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropDatabaseOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  override options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoInvalidArgumentError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort, type SortForCmd } from '../sort';\nimport { type Callback, decorateWithCollation, hasAtomicOperators, maxWireVersion } from '../utils';\nimport type { WriteConcern, WriteConcernSettings } from '../write_concern';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport const ReturnDocument = Object.freeze({\n  BEFORE: 'before',\n  AFTER: 'after'\n} as const);\n\n/** @public */\nexport type ReturnDocument = (typeof ReturnDocument)[keyof typeof ReturnDocument];\n\n/** @public */\nexport interface FindOneAndDeleteOptions extends CommandOperationOptions {\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to true\n   * but will default to false in the next major version.\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @public */\nexport interface FindOneAndReplaceOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to true\n   * but will default to false in the next major version.\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @public */\nexport interface FindOneAndUpdateOptions extends CommandOperationOptions {\n  /** Optional list of array filters referenced in filtered positional operators */\n  arrayFilters?: Document[];\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to true\n   * but will default to false in the next major version.\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @internal */\ninterface FindAndModifyCmdBase {\n  remove: boolean;\n  new: boolean;\n  upsert: boolean;\n  update?: Document;\n  sort?: SortForCmd;\n  fields?: Document;\n  bypassDocumentValidation?: boolean;\n  arrayFilters?: Document[];\n  maxTimeMS?: number;\n  let?: Document;\n  writeConcern?: WriteConcern | WriteConcernSettings;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n}\n\nfunction configureFindAndModifyCmdBaseUpdateOpts(\n  cmdBase: FindAndModifyCmdBase,\n  options: FindOneAndReplaceOptions | FindOneAndUpdateOptions\n): FindAndModifyCmdBase {\n  cmdBase.new = options.returnDocument === ReturnDocument.AFTER;\n  cmdBase.upsert = options.upsert === true;\n\n  if (options.bypassDocumentValidation === true) {\n    cmdBase.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n  return cmdBase;\n}\n\n/** @internal */\nclass FindAndModifyOperation extends CommandOperation<Document> {\n  override options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions;\n  cmdBase: FindAndModifyCmdBase;\n  collection: Collection;\n  query: Document;\n  doc?: Document;\n\n  constructor(\n    collection: Collection,\n    query: Document,\n    options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions\n  ) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.cmdBase = {\n      remove: false,\n      new: false,\n      upsert: false\n    };\n\n    options.includeResultMetadata ??= true;\n\n    const sort = formatSort(options.sort);\n    if (sort) {\n      this.cmdBase.sort = sort;\n    }\n\n    if (options.projection) {\n      this.cmdBase.fields = options.projection;\n    }\n\n    if (options.maxTimeMS) {\n      this.cmdBase.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Decorate the findAndModify command with the write Concern\n    if (options.writeConcern) {\n      this.cmdBase.writeConcern = options.writeConcern;\n    }\n\n    if (options.let) {\n      this.cmdBase.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      this.cmdBase.comment = options.comment;\n    }\n\n    // force primary read preference\n    this.readPreference = ReadPreference.primary;\n\n    this.collection = collection;\n    this.query = query;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const coll = this.collection;\n    const query = this.query;\n    const options = { ...this.options, ...this.bsonOptions };\n\n    // Create findAndModify command object\n    const cmd: Document = {\n      findAndModify: coll.collectionName,\n      query: query,\n      ...this.cmdBase\n    };\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (options.hint) {\n      // TODO: once this method becomes a CommandOperation we will have the server\n      // in place to check.\n      const unacknowledgedWrite = this.writeConcern?.w === 0;\n      if (unacknowledgedWrite || maxWireVersion(server) < 8) {\n        callback(\n          new MongoCompatibilityError(\n            'The current topology does not support a hint on findAndModify commands'\n          )\n        );\n\n        return;\n      }\n\n      cmd.hint = options.hint;\n    }\n\n    // Execute the command\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) return callback(err);\n      return callback(undefined, options.includeResultMetadata ? result : result.value ?? null);\n    });\n  }\n}\n\n/** @internal */\nexport class FindOneAndDeleteOperation extends FindAndModifyOperation {\n  constructor(collection: Collection, filter: Document, options: FindOneAndDeleteOptions) {\n    // Basic validation\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.remove = true;\n  }\n}\n\n/** @internal */\nexport class FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: FindOneAndReplaceOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (replacement == null || typeof replacement !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"replacement\" must be an object');\n    }\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = replacement;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n  }\n}\n\n/** @internal */\nexport class FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    update: Document,\n    options: FindOneAndUpdateOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (update == null || typeof update !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"update\" must be an object');\n    }\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = update;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n\n    if (options.arrayFilters) {\n      this.cmdBase.arrayFilters = options.arrayFilters;\n    }\n  }\n}\n\ndefineAspects(FindAndModifyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE\n]);\n", "import type { Collection } from '../collection';\nimport { MongoAPIError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCallbackOperation, type OperationOptions } from './operation';\n\n/** @internal */\nexport class IsCappedOperation extends AbstractCallbackOperation<boolean> {\n  override options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    const coll = this.collection;\n\n    coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray()\n      .then(\n        collections => {\n          if (collections.length === 0) {\n            // TODO(NODE-3485)\n            return callback(new MongoAPIError(`collection ${coll.namespace} not found`));\n          }\n\n          callback(undefined, !!collections[0].options?.capped);\n        },\n        error => callback(error)\n      );\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoAPIError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCallbackOperation, type OperationOptions } from './operation';\n\n/** @internal */\nexport class OptionsOperation extends AbstractCallbackOperation<Document> {\n  override options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const coll = this.collection;\n\n    coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray()\n      .then(\n        collections => {\n          if (collections.length === 0) {\n            // TODO(NODE-3485)\n            return callback(new MongoAPIError(`collection ${coll.namespace} not found`));\n          }\n\n          callback(undefined, collections[0].options);\n        },\n        error => callback(error)\n      );\n  }\n}\n", "import type { Document } from '../bson';\nimport { Collection } from '../collection';\nimport { MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, checkCollectionName } from '../utils';\nimport type { CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { RunAdminCommandOperation } from './run_command';\n\n/** @public */\nexport interface RenameOptions extends CommandOperationOptions {\n  /** Drop the target name collection if it previously exists. */\n  dropTarget?: boolean;\n  /** Unclear */\n  new_collection?: boolean;\n}\n\n/** @internal */\nexport class RenameOperation extends RunAdminCommandOperation {\n  override options: RenameOptions;\n  collection: Collection;\n  newName: string;\n\n  constructor(collection: Collection, newName: string, options: RenameOptions) {\n    // Check the collection name\n    checkCollectionName(newName);\n\n    // Build the command\n    const renameCollection = collection.namespace;\n    const toCollection = collection.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n    super(collection, cmd, options);\n    this.options = options;\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Collection>\n  ): void {\n    const coll = this.collection;\n\n    super.executeCallback(server, session, (err, doc) => {\n      if (err) return callback(err);\n      // We have an error\n      if (doc?.errmsg) {\n        return callback(new MongoServerError(doc));\n      }\n\n      let newColl: Collection<Document>;\n      try {\n        newColl = new Collection(coll.s.db, this.newName, coll.s.options);\n      } catch (err) {\n        return callback(err);\n      }\n\n      return callback(undefined, newColl);\n    });\n  }\n}\n\ndefineAspects(RenameOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from 'bson';\n\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport type { Callback } from '../../utils';\nimport { AbstractCallbackOperation } from '../operation';\n\n/**\n * @public\n */\nexport interface SearchIndexDescription {\n  /** The name of the index. */\n  name?: string;\n\n  /** The index definition. */\n  definition: Document;\n}\n\n/** @internal */\nexport class CreateSearchIndexesOperation extends AbstractCallbackOperation<string[]> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly descriptions: ReadonlyArray<SearchIndexDescription>\n  ) {\n    super();\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string[]>\n  ): void {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      createSearchIndexes: namespace.collection,\n      indexes: this.descriptions\n    };\n\n    server.command(namespace, command, { session }, (err, res) => {\n      if (err || !res) {\n        callback(err);\n        return;\n      }\n\n      const indexesCreated: Array<{ name: string }> = res?.indexesCreated ?? [];\n\n      callback(\n        undefined,\n        indexesCreated.map(({ name }) => name)\n      );\n    });\n  }\n}\n", "import type { Document } from 'bson';\n\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport type { Callback } from '../../utils';\nimport { AbstractCallbackOperation } from '../operation';\n\n/** @internal */\nexport class DropSearchIndexOperation extends AbstractCallbackOperation<void> {\n  constructor(private readonly collection: Collection, private readonly name: string) {\n    super();\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<void>\n  ): void {\n    const namespace = this.collection.fullNamespace;\n\n    const command: Document = {\n      dropSearchIndex: namespace.collection\n    };\n\n    if (typeof this.name === 'string') {\n      command.name = this.name;\n    }\n\n    server.command(namespace, command, { session }, err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback();\n    });\n  }\n}\n", "import type { Document } from 'bson';\n\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport type { Callback } from '../../utils';\nimport { AbstractCallbackOperation } from '../operation';\n\n/** @internal */\nexport class UpdateSearchIndexOperation extends AbstractCallbackOperation<void> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly name: string,\n    private readonly definition: Document\n  ) {\n    super();\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<void>\n  ): void {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      updateSearchIndex: namespace.collection,\n      name: this.name,\n      definition: this.definition\n    };\n\n    server.command(namespace, command, { session }, err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback();\n    });\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/**\n * @public\n * @deprecated the `collStats` operation will be removed in the next major release.  Please\n * use an aggregation pipeline with the [`$collStats`](https://www.mongodb.com/docs/manual/reference/operator/aggregation/collStats/) stage instead\n */\nexport interface CollStatsOptions extends CommandOperationOptions {\n  /** Divide the returned sizes by scale value. */\n  scale?: number;\n}\n\n/**\n * Get all the collection statistics.\n * @internal\n */\nexport class CollStatsOperation extends CommandOperation<Document> {\n  override options: CollStatsOptions;\n  collectionName: string;\n\n  /**\n   * Construct a Stats operation.\n   *\n   * @param collection - Collection instance\n   * @param options - Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  constructor(collection: Collection, options?: CollStatsOptions) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.collectionName = collection.collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<CollStats>\n  ): void {\n    const command: Document = { collStats: this.collectionName };\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @public */\nexport interface DbStatsOptions extends CommandOperationOptions {\n  /** Divide the returned sizes by scale value. */\n  scale?: number;\n}\n\n/** @internal */\nexport class DbStatsOperation extends CommandOperation<Document> {\n  override options: DbStatsOptions;\n\n  constructor(db: Db, options: DbStatsOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const command: Document = { dbStats: true };\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/**\n * @deprecated the `collStats` operation will be removed in the next major release.  Please\n * use an aggregation pipeline with the [`$collStats`](https://www.mongodb.com/docs/manual/reference/operator/aggregation/collStats/) stage instead\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/command/collStats/\n */\nexport interface CollStats extends Document {\n  /** Namespace */\n  ns: string;\n  /** Number of documents */\n  count: number;\n  /** Collection size in bytes */\n  size: number;\n  /** Average object size in bytes */\n  avgObjSize: number;\n  /** (Pre)allocated space for the collection in bytes */\n  storageSize: number;\n  /** Number of extents (contiguously allocated chunks of datafile space) */\n  numExtents: number;\n  /** Number of indexes */\n  nindexes: number;\n  /** Size of the most recently created extent in bytes */\n  lastExtentSize: number;\n  /** Padding can speed up updates if documents grow */\n  paddingFactor: number;\n  /** A number that indicates the user-set flags on the collection. userFlags only appears when using the mmapv1 storage engine */\n  userFlags?: number;\n  /** Total index size in bytes */\n  totalIndexSize: number;\n  /** Size of specific indexes in bytes */\n  indexSizes: {\n    _id_: number;\n    [index: string]: number;\n  };\n  /** `true` if the collection is capped */\n  capped: boolean;\n  /** The maximum number of documents that may be present in a capped collection */\n  max: number;\n  /** The maximum size of a capped collection */\n  maxSize: number;\n  /** This document contains data reported directly by the WiredTiger engine and other data for internal diagnostic use */\n  wiredTiger?: WiredTigerData;\n  /** The fields in this document are the names of the indexes, while the values themselves are documents that contain statistics for the index provided by the storage engine */\n  indexDetails?: any;\n  ok: number;\n\n  /** The amount of storage available for reuse. The scale argument affects this value. */\n  freeStorageSize?: number;\n  /** An array that contains the names of the indexes that are currently being built on the collection */\n  indexBuilds?: number;\n  /** The sum of the storageSize and totalIndexSize. The scale argument affects this value */\n  totalSize: number;\n  /** The scale value used by the command. */\n  scaleFactor: number;\n}\n\n/**\n * @public\n * @deprecated This type is only used for the deprecated `collStats` operation and will be removed in the next major release.\n */\nexport interface WiredTigerData extends Document {\n  LSM: {\n    'bloom filter false positives': number;\n    'bloom filter hits': number;\n    'bloom filter misses': number;\n    'bloom filter pages evicted from cache': number;\n    'bloom filter pages read into cache': number;\n    'bloom filters in the LSM tree': number;\n    'chunks in the LSM tree': number;\n    'highest merge generation in the LSM tree': number;\n    'queries that could have benefited from a Bloom filter that did not exist': number;\n    'sleep for LSM checkpoint throttle': number;\n    'sleep for LSM merge throttle': number;\n    'total size of bloom filters': number;\n  } & Document;\n  'block-manager': {\n    'allocations requiring file extension': number;\n    'blocks allocated': number;\n    'blocks freed': number;\n    'checkpoint size': number;\n    'file allocation unit size': number;\n    'file bytes available for reuse': number;\n    'file magic number': number;\n    'file major version number': number;\n    'file size in bytes': number;\n    'minor version number': number;\n  };\n  btree: {\n    'btree checkpoint generation': number;\n    'column-store fixed-size leaf pages': number;\n    'column-store internal pages': number;\n    'column-store variable-size RLE encoded values': number;\n    'column-store variable-size deleted values': number;\n    'column-store variable-size leaf pages': number;\n    'fixed-record size': number;\n    'maximum internal page key size': number;\n    'maximum internal page size': number;\n    'maximum leaf page key size': number;\n    'maximum leaf page size': number;\n    'maximum leaf page value size': number;\n    'maximum tree depth': number;\n    'number of key/value pairs': number;\n    'overflow pages': number;\n    'pages rewritten by compaction': number;\n    'row-store internal pages': number;\n    'row-store leaf pages': number;\n  } & Document;\n  cache: {\n    'bytes currently in the cache': number;\n    'bytes read into cache': number;\n    'bytes written from cache': number;\n    'checkpoint blocked page eviction': number;\n    'data source pages selected for eviction unable to be evicted': number;\n    'hazard pointer blocked page eviction': number;\n    'in-memory page passed criteria to be split': number;\n    'in-memory page splits': number;\n    'internal pages evicted': number;\n    'internal pages split during eviction': number;\n    'leaf pages split during eviction': number;\n    'modified pages evicted': number;\n    'overflow pages read into cache': number;\n    'overflow values cached in memory': number;\n    'page split during eviction deepened the tree': number;\n    'page written requiring lookaside records': number;\n    'pages read into cache': number;\n    'pages read into cache requiring lookaside entries': number;\n    'pages requested from the cache': number;\n    'pages written from cache': number;\n    'pages written requiring in-memory restoration': number;\n    'tracked dirty bytes in the cache': number;\n    'unmodified pages evicted': number;\n  } & Document;\n  cache_walk: {\n    'Average difference between current eviction generation when the page was last considered': number;\n    'Average on-disk page image size seen': number;\n    'Clean pages currently in cache': number;\n    'Current eviction generation': number;\n    'Dirty pages currently in cache': number;\n    'Entries in the root page': number;\n    'Internal pages currently in cache': number;\n    'Leaf pages currently in cache': number;\n    'Maximum difference between current eviction generation when the page was last considered': number;\n    'Maximum page size seen': number;\n    'Minimum on-disk page image size seen': number;\n    'On-disk page image sizes smaller than a single allocation unit': number;\n    'Pages created in memory and never written': number;\n    'Pages currently queued for eviction': number;\n    'Pages that could not be queued for eviction': number;\n    'Refs skipped during cache traversal': number;\n    'Size of the root page': number;\n    'Total number of pages currently in cache': number;\n  } & Document;\n  compression: {\n    'compressed pages read': number;\n    'compressed pages written': number;\n    'page written failed to compress': number;\n    'page written was too small to compress': number;\n    'raw compression call failed, additional data available': number;\n    'raw compression call failed, no additional data available': number;\n    'raw compression call succeeded': number;\n  } & Document;\n  cursor: {\n    'bulk-loaded cursor-insert calls': number;\n    'create calls': number;\n    'cursor-insert key and value bytes inserted': number;\n    'cursor-remove key bytes removed': number;\n    'cursor-update value bytes updated': number;\n    'insert calls': number;\n    'next calls': number;\n    'prev calls': number;\n    'remove calls': number;\n    'reset calls': number;\n    'restarted searches': number;\n    'search calls': number;\n    'search near calls': number;\n    'truncate calls': number;\n    'update calls': number;\n  };\n  reconciliation: {\n    'dictionary matches': number;\n    'fast-path pages deleted': number;\n    'internal page key bytes discarded using suffix compression': number;\n    'internal page multi-block writes': number;\n    'internal-page overflow keys': number;\n    'leaf page key bytes discarded using prefix compression': number;\n    'leaf page multi-block writes': number;\n    'leaf-page overflow keys': number;\n    'maximum blocks required for a page': number;\n    'overflow values written': number;\n    'page checksum matches': number;\n    'page reconciliation calls': number;\n    'page reconciliation calls for eviction': number;\n    'pages deleted': number;\n  } & Document;\n}\n\ndefineAspects(CollStatsOperation, [Aspect.READ_OPERATION]);\ndefineAspects(DbStatsOperation, [Aspect.READ_OPERATION]);\n", "import { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport type { AnyBulkWriteOperation, BulkWriteOptions, BulkWriteResult } from './bulk/common';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport {\n  ListSearchIndexesCursor,\n  type ListSearchIndexesOptions\n} from './cursor/list_search_indexes_cursor';\nimport type { Db } from './db';\nimport { MongoInvalidArgumentError } from './error';\nimport type { MongoClient, PkFactory } from './mongo_client';\nimport type {\n  Filter,\n  Flatten,\n  OptionalUnlessRequiredId,\n  TODO_NODE_3286,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { BulkWriteOperation } from './operations/bulk_write';\nimport type { IndexInformationOptions } from './operations/common_functions';\nimport { CountOperation, type CountOptions } from './operations/count';\nimport { CountDocumentsOperation, type CountDocumentsOptions } from './operations/count_documents';\nimport {\n  DeleteManyOperation,\n  DeleteOneOperation,\n  type DeleteOptions,\n  type DeleteResult\n} from './operations/delete';\nimport { DistinctOperation, type DistinctOptions } from './operations/distinct';\nimport { DropCollectionOperation, type DropCollectionOptions } from './operations/drop';\nimport {\n  EstimatedDocumentCountOperation,\n  type EstimatedDocumentCountOptions\n} from './operations/estimated_document_count';\nimport { executeOperation } from './operations/execute_operation';\nimport type { FindOptions } from './operations/find';\nimport {\n  FindOneAndDeleteOperation,\n  type FindOneAndDeleteOptions,\n  FindOneAndReplaceOperation,\n  type FindOneAndReplaceOptions,\n  FindOneAndUpdateOperation,\n  type FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nimport {\n  CreateIndexesOperation,\n  type CreateIndexesOptions,\n  CreateIndexOperation,\n  DropIndexesOperation,\n  type DropIndexesOptions,\n  DropIndexOperation,\n  type IndexDescription,\n  IndexesOperation,\n  IndexExistsOperation,\n  IndexInformationOperation,\n  type IndexSpecification,\n  type ListIndexesOptions\n} from './operations/indexes';\nimport {\n  InsertManyOperation,\n  type InsertManyResult,\n  InsertOneOperation,\n  type InsertOneOptions,\n  type InsertOneResult\n} from './operations/insert';\nimport { IsCappedOperation } from './operations/is_capped';\nimport type { Hint, OperationOptions } from './operations/operation';\nimport { OptionsOperation } from './operations/options_operation';\nimport { RenameOperation, type RenameOptions } from './operations/rename';\nimport {\n  CreateSearchIndexesOperation,\n  type SearchIndexDescription\n} from './operations/search_indexes/create';\nimport { DropSearchIndexOperation } from './operations/search_indexes/drop';\nimport { UpdateSearchIndexOperation } from './operations/search_indexes/update';\nimport { type CollStats, CollStatsOperation, type CollStatsOptions } from './operations/stats';\nimport {\n  ReplaceOneOperation,\n  type ReplaceOptions,\n  UpdateManyOperation,\n  UpdateOneOperation,\n  type UpdateOptions,\n  type UpdateResult\n} from './operations/update';\nimport { ReadConcern, type ReadConcernLike } from './read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from './read_preference';\nimport {\n  checkCollectionName,\n  DEFAULT_PK_FACTORY,\n  MongoDBCollectionNamespace,\n  normalizeHintField,\n  resolveOptions\n} from './utils';\nimport { WriteConcern, type WriteConcernOptions } from './write_concern';\n\n/** @public */\nexport interface ModifyResult<TSchema = Document> {\n  value: WithId<TSchema> | null;\n  lastErrorObject?: Document;\n  ok: 0 | 1;\n}\n\n/** @public */\nexport interface CollectionOptions extends BSONSerializeOptions, WriteConcernOptions {\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n}\n\n/** @internal */\nexport interface CollectionPrivate {\n  pkFactory: PkFactory;\n  db: Db;\n  options: any;\n  namespace: MongoDBCollectionNamespace;\n  readPreference?: ReadPreference;\n  bsonOptions: BSONSerializeOptions;\n  collectionHint?: Hint;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n}\n\n/**\n * The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/find/update/delete and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const pets = client.db().collection<Pet>('pets');\n *\n * const petCursor = pets.find();\n *\n * for await (const pet of petCursor) {\n *   console.log(`${pet.name} is a ${pet.kind}!`);\n * }\n * ```\n */\nexport class Collection<TSchema extends Document = Document> {\n  /** @internal */\n  s: CollectionPrivate;\n\n  /** @internal */\n  client: MongoClient;\n\n  /**\n   * Create a new Collection instance\n   * @internal\n   */\n  constructor(db: Db, name: string, options?: CollectionOptions) {\n    checkCollectionName(name);\n\n    // Internal state\n    this.s = {\n      db,\n      options,\n      namespace: new MongoDBCollectionNamespace(db.databaseName, name),\n      pkFactory: db.options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      readPreference: ReadPreference.fromOptions(options),\n      bsonOptions: resolveBSONOptions(options, db),\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options)\n    };\n\n    this.client = db.client;\n  }\n\n  /**\n   * The name of the database this collection belongs to\n   */\n  get dbName(): string {\n    return this.s.namespace.db;\n  }\n\n  /**\n   * The name of this collection\n   */\n  get collectionName(): string {\n    return this.s.namespace.collection;\n  }\n\n  /**\n   * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n   */\n  get namespace(): string {\n    return this.fullNamespace.toString();\n  }\n\n  /**\n   *  @internal\n   *\n   * The `MongoDBNamespace` for the collection.\n   */\n  get fullNamespace(): MongoDBCollectionNamespace {\n    return this.s.namespace;\n  }\n\n  /**\n   * The current readConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readConcern(): ReadConcern | undefined {\n    if (this.s.readConcern == null) {\n      return this.s.db.readConcern;\n    }\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readPreference(): ReadPreference | undefined {\n    if (this.s.readPreference == null) {\n      return this.s.db.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  /**\n   * The current writeConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get writeConcern(): WriteConcern | undefined {\n    if (this.s.writeConcern == null) {\n      return this.s.db.writeConcern;\n    }\n    return this.s.writeConcern;\n  }\n\n  /** The current index hint for the collection */\n  get hint(): Hint | undefined {\n    return this.s.collectionHint;\n  }\n\n  set hint(v: Hint | undefined) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n\n  /**\n   * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param doc - The document to insert\n   * @param options - Optional settings for the command\n   */\n  async insertOne(\n    doc: OptionalUnlessRequiredId<TSchema>,\n    options?: InsertOneOptions\n  ): Promise<InsertOneResult<TSchema>> {\n    return executeOperation(\n      this.client,\n      new InsertOneOperation(\n        this as TODO_NODE_3286,\n        doc,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param docs - The documents to insert\n   * @param options - Optional settings for the command\n   */\n  async insertMany(\n    docs: OptionalUnlessRequiredId<TSchema>[],\n    options?: BulkWriteOptions\n  ): Promise<InsertManyResult<TSchema>> {\n    return executeOperation(\n      this.client,\n      new InsertManyOperation(\n        this as TODO_NODE_3286,\n        docs,\n        resolveOptions(this, options ?? { ordered: true })\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Perform a bulkWrite operation without a fluent API\n   *\n   * Legal operation types are\n   * - `insertOne`\n   * - `replaceOne`\n   * - `updateOne`\n   * - `updateMany`\n   * - `deleteOne`\n   * - `deleteMany`\n   *\n   * If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param operations - Bulk operations to perform\n   * @param options - Optional settings for the command\n   * @throws MongoDriverError if operations is not an array\n   */\n  async bulkWrite(\n    operations: AnyBulkWriteOperation<TSchema>[],\n    options?: BulkWriteOptions\n  ): Promise<BulkWriteResult> {\n    if (!Array.isArray(operations)) {\n      throw new MongoInvalidArgumentError('Argument \"operations\" must be an array of documents');\n    }\n\n    return executeOperation(\n      this.client,\n      new BulkWriteOperation(\n        this as TODO_NODE_3286,\n        operations as TODO_NODE_3286,\n        resolveOptions(this, options ?? { ordered: true })\n      )\n    );\n  }\n\n  /**\n   * Update a single document in a collection\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - The update operations to be applied to the document\n   * @param options - Optional settings for the command\n   */\n  async updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>,\n    options?: UpdateOptions\n  ): Promise<UpdateResult<TSchema>> {\n    return executeOperation(\n      this.client,\n      new UpdateOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Replace a document in a collection with another document\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   */\n  async replaceOne(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options?: ReplaceOptions\n  ): Promise<UpdateResult<TSchema> | Document> {\n    return executeOperation(\n      this.client,\n      new ReplaceOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      )\n    );\n  }\n\n  /**\n   * Update multiple documents in a collection\n   *\n   * @param filter - The filter used to select the documents to update\n   * @param update - The update operations to be applied to the documents\n   * @param options - Optional settings for the command\n   */\n  async updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options?: UpdateOptions\n  ): Promise<UpdateResult<TSchema>> {\n    return executeOperation(\n      this.client,\n      new UpdateManyOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Delete a document from a collection\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   */\n  async deleteOne(\n    filter: Filter<TSchema> = {},\n    options: DeleteOptions = {}\n  ): Promise<DeleteResult> {\n    return executeOperation(\n      this.client,\n      new DeleteOneOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Delete multiple documents from a collection\n   *\n   * @param filter - The filter used to select the documents to remove\n   * @param options - Optional settings for the command\n   */\n  async deleteMany(\n    filter: Filter<TSchema> = {},\n    options: DeleteOptions = {}\n  ): Promise<DeleteResult> {\n    return executeOperation(\n      this.client,\n      new DeleteManyOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Rename the collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the Db or MongoClient.\n   *\n   * @param newName - New name of of the collection.\n   * @param options - Optional settings for the command\n   */\n  async rename(newName: string, options?: RenameOptions): Promise<Collection> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return executeOperation(\n      this.client,\n      new RenameOperation(this as TODO_NODE_3286, newName, {\n        ...options,\n        readPreference: ReadPreference.PRIMARY\n      }) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async drop(options?: DropCollectionOptions): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new DropCollectionOperation(this.s.db, this.collectionName, options)\n    );\n  }\n\n  /**\n   * Fetches the first document that matches the filter\n   *\n   * @param filter - Query for find Operation\n   * @param options - Optional settings for the command\n   */\n  async findOne(): Promise<WithId<TSchema> | null>;\n  async findOne(filter: Filter<TSchema>): Promise<WithId<TSchema> | null>;\n  async findOne(filter: Filter<TSchema>, options: FindOptions): Promise<WithId<TSchema> | null>;\n\n  // allow an override of the schema.\n  async findOne<T = TSchema>(): Promise<T | null>;\n  async findOne<T = TSchema>(filter: Filter<TSchema>): Promise<T | null>;\n  async findOne<T = TSchema>(filter: Filter<TSchema>, options?: FindOptions): Promise<T | null>;\n\n  async findOne(\n    filter: Filter<TSchema> = {},\n    options: FindOptions = {}\n  ): Promise<WithId<TSchema> | null> {\n    return this.find(filter, options).limit(-1).batchSize(1).next();\n  }\n\n  /**\n   * Creates a cursor for a filter that can be used to iterate over results from MongoDB\n   *\n   * @param filter - The filter predicate. If unspecified, then all documents in the collection will match the predicate\n   */\n  find(): FindCursor<WithId<TSchema>>;\n  find(filter: Filter<TSchema>, options?: FindOptions): FindCursor<WithId<TSchema>>;\n  find<T extends Document>(filter: Filter<TSchema>, options?: FindOptions): FindCursor<T>;\n  find(filter: Filter<TSchema> = {}, options: FindOptions = {}): FindCursor<WithId<TSchema>> {\n    return new FindCursor<WithId<TSchema>>(\n      this.client,\n      this.s.namespace,\n      filter,\n      resolveOptions(this as TODO_NODE_3286, options)\n    );\n  }\n\n  /**\n   * Returns the options of the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async options(options?: OperationOptions): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new OptionsOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Returns if the collection is a capped collection\n   *\n   * @param options - Optional settings for the command\n   */\n  async isCapped(options?: OperationOptions): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new IsCappedOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection collection.\n   *\n   * @param indexSpec - The field name or index specification to create an index for\n   * @param options - Optional settings for the command\n   *\n   * @example\n   * ```ts\n   * const collection = client.db('foo').collection('bar');\n   *\n   * await collection.createIndex({ a: 1, b: -1 });\n   *\n   * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n   * await collection.createIndex([ [c, 1], [d, -1] ]);\n   *\n   * // Equivalent to { e: 1 }\n   * await collection.createIndex('e');\n   *\n   * // Equivalent to { f: 1, g: 1 }\n   * await collection.createIndex(['f', 'g'])\n   *\n   * // Equivalent to { h: 1, i: -1 }\n   * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n   *\n   * // Equivalent to { j: 1, k: -1, l: 2d }\n   * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n   * ```\n   */\n  async createIndex(\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ): Promise<string> {\n    return executeOperation(\n      this.client,\n      new CreateIndexOperation(\n        this as TODO_NODE_3286,\n        this.collectionName,\n        indexSpec,\n        resolveOptions(this, options)\n      )\n    );\n  }\n\n  /**\n   * Creates multiple indexes in the collection, this method is only supported for\n   * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n   * error.\n   *\n   * **Note**: Unlike {@link Collection#createIndex| createIndex}, this function takes in raw index specifications.\n   * Index specifications are defined {@link https://www.mongodb.com/docs/manual/reference/command/createIndexes/| here}.\n   *\n   * @param indexSpecs - An array of index specifications to be created\n   * @param options - Optional settings for the command\n   *\n   * @example\n   * ```ts\n   * const collection = client.db('foo').collection('bar');\n   * await collection.createIndexes([\n   *   // Simple index on field fizz\n   *   {\n   *     key: { fizz: 1 },\n   *   }\n   *   // wildcard index\n   *   {\n   *     key: { '$**': 1 }\n   *   },\n   *   // named index on darmok and jalad\n   *   {\n   *     key: { darmok: 1, jalad: -1 }\n   *     name: 'tanagra'\n   *   }\n   * ]);\n   * ```\n   */\n  async createIndexes(\n    indexSpecs: IndexDescription[],\n    options?: CreateIndexesOptions\n  ): Promise<string[]> {\n    return executeOperation(\n      this.client,\n      new CreateIndexesOperation(\n        this as TODO_NODE_3286,\n        this.collectionName,\n        indexSpecs,\n        resolveOptions(this, { ...options, maxTimeMS: undefined })\n      )\n    );\n  }\n\n  /**\n   * Drops an index from this collection.\n   *\n   * @param indexName - Name of the index to drop.\n   * @param options - Optional settings for the command\n   */\n  async dropIndex(indexName: string, options?: DropIndexesOptions): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new DropIndexOperation(this as TODO_NODE_3286, indexName, {\n        ...resolveOptions(this, options),\n        readPreference: ReadPreference.primary\n      })\n    );\n  }\n\n  /**\n   * Drops all indexes from this collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async dropIndexes(options?: DropIndexesOptions): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new DropIndexesOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Get the list of all indexes information for the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  listIndexes(options?: ListIndexesOptions): ListIndexesCursor {\n    return new ListIndexesCursor(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * Checks if one or more indexes exist on the collection, fails on first non-existing index\n   *\n   * @param indexes - One or more index names to check.\n   * @param options - Optional settings for the command\n   */\n  async indexExists(\n    indexes: string | string[],\n    options?: IndexInformationOptions\n  ): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new IndexExistsOperation(this as TODO_NODE_3286, indexes, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param options - Optional settings for the command\n   */\n  async indexInformation(options?: IndexInformationOptions): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new IndexInformationOperation(this.s.db, this.collectionName, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Gets an estimate of the count of documents in a collection using collection metadata.\n   * This will always run a count command on all server versions.\n   *\n   * due to an oversight in versions 5.0.0-5.0.8 of MongoDB, the count command,\n   * which estimatedDocumentCount uses in its implementation, was not included in v1 of\n   * the Stable API, and so users of the Stable API with estimatedDocumentCount are\n   * recommended to upgrade their server version to 5.0.9+ or set apiStrict: false to avoid\n   * encountering errors.\n   *\n   * @see {@link https://www.mongodb.com/docs/manual/reference/command/count/#behavior|Count: Behavior}\n   * @param options - Optional settings for the command\n   */\n  async estimatedDocumentCount(options?: EstimatedDocumentCountOptions): Promise<number> {\n    return executeOperation(\n      this.client,\n      new EstimatedDocumentCountOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Gets the number of documents matching the filter.\n   * For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   * **Note**: When migrating from {@link Collection#count| count} to {@link Collection#countDocuments| countDocuments}\n   * the following query operators must be replaced:\n   *\n   * | Operator | Replacement |\n   * | -------- | ----------- |\n   * | `$where`   | [`$expr`][1] |\n   * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n   * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n   *\n   * [1]: https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n   * [2]: https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n   * [3]: https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n   * [4]: https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   *\n   * @param filter - The filter for the count\n   * @param options - Optional settings for the command\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   */\n  async countDocuments(\n    filter: Document = {},\n    options: CountDocumentsOptions = {}\n  ): Promise<number> {\n    return executeOperation(\n      this.client,\n      new CountDocumentsOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * The distinct command returns a list of distinct values for the given key across a collection.\n   *\n   * @param key - Field of the document to find distinct values for\n   * @param filter - The filter for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings for the command\n   */\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>,\n    options: DistinctOptions\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n\n  // Embedded documents overload\n  distinct(key: string): Promise<any[]>;\n  distinct(key: string, filter: Filter<TSchema>): Promise<any[]>;\n  distinct(key: string, filter: Filter<TSchema>, options: DistinctOptions): Promise<any[]>;\n\n  async distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema> = {},\n    options: DistinctOptions = {}\n  ): Promise<any[]> {\n    return executeOperation(\n      this.client,\n      new DistinctOperation(\n        this as TODO_NODE_3286,\n        key as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options)\n      )\n    );\n  }\n\n  /**\n   * Retrieve all the indexes on the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async indexes(options?: IndexInformationOptions): Promise<Document[]> {\n    return executeOperation(\n      this.client,\n      new IndexesOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Get all the collection statistics.\n   *\n   * @deprecated the `collStats` operation will be removed in the next major release.  Please\n   * use an aggregation pipeline with the [`$collStats`](https://www.mongodb.com/docs/manual/reference/operator/aggregation/collStats/) stage instead\n   *\n   * @param options - Optional settings for the command\n   */\n  async stats(options?: CollStatsOptions): Promise<CollStats> {\n    return executeOperation(\n      this.client,\n      new CollStatsOperation(this as TODO_NODE_3286, options) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   */\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndDelete(filter: Filter<TSchema>): Promise<ModifyResult<TSchema>>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options?: FindOneAndDeleteOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return executeOperation(\n      this.client,\n      new FindOneAndDeleteOperation(\n        this as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   */\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options?: FindOneAndReplaceOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return executeOperation(\n      this.client,\n      new FindOneAndReplaceOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - Update operations to be performed on the document\n   * @param options - Optional settings for the command\n   */\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: FindOneAndUpdateOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: FindOneAndUpdateOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: FindOneAndUpdateOptions\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options?: FindOneAndUpdateOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return executeOperation(\n      this.client,\n      new FindOneAndUpdateOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the collection, needs MongoDB \\>= 2.2\n   *\n   * @param pipeline - An array of aggregation pipelines to execute\n   * @param options - Optional settings for the command\n   */\n  aggregate<T extends Document = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions\n  ): AggregationCursor<T> {\n    if (!Array.isArray(pipeline)) {\n      throw new MongoInvalidArgumentError(\n        'Argument \"pipeline\" must be an array of aggregation stages'\n      );\n    }\n\n    return new AggregationCursor(\n      this.client,\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to override the schema that may be defined for this specific collection\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   * @example\n   * By just providing the first argument I can type the change to be `ChangeStreamDocument<{ _id: number }>`\n   * ```ts\n   * collection.watch<{ _id: number }>()\n   *   .on('change', change => console.log(change._id.toFixed(4)));\n   * ```\n   *\n   * @example\n   * Passing a second argument provides a way to reflect the type changes caused by an advanced pipeline.\n   * Here, we are using a pipeline to have MongoDB filter for insert changes only and add a comment.\n   * No need start from scratch on the ChangeStreamInsertDocument type!\n   * By using an intersection we can save time and ensure defaults remain the same type!\n   * ```ts\n   * collection\n   *   .watch<Schema, ChangeStreamInsertDocument<Schema> & { comment: string }>([\n   *     { $addFields: { comment: 'big changes' } },\n   *     { $match: { operationType: 'insert' } }\n   *   ])\n   *   .on('change', change => {\n   *     change.comment.startsWith('big');\n   *     change.operationType === 'insert';\n   *     // No need to narrow in code because the generics did that for us!\n   *     expectType<Schema>(change.fullDocument);\n   *   });\n   * ```\n   *\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TLocal - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<TLocal extends Document = TSchema, TChange extends Document = ChangeStreamDocument<TLocal>>(\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ): ChangeStream<TLocal, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TLocal, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /**\n   * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n   *\n   * @throws MongoNotConnectedError\n   * @remarks\n   * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n   * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n   */\n  initializeUnorderedBulkOp(options?: BulkWriteOptions): UnorderedBulkOperation {\n    return new UnorderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n   *\n   * @throws MongoNotConnectedError\n   * @remarks\n   * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n   * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n   */\n  initializeOrderedBulkOp(options?: BulkWriteOptions): OrderedBulkOperation {\n    return new OrderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * An estimated count of matching documents in the db to a filter.\n   *\n   * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents\n   * in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments| countDocuments}.\n   * To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   *\n   * @deprecated use {@link Collection#countDocuments| countDocuments} or {@link Collection#estimatedDocumentCount| estimatedDocumentCount} instead\n   *\n   * @param filter - The filter for the count.\n   * @param options - Optional settings for the command\n   */\n  async count(filter: Filter<TSchema> = {}, options: CountOptions = {}): Promise<number> {\n    return executeOperation(\n      this.client,\n      new CountOperation(this.fullNamespace, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Returns all search indexes for the current collection.\n   *\n   * @param options - The options for the list indexes operation.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  listSearchIndexes(options?: ListSearchIndexesOptions): ListSearchIndexesCursor;\n  /**\n   * Returns all search indexes for the current collection.\n   *\n   * @param name - The name of the index to search for.  Only indexes with matching index names will be returned.\n   * @param options - The options for the list indexes operation.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  listSearchIndexes(name: string, options?: ListSearchIndexesOptions): ListSearchIndexesCursor;\n  listSearchIndexes(\n    indexNameOrOptions?: string | ListSearchIndexesOptions,\n    options?: ListSearchIndexesOptions\n  ): ListSearchIndexesCursor {\n    options =\n      typeof indexNameOrOptions === 'object' ? indexNameOrOptions : options == null ? {} : options;\n    const indexName =\n      indexNameOrOptions == null\n        ? null\n        : typeof indexNameOrOptions === 'object'\n        ? null\n        : indexNameOrOptions;\n\n    return new ListSearchIndexesCursor(this as TODO_NODE_3286, indexName, options);\n  }\n\n  /**\n   * Creates a single search index for the collection.\n   *\n   * @param description - The index description for the new search index.\n   * @returns A promise that resolves to the name of the new search index.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async createSearchIndex(description: SearchIndexDescription): Promise<string> {\n    const [index] = await this.createSearchIndexes([description]);\n    return index;\n  }\n\n  /**\n   * Creates multiple search indexes for the current collection.\n   *\n   * @param descriptions - An array of `SearchIndexDescription`s for the new search indexes.\n   * @returns A promise that resolves to an array of the newly created search index names.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   * @returns\n   */\n  async createSearchIndexes(descriptions: SearchIndexDescription[]): Promise<string[]> {\n    return executeOperation(\n      this.client,\n      new CreateSearchIndexesOperation(this as TODO_NODE_3286, descriptions)\n    );\n  }\n\n  /**\n   * Deletes a search index by index name.\n   *\n   * @param name - The name of the search index to be deleted.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async dropSearchIndex(name: string): Promise<void> {\n    return executeOperation(\n      this.client,\n      new DropSearchIndexOperation(this as TODO_NODE_3286, name)\n    );\n  }\n\n  /**\n   * Updates a search index by replacing the existing index definition with the provided definition.\n   *\n   * @param name - The name of the search index to update.\n   * @param definition - The new search index definition.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async updateSearchIndex(name: string, definition: Document): Promise<void> {\n    return executeOperation(\n      this.client,\n      new UpdateSearchIndexOperation(this as TODO_NODE_3286, name, definition)\n    );\n  }\n}\n", "import type { Document, Long, Timestamp } from '../bson';\nimport {\n  ChangeStream,\n  type ChangeStreamDocument,\n  type ChangeStreamEvents,\n  type OperationTime,\n  type ResumeToken\n} from '../change_stream';\nimport { INIT, RESPONSE } from '../constants';\nimport type { MongoClient } from '../mongo_client';\nimport type { TODO_NODE_3286 } from '../mongo_types';\nimport { AggregateOperation } from '../operations/aggregate';\nimport type { CollationOptions } from '../operations/command';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport { AbstractCursor, type AbstractCursorOptions } from './abstract_cursor';\n\n/** @internal */\nexport interface ChangeStreamCursorOptions extends AbstractCursorOptions {\n  startAtOperationTime?: OperationTime;\n  resumeAfter?: ResumeToken;\n  startAfter?: ResumeToken;\n  maxAwaitTimeMS?: number;\n  collation?: CollationOptions;\n  fullDocument?: string;\n}\n\n/** @internal */\nexport type ChangeStreamAggregateRawResult<TChange> = {\n  $clusterTime: { clusterTime: Timestamp };\n  cursor: {\n    postBatchResumeToken: ResumeToken;\n    ns: string;\n    id: number | Long;\n  } & ({ firstBatch: TChange[] } | { nextBatch: TChange[] });\n  ok: 1;\n  operationTime: Timestamp;\n};\n\n/** @internal */\nexport class ChangeStreamCursor<\n  TSchema extends Document = Document,\n  TChange extends Document = ChangeStreamDocument<TSchema>\n> extends AbstractCursor<TChange, ChangeStreamEvents> {\n  _resumeToken: ResumeToken;\n  startAtOperationTime?: OperationTime;\n  hasReceived?: boolean;\n  resumeAfter: ResumeToken;\n  startAfter: ResumeToken;\n  options: ChangeStreamCursorOptions;\n\n  postBatchResumeToken?: ResumeToken;\n  pipeline: Document[];\n\n  /**\n   * @internal\n   *\n   * used to determine change stream resumability\n   */\n  maxWireVersion: number | undefined;\n\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: ChangeStreamCursorOptions = {}\n  ) {\n    super(client, namespace, options);\n\n    this.pipeline = pipeline;\n    this.options = options;\n    this._resumeToken = null;\n    this.startAtOperationTime = options.startAtOperationTime;\n\n    if (options.startAfter) {\n      this.resumeToken = options.startAfter;\n    } else if (options.resumeAfter) {\n      this.resumeToken = options.resumeAfter;\n    }\n  }\n\n  set resumeToken(token: ResumeToken) {\n    this._resumeToken = token;\n    this.emit(ChangeStream.RESUME_TOKEN_CHANGED, token);\n  }\n\n  get resumeToken(): ResumeToken {\n    return this._resumeToken;\n  }\n\n  get resumeOptions(): ChangeStreamCursorOptions {\n    const options: ChangeStreamCursorOptions = {\n      ...this.options\n    };\n\n    for (const key of ['resumeAfter', 'startAfter', 'startAtOperationTime'] as const) {\n      delete options[key];\n    }\n\n    if (this.resumeToken != null) {\n      if (this.options.startAfter && !this.hasReceived) {\n        options.startAfter = this.resumeToken;\n      } else {\n        options.resumeAfter = this.resumeToken;\n      }\n    } else if (this.startAtOperationTime != null && maxWireVersion(this.server) >= 7) {\n      options.startAtOperationTime = this.startAtOperationTime;\n    }\n\n    return options;\n  }\n\n  cacheResumeToken(resumeToken: ResumeToken): void {\n    if (this.bufferedCount() === 0 && this.postBatchResumeToken) {\n      this.resumeToken = this.postBatchResumeToken;\n    } else {\n      this.resumeToken = resumeToken;\n    }\n    this.hasReceived = true;\n  }\n\n  _processBatch(response: ChangeStreamAggregateRawResult<TChange>): void {\n    const cursor = response.cursor;\n    if (cursor.postBatchResumeToken) {\n      this.postBatchResumeToken = response.cursor.postBatchResumeToken;\n\n      const batch =\n        'firstBatch' in response.cursor ? response.cursor.firstBatch : response.cursor.nextBatch;\n      if (batch.length === 0) {\n        this.resumeToken = cursor.postBatchResumeToken;\n      }\n    }\n  }\n\n  clone(): AbstractCursor<TChange> {\n    return new ChangeStreamCursor(this.client, this.namespace, this.pipeline, {\n      ...this.cursorOptions\n    });\n  }\n\n  _initialize(session: ClientSession, callback: Callback<ExecutionResult>): void {\n    const aggregateOperation = new AggregateOperation(this.namespace, this.pipeline, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation<TODO_NODE_3286, ChangeStreamAggregateRawResult<TChange>>(\n      session.client,\n      aggregateOperation,\n      (err, response) => {\n        if (err || response == null) {\n          return callback(err);\n        }\n\n        const server = aggregateOperation.server;\n        this.maxWireVersion = maxWireVersion(server);\n\n        if (\n          this.startAtOperationTime == null &&\n          this.resumeAfter == null &&\n          this.startAfter == null &&\n          this.maxWireVersion >= 7\n        ) {\n          this.startAtOperationTime = response.operationTime;\n        }\n\n        this._processBatch(response);\n\n        this.emit(INIT, response);\n        this.emit(RESPONSE);\n\n        // TODO: NODE-2882\n        callback(undefined, { server, session, response });\n      }\n    );\n  }\n\n  override _getMore(batchSize: number, callback: Callback): void {\n    super._getMore(batchSize, (err, response) => {\n      if (err) {\n        return callback(err);\n      }\n\n      this.maxWireVersion = maxWireVersion(this.server);\n      this._processBatch(response as TODO_NODE_3286 as ChangeStreamAggregateRawResult<TChange>);\n\n      this.emit(ChangeStream.MORE, response);\n      this.emit(ChangeStream.RESPONSE);\n      callback(err, response);\n    });\n  }\n}\n", "import type { Binary, Document } from '../bson';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, maxWireVersion } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface ListCollectionsOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Since 4.0: If true, will only return the collection name in the response, and will omit additional info */\n  nameOnly?: boolean;\n  /** Since 4.0: If true and nameOnly is true, allows a user without the required privilege (i.e. listCollections action on the database) to run the command when access control is enforced. */\n  authorizedCollections?: boolean;\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListCollectionsOperation extends CommandOperation<string[]> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListCollectionsOptions & { writeConcern?: never };\n  db: Db;\n  filter: Document;\n  nameOnly: boolean;\n  authorizedCollections: boolean;\n  batchSize?: number;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions) {\n    super(db, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.db = db;\n    this.filter = filter;\n    this.nameOnly = !!this.options.nameOnly;\n    this.authorizedCollections = !!this.options.authorizedCollections;\n\n    if (typeof this.options.batchSize === 'number') {\n      this.batchSize = this.options.batchSize;\n    }\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string[]>\n  ): void {\n    return super.executeCommand(\n      server,\n      session,\n      this.generateCommand(maxWireVersion(server)),\n      callback\n    );\n  }\n\n  /* This is here for the purpose of unit testing the final command that gets sent. */\n  generateCommand(wireVersion: number): Document {\n    const command: Document = {\n      listCollections: 1,\n      filter: this.filter,\n      cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n      nameOnly: this.nameOnly,\n      authorizedCollections: this.authorizedCollections\n    };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (wireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return command;\n  }\n}\n\n/** @public */\nexport interface CollectionInfo extends Document {\n  name: string;\n  type?: string;\n  options?: Document;\n  info?: {\n    readOnly?: false;\n    uuid?: Binary;\n  };\n  idIndex?: Document;\n}\n\ndefineAspects(ListCollectionsOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport {\n  type CollectionInfo,\n  ListCollectionsOperation,\n  type ListCollectionsOptions\n} from '../operations/list_collections';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCursor } from './abstract_cursor';\n\n/** @public */\nexport class ListCollectionsCursor<\n  T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n    | Pick<CollectionInfo, 'name' | 'type'>\n    | CollectionInfo\n> extends AbstractCursor<T> {\n  parent: Db;\n  filter: Document;\n  options?: ListCollectionsOptions;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions) {\n    super(db.client, db.s.namespace, options);\n    this.parent = db;\n    this.filter = filter;\n    this.options = options;\n  }\n\n  clone(): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor(this.parent, this.filter, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const operation = new ListCollectionsOperation(this.parent, this.filter, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation(this.parent.client, operation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: operation.server, session, response });\n    });\n  }\n}\n", "import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport type { Db } from '../db';\nimport { MongoAPIError, MongoUnexpectedServerResponseError } from '../error';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { RunCommandOperation } from '../operations/run_command';\nimport type { ReadConcernLike } from '../read_concern';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, ns } from '../utils';\nimport { AbstractCursor } from './abstract_cursor';\n\n/** @public */\nexport type RunCursorCommandOptions = {\n  readPreference?: ReadPreferenceLike;\n  session?: ClientSession;\n} & BSONSerializeOptions;\n\n/** @internal */\ntype RunCursorCommandResponse = {\n  cursor: { id: bigint | Long | number; ns: string; firstBatch: Document[] };\n  ok: 1;\n};\n\n/** @public */\nexport class RunCommandCursor extends AbstractCursor {\n  public readonly command: Readonly<Record<string, any>>;\n  public readonly getMoreOptions: {\n    comment?: any;\n    maxAwaitTimeMS?: number;\n    batchSize?: number;\n  } = {};\n\n  /**\n   * Controls the `getMore.comment` field\n   * @param comment - any BSON value\n   */\n  public setComment(comment: any): this {\n    this.getMoreOptions.comment = comment;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n   * @param maxTimeMS - the number of milliseconds to wait for new data\n   */\n  public setMaxTimeMS(maxTimeMS: number): this {\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.batchSize` field\n   * @param maxTimeMS - the number documents to return in the `nextBatch`\n   */\n  public setBatchSize(batchSize: number): this {\n    this.getMoreOptions.batchSize = batchSize;\n    return this;\n  }\n\n  /** Unsupported for RunCommandCursor */\n  public override clone(): never {\n    throw new MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n  }\n\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  public override withReadConcern(_: ReadConcernLike): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support readConcern it must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  public override addCursorFlag(_: string, __: boolean): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support cursor flags, they must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  public override maxTimeMS(_: number): never {\n    throw new MongoAPIError(\n      'maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  public override batchSize(_: number): never {\n    throw new MongoAPIError(\n      'batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()'\n    );\n  }\n\n  /** @internal */\n  private db: Db;\n\n  /** @internal */\n  constructor(db: Db, command: Document, options: RunCursorCommandOptions = {}) {\n    super(db.client, ns(db.namespace), options);\n    this.db = db;\n    this.command = Object.freeze({ ...command });\n  }\n\n  /** @internal */\n  protected _initialize(session: ClientSession, callback: Callback<ExecutionResult>) {\n    const operation = new RunCommandOperation<RunCursorCommandResponse>(this.db, this.command, {\n      ...this.cursorOptions,\n      session: session,\n      readPreference: this.cursorOptions.readPreference\n    });\n    executeOperation(this.client, operation).then(\n      response => {\n        if (response.cursor == null) {\n          callback(\n            new MongoUnexpectedServerResponseError('Expected server to respond with cursor')\n          );\n          return;\n        }\n        callback(undefined, {\n          server: operation.server,\n          session,\n          response\n        });\n      },\n      err => callback(err)\n    );\n  }\n\n  /** @internal */\n  override _getMore(_batchSize: number, callback: Callback<Document>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new GetMoreOperation(this.namespace, this.id!, this.server!, {\n      ...this.cursorOptions,\n      session: this.session,\n      ...this.getMoreOptions\n    });\n\n    executeOperation(this.client, getMoreOperation, callback);\n  }\n}\n", "import { Collection } from '../collection';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCallbackOperation, type OperationOptions } from './operation';\n\nexport interface CollectionsOptions extends OperationOptions {\n  nameOnly?: boolean;\n}\n\n/** @internal */\nexport class CollectionsOperation extends AbstractCallbackOperation<Collection[]> {\n  override options: CollectionsOptions;\n  db: Db;\n\n  constructor(db: Db, options: CollectionsOptions) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Collection[]>\n  ): void {\n    // Let's get the collection names\n    this.db\n      .listCollections(\n        {},\n        { ...this.options, nameOnly: true, readPreference: this.readPreference, session }\n      )\n      .toArray()\n      .then(\n        documents => {\n          const collections = [];\n          for (const { name } of documents) {\n            if (!name.includes('$')) {\n              // Filter collections removing any illegal ones\n              collections.push(new Collection(this.db, name, this.db.s.options));\n            }\n          }\n          // Return the collection objects\n          callback(undefined, collections);\n        },\n        error => callback(error)\n      );\n  }\n}\n", "import type { Document } from '../bson';\nimport {\n  MIN_SUPPORTED_QE_SERVER_VERSION,\n  MIN_SUPPORTED_QE_WIRE_VERSION\n} from '../cmap/wire_protocol/constants';\nimport { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoCompatibilityError } from '../error';\nimport type { PkFactory } from '../mongo_client';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { CreateIndexOperation } from './indexes';\nimport { Aspect, defineAspects } from './operation';\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern',\n  'raw',\n  'fieldsAsRaw',\n  'useBigInt64',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bsonRegExp',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'enableUtf8Validation'\n]);\n\n/** @public\n * Configuration options for timeseries collections\n * @see https://www.mongodb.com/docs/manual/core/timeseries-collections/\n */\nexport interface TimeSeriesCollectionOptions extends Document {\n  timeField: string;\n  metaField?: string;\n  granularity?: 'seconds' | 'minutes' | 'hours' | string;\n  bucketMaxSpanSeconds?: number;\n  bucketRoundingSeconds?: number;\n}\n\n/** @public\n * Configuration options for clustered collections\n * @see https://www.mongodb.com/docs/manual/core/clustered-collections/\n */\nexport interface ClusteredCollectionOptions extends Document {\n  name?: string;\n  key: Document;\n  unique: boolean;\n}\n\n/** @public */\nexport interface CreateCollectionOptions extends CommandOperationOptions {\n  /** Create a capped collection */\n  capped?: boolean;\n  /** @deprecated Create an index on the _id field of the document. This option is deprecated in MongoDB 3.2+ and will be removed once no longer supported by the server. */\n  autoIndexId?: boolean;\n  /** The size of the capped collection in bytes */\n  size?: number;\n  /** The maximum number of documents in the capped collection */\n  max?: number;\n  /** Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag */\n  flags?: number;\n  /** Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection */\n  storageEngine?: Document;\n  /** Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation */\n  validator?: Document;\n  /** Determines how strictly MongoDB applies the validation rules to existing documents during an update */\n  validationLevel?: string;\n  /** Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted */\n  validationAction?: string;\n  /** Allows users to specify a default configuration for indexes when creating a collection */\n  indexOptionDefaults?: Document;\n  /** The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view (i.e., does not include the database name and implies the same database as the view to create) */\n  viewOn?: string;\n  /** An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view */\n  pipeline?: Document[];\n  /** A primary key factory function for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** A document specifying configuration options for timeseries collections. */\n  timeseries?: TimeSeriesCollectionOptions;\n  /** A document specifying configuration options for clustered collections. For MongoDB 5.3 and above. */\n  clusteredIndex?: ClusteredCollectionOptions;\n  /** The number of seconds after which a document in a timeseries or clustered collection expires. */\n  expireAfterSeconds?: number;\n  /** @experimental */\n  encryptedFields?: Document;\n  /**\n   * If set, enables pre-update and post-update document events to be included for any\n   * change streams that listen on this collection.\n   */\n  changeStreamPreAndPostImages?: { enabled: boolean };\n}\n\n/* @internal */\nconst INVALID_QE_VERSION =\n  'Driver support of Queryable Encryption is incompatible with server. Upgrade server to use Queryable Encryption.';\n\n/** @internal */\nexport class CreateCollectionOperation extends CommandOperation<Collection> {\n  override options: CreateCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: CreateCollectionOptions = {}) {\n    super(db, options);\n\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Collection>\n  ): void {\n    (async () => {\n      const db = this.db;\n      const name = this.name;\n      const options = this.options;\n\n      const encryptedFields: Document | undefined =\n        options.encryptedFields ??\n        db.client.options.autoEncryption?.encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n\n      if (encryptedFields) {\n        // Creating a QE collection required min server of 7.0.0\n        // TODO(NODE-5353): Get wire version information from connection.\n        if (\n          !server.loadBalanced &&\n          server.description.maxWireVersion < MIN_SUPPORTED_QE_WIRE_VERSION\n        ) {\n          throw new MongoCompatibilityError(\n            `${INVALID_QE_VERSION} The minimum server version required is ${MIN_SUPPORTED_QE_SERVER_VERSION}`\n          );\n        }\n        // Create auxilliary collections for queryable encryption support.\n        const escCollection = encryptedFields.escCollection ?? `enxcol_.${name}.esc`;\n        const ecocCollection = encryptedFields.ecocCollection ?? `enxcol_.${name}.ecoc`;\n\n        for (const collectionName of [escCollection, ecocCollection]) {\n          const createOp = new CreateCollectionOperation(db, collectionName, {\n            clusteredIndex: {\n              key: { _id: 1 },\n              unique: true\n            }\n          });\n          await createOp.executeWithoutEncryptedFieldsCheck(server, session);\n        }\n\n        if (!options.encryptedFields) {\n          this.options = { ...this.options, encryptedFields };\n        }\n      }\n\n      const coll = await this.executeWithoutEncryptedFieldsCheck(server, session);\n\n      if (encryptedFields) {\n        // Create the required index for queryable encryption support.\n        const createIndexOp = new CreateIndexOperation(db, name, { __safeContent__: 1 }, {});\n        await createIndexOp.execute(server, session);\n      }\n\n      return coll;\n    })().then(\n      coll => callback(undefined, coll),\n      err => callback(err)\n    );\n  }\n\n  private executeWithoutEncryptedFieldsCheck(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<Collection> {\n    return new Promise<Collection>((resolve, reject) => {\n      const db = this.db;\n      const name = this.name;\n      const options = this.options;\n\n      const done: Callback = err => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(new Collection(db, name, options));\n      };\n\n      const cmd: Document = { create: name };\n      for (const n in options) {\n        if (\n          (options as any)[n] != null &&\n          typeof (options as any)[n] !== 'function' &&\n          !ILLEGAL_COMMAND_FIELDS.has(n)\n        ) {\n          cmd[n] = (options as any)[n];\n        }\n      }\n\n      // otherwise just execute the command\n      super.executeCommand(server, session, cmd, done);\n    });\n  }\n}\n\ndefineAspects(CreateCollectionOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Db } from '../db';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\n/** @public */\nexport type ProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class ProfilingLevelOperation extends CommandOperation<string> {\n  override options: ProfilingLevelOptions;\n\n  constructor(db: Db, options: ProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string>\n  ): void {\n    super.executeCommand(server, session, { profile: -1 }, (err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(undefined, 'off');\n        if (was === 1) return callback(undefined, 'slow_only');\n        if (was === 2) return callback(undefined, 'all');\n        // TODO(NODE-3483)\n        return callback(new MongoRuntimeError(`Illegal profiling level value ${was}`));\n      } else {\n        // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n        err != null ? callback(err) : callback(new MongoRuntimeError('Error with profile command'));\n      }\n    });\n  }\n}\n", "import type { Db } from '../db';\nimport { MongoInvalidArgumentError, MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { enumToString } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n\n/** @public */\nexport const ProfilingLevel = Object.freeze({\n  off: 'off',\n  slowOnly: 'slow_only',\n  all: 'all'\n} as const);\n\n/** @public */\nexport type ProfilingLevel = (typeof ProfilingLevel)[keyof typeof ProfilingLevel];\n\n/** @public */\nexport type SetProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class SetProfilingLevelOperation extends CommandOperation<ProfilingLevel> {\n  override options: SetProfilingLevelOptions;\n  level: ProfilingLevel;\n  profile: 0 | 1 | 2;\n\n  constructor(db: Db, level: ProfilingLevel, options: SetProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n    switch (level) {\n      case ProfilingLevel.off:\n        this.profile = 0;\n        break;\n      case ProfilingLevel.slowOnly:\n        this.profile = 1;\n        break;\n      case ProfilingLevel.all:\n        this.profile = 2;\n        break;\n      default:\n        this.profile = 0;\n        break;\n    }\n\n    this.level = level;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<ProfilingLevel>\n  ): void {\n    const level = this.level;\n\n    if (!levelValues.has(level)) {\n      return callback(\n        new MongoInvalidArgumentError(\n          `Profiling level must be one of \"${enumToString(ProfilingLevel)}\"`\n        )\n      );\n    }\n\n    // TODO(NODE-3483): Determine error to put here\n    super.executeCommand(server, session, { profile: this.profile }, (err, doc) => {\n      if (err == null && doc.ok === 1) return callback(undefined, level);\n      return err != null\n        ? callback(err)\n        : callback(new MongoRuntimeError('Error with profile command'));\n    });\n  }\n}\n", "import { Admin } from './admin';\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport { Collection, type CollectionOptions } from './collection';\nimport * as CONSTANTS from './constants';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { RunCommandCursor, type RunCursorCommandOptions } from './cursor/run_command_cursor';\nimport { MongoAPIError, MongoInvalidArgumentError } from './error';\nimport type { MongoClient, PkFactory } from './mongo_client';\nimport type { TODO_NODE_3286 } from './mongo_types';\nimport { AddUserOperation, type AddUserOptions } from './operations/add_user';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { CollectionsOperation } from './operations/collections';\nimport type { IndexInformationOptions } from './operations/common_functions';\nimport {\n  CreateCollectionOperation,\n  type CreateCollectionOptions\n} from './operations/create_collection';\nimport {\n  DropCollectionOperation,\n  type DropCollectionOptions,\n  DropDatabaseOperation,\n  type DropDatabaseOptions\n} from './operations/drop';\nimport { executeOperation } from './operations/execute_operation';\nimport {\n  type CreateIndexesOptions,\n  CreateIndexOperation,\n  IndexInformationOperation,\n  type IndexSpecification\n} from './operations/indexes';\nimport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nimport { ProfilingLevelOperation, type ProfilingLevelOptions } from './operations/profiling_level';\nimport { RemoveUserOperation, type RemoveUserOptions } from './operations/remove_user';\nimport { RenameOperation, type RenameOptions } from './operations/rename';\nimport { RunCommandOperation, type RunCommandOptions } from './operations/run_command';\nimport {\n  type ProfilingLevel,\n  SetProfilingLevelOperation,\n  type SetProfilingLevelOptions\n} from './operations/set_profiling_level';\nimport { DbStatsOperation, type DbStatsOptions } from './operations/stats';\nimport { ReadConcern } from './read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from './read_preference';\nimport { DEFAULT_PK_FACTORY, filterOptions, MongoDBNamespace, resolveOptions } from './utils';\nimport { WriteConcern, type WriteConcernOptions } from './write_concern';\n\n// Allowed parameters\nconst DB_OPTIONS_ALLOW_LIST = [\n  'writeConcern',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'authSource',\n  'ignoreUndefined',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'useBigInt64',\n  'promoteBuffers',\n  'promoteLongs',\n  'bsonRegExp',\n  'enableUtf8Validation',\n  'promoteValues',\n  'compression',\n  'retryWrites'\n];\n\n/** @internal */\nexport interface DbPrivate {\n  options?: DbOptions;\n  readPreference?: ReadPreference;\n  pkFactory: PkFactory;\n  readConcern?: ReadConcern;\n  bsonOptions: BSONSerializeOptions;\n  writeConcern?: WriteConcern;\n  namespace: MongoDBNamespace;\n}\n\n/** @public */\nexport interface DbOptions extends BSONSerializeOptions, WriteConcernOptions {\n  /** If the database authentication is dependent on another databaseName. */\n  authSource?: string;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n  /** A primary key factory object for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcern;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n}\n\n/**\n * The **Db** class is a class that represents a MongoDB Database.\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const db = client.db();\n *\n * // Create a collection that validates our union\n * await db.createCollection<Pet>('pets', {\n *   validator: { $expr: { $in: ['$kind', ['dog', 'cat', 'fish']] } }\n * })\n * ```\n */\nexport class Db {\n  /** @internal */\n  s: DbPrivate;\n\n  /** @internal */\n  readonly client: MongoClient;\n\n  public static SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\n  public static SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\n  public static SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\n  public static SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\n  public static SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\n  public static SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n\n  /**\n   * Creates a new Db instance\n   *\n   * @param client - The MongoClient for the database.\n   * @param databaseName - The name of the database this instance represents.\n   * @param options - Optional settings for Db construction\n   */\n  constructor(client: MongoClient, databaseName: string, options?: DbOptions) {\n    options = options ?? {};\n\n    // Filter the options\n    options = filterOptions(options, DB_OPTIONS_ALLOW_LIST);\n\n    // Ensure we have a valid db name\n    validateDatabaseName(databaseName);\n\n    // Internal state of the db object\n    this.s = {\n      // Options\n      options,\n      // Unpack read preference\n      readPreference: ReadPreference.fromOptions(options),\n      // Merge bson options\n      bsonOptions: resolveBSONOptions(options, client),\n      // Set up the primary key factory or fallback to ObjectId\n      pkFactory: options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      // ReadConcern\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options),\n      // Namespace\n      namespace: new MongoDBNamespace(databaseName)\n    };\n\n    this.client = client;\n  }\n\n  get databaseName(): string {\n    return this.s.namespace.db;\n  }\n\n  // Options\n  get options(): DbOptions | undefined {\n    return this.s.options;\n  }\n\n  /**\n   * Check if a secondary can be used (because the read preference is *not* set to primary)\n   */\n  get secondaryOk(): boolean {\n    return this.s.readPreference?.preference !== 'primary' || false;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the Db. If not explicitly defined for\n   * this Db, will be inherited from the parent MongoClient\n   */\n  get readPreference(): ReadPreference {\n    if (this.s.readPreference == null) {\n      return this.client.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  // get the write Concern\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get namespace(): string {\n    return this.s.namespace.toString();\n  }\n\n  /**\n   * Create a new collection on a server with the specified options. Use this to create capped collections.\n   * More information about command options available at https://www.mongodb.com/docs/manual/reference/command/create/\n   *\n   * @param name - The name of the collection to create\n   * @param options - Optional settings for the command\n   */\n  async createCollection<TSchema extends Document = Document>(\n    name: string,\n    options?: CreateCollectionOptions\n  ): Promise<Collection<TSchema>> {\n    return executeOperation(\n      this.client,\n      new CreateCollectionOperation(this, name, resolveOptions(this, options)) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Execute a command\n   *\n   * @remarks\n   * This command does not inherit options from the MongoClient.\n   *\n   * The driver will ensure the following fields are attached to the command sent to the server:\n   * - `lsid` - sourced from an implicit session or options.session\n   * - `$readPreference` - defaults to primary or can be configured by options.readPreference\n   * - `$db` - sourced from the name of this database\n   *\n   * If the client has a serverApi setting:\n   * - `apiVersion`\n   * - `apiStrict`\n   * - `apiDeprecationErrors`\n   *\n   * When in a transaction:\n   * - `readConcern` - sourced from readConcern set on the TransactionOptions\n   * - `writeConcern` - sourced from writeConcern set on the TransactionOptions\n   *\n   * Attaching any of the above fields to the command will have no effect as the driver will overwrite the value.\n   *\n   * @param command - The command to run\n   * @param options - Optional settings for the command\n   */\n  async command(command: Document, options?: RunCommandOptions): Promise<Document> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return executeOperation(this.client, new RunCommandOperation(this, command, options));\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the database, needs MongoDB \\>= 3.6\n   *\n   * @param pipeline - An array of aggregation stages to be executed\n   * @param options - Optional settings for the command\n   */\n  aggregate<T extends Document = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions\n  ): AggregationCursor<T> {\n    return new AggregationCursor(\n      this.client,\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /** Return the Admin db instance */\n  admin(): Admin {\n    return new Admin(this);\n  }\n\n  /**\n   * Returns a reference to a MongoDB Collection. If it does not exist it will be created implicitly.\n   *\n   * @param name - the collection name we wish to access.\n   * @returns return the new Collection instance\n   */\n  collection<TSchema extends Document = Document>(\n    name: string,\n    options: CollectionOptions = {}\n  ): Collection<TSchema> {\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('The callback form of this helper has been removed.');\n    }\n    return new Collection<TSchema>(this, name, resolveOptions(this, options));\n  }\n\n  /**\n   * Get all the db statistics.\n   *\n   * @param options - Optional settings for the command\n   */\n  async stats(options?: DbStatsOptions): Promise<Document> {\n    return executeOperation(this.client, new DbStatsOperation(this, resolveOptions(this, options)));\n  }\n\n  /**\n   * List all collections of this database with optional filter\n   *\n   * @param filter - Query to filter collections by\n   * @param options - Optional settings for the command\n   */\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: true }\n  ): ListCollectionsCursor<Pick<CollectionInfo, 'name' | 'type'>>;\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: false }\n  ): ListCollectionsCursor<CollectionInfo>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(filter?: Document, options?: ListCollectionsOptions): ListCollectionsCursor<T>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(filter: Document = {}, options: ListCollectionsOptions = {}): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor<T>(this, filter, resolveOptions(this, options));\n  }\n\n  /**\n   * Rename a collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the MongoClient.\n   *\n   * @param fromCollection - Name of current collection to rename\n   * @param toCollection - New name of of the collection\n   * @param options - Optional settings for the command\n   */\n  async renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    options?: RenameOptions\n  ): Promise<Collection<TSchema>> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return executeOperation(\n      this.client,\n      new RenameOperation(\n        this.collection<TSchema>(fromCollection) as TODO_NODE_3286,\n        toCollection,\n        { ...options, new_collection: true, readPreference: ReadPreference.primary }\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param name - Name of collection to drop\n   * @param options - Optional settings for the command\n   */\n  async dropCollection(name: string, options?: DropCollectionOptions): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new DropCollectionOperation(this, name, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Drop a database, removing it permanently from the server.\n   *\n   * @param options - Optional settings for the command\n   */\n  async dropDatabase(options?: DropDatabaseOptions): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new DropDatabaseOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Fetch all collections for the current db.\n   *\n   * @param options - Optional settings for the command\n   */\n  async collections(options?: ListCollectionsOptions): Promise<Collection[]> {\n    return executeOperation(\n      this.client,\n      new CollectionsOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection.\n   *\n   * @param name - Name of the collection to create the index on.\n   * @param indexSpec - Specify the field to index, or an index specification\n   * @param options - Optional settings for the command\n   */\n  async createIndex(\n    name: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ): Promise<string> {\n    return executeOperation(\n      this.client,\n      new CreateIndexOperation(this, name, indexSpec, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Add a user to the database\n   *\n   * @param username - The username for the new user\n   * @param passwordOrOptions - An optional password for the new user, or the options for the command\n   * @param options - Optional settings for the command\n   * @deprecated Use the createUser command in `db.command()` instead.\n   * @see https://www.mongodb.com/docs/manual/reference/command/createUser/\n   */\n  async addUser(\n    username: string,\n    passwordOrOptions?: string | AddUserOptions,\n    options?: AddUserOptions\n  ): Promise<Document> {\n    options =\n      options != null && typeof options === 'object'\n        ? options\n        : passwordOrOptions != null && typeof passwordOrOptions === 'object'\n        ? passwordOrOptions\n        : undefined;\n    const password = typeof passwordOrOptions === 'string' ? passwordOrOptions : undefined;\n    return executeOperation(\n      this.client,\n      new AddUserOperation(this, username, password, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   */\n  async removeUser(username: string, options?: RemoveUserOptions): Promise<boolean> {\n    return executeOperation(\n      this.client,\n      new RemoveUserOperation(this, username, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Set the current profiling level of MongoDB\n   *\n   * @param level - The new profiling level (off, slow_only, all).\n   * @param options - Optional settings for the command\n   */\n  async setProfilingLevel(\n    level: ProfilingLevel,\n    options?: SetProfilingLevelOptions\n  ): Promise<ProfilingLevel> {\n    return executeOperation(\n      this.client,\n      new SetProfilingLevelOperation(this, level, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Retrieve the current profiling Level for MongoDB\n   *\n   * @param options - Optional settings for the command\n   */\n  async profilingLevel(options?: ProfilingLevelOptions): Promise<string> {\n    return executeOperation(\n      this.client,\n      new ProfilingLevelOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param name - The name of the collection.\n   * @param options - Optional settings for the command\n   */\n  async indexInformation(name: string, options?: IndexInformationOptions): Promise<Document> {\n    return executeOperation(\n      this.client,\n      new IndexInformationOperation(this, name, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this database. Will ignore all\n   * changes to system collections.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to provide the schema that may be defined for all the collections within this database\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   *\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TSchema - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<\n    TSchema extends Document = Document,\n    TChange extends Document = ChangeStreamDocument<TSchema>\n  >(pipeline: Document[] = [], options: ChangeStreamOptions = {}): ChangeStream<TSchema, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /**\n   * A low level cursor API providing basic driver functionality:\n   * - ClientSession management\n   * - ReadPreference for server selection\n   * - Running getMores automatically when a local batch is exhausted\n   *\n   * @param command - The command that will start a cursor on the server.\n   * @param options - Configurations for running the command, bson options will apply to getMores\n   */\n  runCursorCommand(command: Document, options?: RunCursorCommandOptions): RunCommandCursor {\n    return new RunCommandCursor(this, command, options);\n  }\n}\n\n// TODO(NODE-3484): Refactor into MongoDBNamespace\n// Validate the database name\nfunction validateDatabaseName(databaseName: string) {\n  if (typeof databaseName !== 'string')\n    throw new MongoInvalidArgumentError('Database name must be a string');\n  if (databaseName.length === 0)\n    throw new MongoInvalidArgumentError('Database name cannot be the empty string');\n  if (databaseName === '$external') return;\n\n  const invalidChars = [' ', '.', '$', '/', '\\\\'];\n  for (let i = 0; i < invalidChars.length; i++) {\n    if (databaseName.indexOf(invalidChars[i]) !== -1)\n      throw new MongoAPIError(`database names cannot contain the character '${invalidChars[i]}'`);\n  }\n}\n", "module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.path = new Uint16Array(4)\n  this.pages = new Array(32768)\n  this.maxPages = this.pages.length\n  this.level = 0\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n  this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype._array = function (i, noAllocate) {\n  if (i >= this.maxPages) {\n    if (noAllocate) return\n    grow(this, i)\n  }\n\n  factor(i, this.path)\n\n  var arr = this.pages\n\n  for (var j = this.level; j > 0; j--) {\n    var p = this.path[j]\n    var next = arr[p]\n\n    if (!next) {\n      if (noAllocate) return\n      next = arr[p] = new Array(32768)\n    }\n\n    arr = next\n  }\n\n  return arr\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  var arr = this._array(i, noAllocate)\n  var first = this.path[0]\n  var page = arr && arr[first]\n\n  if (!page && !noAllocate) {\n    page = arr[first] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  var arr = this._array(i, false)\n  var first = this.path[0]\n\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf || (this.zeros && buf.equals && buf.equals(this.zeros))) {\n    arr[first] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = arr[first]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else arr[first] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n  var ptr = 0\n\n  while (ptr < list.length) {\n    var arr = this._array(ptr, true)\n    for (var i = 0; i < 32768 && ptr < list.length; i++) {\n      list[ptr++] = (arr && arr[i]) ? arr[i].buffer : empty\n    }\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (pager, index) {\n  while (pager.maxPages < index) {\n    var old = pager.pages\n    pager.pages = new Array(32768)\n    pager.pages[0] = old\n    pager.level++\n    pager.maxPages *= 32768\n  }\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n\nfunction factor (n, out) {\n  n = (n - (out[0] = (n & 32767))) / 32768\n  n = (n - (out[1] = (n & 32767))) / 32768\n  out[3] = ((n - (out[2] = (n & 32767))) / 32768) & 32767\n}\n", "var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n", "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\n/* eslint-disable-next-line security/detect-non-literal-fs-filename */\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\n/**\n * Loads each code points sequence from buffer.\n * @returns {bitfield}\n */\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n};\n", "'use strict';\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points');\n\nmodule.exports = saslprep;\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing;\n\n// utils\nconst getCodePoint = character => character.codePointAt(0);\nconst first = x => x[0];\nconst last = x => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  );\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    );\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(character =>\n    bidirectional_r_al.get(character)\n  );\n\n  const hasBidiL = normalized_map.some(character =>\n    bidirectional_l.get(character)\n  );\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(\n    getCodePoint(first(normalized_input))\n  );\n  const isLastBidiRAL = bidirectional_r_al.get(\n    getCodePoint(last(normalized_input))\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  return normalized_input;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\nimport type { Document } from './bson';\nimport type { AWSCredentials } from './cmap/auth/mongodb_aws';\nimport type { ProxyOptions } from './cmap/connection';\nimport { MongoMissingDependencyError } from './error';\nimport type { MongoClient } from './mongo_client';\nimport type { Callback } from './utils';\n\nfunction makeErrorModule(error: any) {\n  const props = error ? { kModuleError: error } : {};\n  return new Proxy(props, {\n    get: (_: any, key: any) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexport let Kerberos: typeof import('kerberos') | { kModuleError: MongoMissingDependencyError } =\n  makeErrorModule(\n    new MongoMissingDependencyError(\n      'Optional module `kerberos` not found. Please install it to enable kerberos authentication'\n    )\n  );\n\nexport function getKerberos(): typeof Kerberos | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    Kerberos = require('kerberos');\n    return Kerberos;\n  } catch {\n    return Kerberos;\n  }\n}\n\nexport interface KerberosClient {\n  step(challenge: string): Promise<string>;\n  step(challenge: string, callback: Callback<string>): void;\n  wrap(challenge: string, options: { user: string }): Promise<string>;\n  wrap(challenge: string, options: { user: string }, callback: Callback<string>): void;\n  unwrap(challenge: string): Promise<string>;\n  unwrap(challenge: string, callback: Callback<string>): void;\n}\n\ntype ZStandardLib = {\n  /**\n   * Compress using zstd.\n   * @param buf - Buffer to be compressed.\n   */\n  compress(buf: Buffer, level?: number): Promise<Buffer>;\n\n  /**\n   * Decompress using zstd.\n   */\n  decompress(buf: Buffer): Promise<Buffer>;\n};\n\nexport let ZStandard: ZStandardLib | { kModuleError: MongoMissingDependencyError } =\n  makeErrorModule(\n    new MongoMissingDependencyError(\n      'Optional module `@mongodb-js/zstd` not found. Please install it to enable zstd compression'\n    )\n  );\n\nexport function getZstdLibrary(): typeof ZStandard | { kModuleError: MongoMissingDependencyError } {\n  try {\n    ZStandard = require('@mongodb-js/zstd');\n    return ZStandard;\n  } catch {\n    return ZStandard;\n  }\n}\n\ntype CredentialProvider = {\n  fromNodeProviderChain(this: void): () => Promise<AWSCredentials>;\n};\n\nexport function getAwsCredentialProvider():\n  | CredentialProvider\n  | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    const credentialProvider = require('@aws-sdk/credential-providers');\n    return credentialProvider;\n  } catch {\n    return makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `@aws-sdk/credential-providers` not found.' +\n          ' Please install it to enable getting aws credentials via the official sdk.'\n      )\n    );\n  }\n}\n\n/** @internal */\nexport type SnappyLib = {\n  /**\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   */\n  compress(buf: Buffer): Promise<Buffer>;\n\n  /**\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   */\n  uncompress(buf: Buffer, opt: { asBuffer: true }): Promise<Buffer>;\n};\n\nexport function getSnappy(): SnappyLib | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    const value = require('snappy');\n    return value;\n  } catch (cause) {\n    const kModuleError = new MongoMissingDependencyError(\n      'Optional module `snappy` not found. Please install it to enable snappy compression',\n      { cause }\n    );\n    return { kModuleError };\n  }\n}\n\nexport let saslprep: typeof import('saslprep') | { kModuleError: MongoMissingDependencyError } =\n  makeErrorModule(\n    new MongoMissingDependencyError(\n      'Optional module `saslprep` not found.' +\n        ' Please install it to enable Stringprep Profile for User Names and Passwords'\n    )\n  );\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  saslprep = require('saslprep');\n} catch {} // eslint-disable-line\n\ninterface AWS4 {\n  /**\n   * Created these inline types to better assert future usage of this API\n   * @param options - options for request\n   * @param credentials - AWS credential details, sessionToken should be omitted entirely if its false-y\n   */\n  sign(\n    this: void,\n    options: {\n      path: '/';\n      body: string;\n      host: string;\n      method: 'POST';\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded';\n        'Content-Length': number;\n        'X-MongoDB-Server-Nonce': string;\n        'X-MongoDB-GS2-CB-Flag': 'n';\n      };\n      service: string;\n      region: string;\n    },\n    credentials:\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n          sessionToken: string;\n        }\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n        }\n      | undefined\n  ): {\n    headers: {\n      Authorization: string;\n      'X-Amz-Date': string;\n    };\n  };\n}\n\nexport let aws4: AWS4 | { kModuleError: MongoMissingDependencyError } = makeErrorModule(\n  new MongoMissingDependencyError(\n    'Optional module `aws4` not found. Please install it to enable AWS authentication'\n  )\n);\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  aws4 = require('aws4');\n} catch {} // eslint-disable-line\n\n/** @public */\nexport const AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n} as const);\n\n/** @public */\nexport type AutoEncryptionLoggerLevel =\n  (typeof AutoEncryptionLoggerLevel)[keyof typeof AutoEncryptionLoggerLevel];\n\n/** @public */\nexport interface AutoEncryptionTlsOptions {\n  /**\n   * Specifies the location of a local .pem file that contains\n   * either the client's TLS/SSL certificate and key or only the\n   * client's TLS/SSL key when tlsCertificateFile is used to\n   * provide the certificate.\n   */\n  tlsCertificateKeyFile?: string;\n  /**\n   * Specifies the password to de-crypt the tlsCertificateKeyFile.\n   */\n  tlsCertificateKeyFilePassword?: string;\n  /**\n   * Specifies the location of a local .pem file that contains the\n   * root certificate chain from the Certificate Authority.\n   * This file is used to validate the certificate presented by the\n   * KMS provider.\n   */\n  tlsCAFile?: string;\n}\n\n/** @public */\nexport interface AutoEncryptionOptions {\n  /** @internal client for metadata lookups */\n  metadataClient?: MongoClient;\n  /** A `MongoClient` used to fetch keys from a key vault */\n  keyVaultClient?: MongoClient;\n  /** The namespace where keys are stored in the key vault */\n  keyVaultNamespace?: string;\n  /** Configuration options that are used by specific KMS providers during key generation, encryption, and decryption. */\n  kmsProviders?: {\n    /** Configuration options for using 'aws' as your KMS provider */\n    aws?:\n      | {\n          /** The access key used for the AWS KMS provider */\n          accessKeyId: string;\n          /** The secret access key used for the AWS KMS provider */\n          secretAccessKey: string;\n          /**\n           * An optional AWS session token that will be used as the\n           * X-Amz-Security-Token header for AWS requests.\n           */\n          sessionToken?: string;\n        }\n      | Record<string, never>;\n    /** Configuration options for using 'local' as your KMS provider */\n    local?: {\n      /**\n       * The master key used to encrypt/decrypt data keys.\n       * A 96-byte long Buffer or base64 encoded string.\n       */\n      key: Buffer | string;\n    };\n    /** Configuration options for using 'azure' as your KMS provider */\n    azure?:\n      | {\n          /** The tenant ID identifies the organization for the account */\n          tenantId: string;\n          /** The client ID to authenticate a registered application */\n          clientId: string;\n          /** The client secret to authenticate a registered application */\n          clientSecret: string;\n          /**\n           * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n           * This is optional, and only needed if customer is using a non-commercial Azure instance\n           * (e.g. a government or China account, which use different URLs).\n           * Defaults to \"login.microsoftonline.com\"\n           */\n          identityPlatformEndpoint?: string | undefined;\n        }\n      | {\n          /**\n           * If present, an access token to authenticate with Azure.\n           */\n          accessToken: string;\n        }\n      | Record<string, never>;\n    /** Configuration options for using 'gcp' as your KMS provider */\n    gcp?:\n      | {\n          /** The service account email to authenticate */\n          email: string;\n          /** A PKCS#8 encrypted key. This can either be a base64 string or a binary representation */\n          privateKey: string | Buffer;\n          /**\n           * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n           * Defaults to \"oauth2.googleapis.com\"\n           */\n          endpoint?: string | undefined;\n        }\n      | {\n          /**\n           * If present, an access token to authenticate with GCP.\n           */\n          accessToken: string;\n        }\n      | Record<string, never>;\n    /**\n     * Configuration options for using 'kmip' as your KMS provider\n     */\n    kmip?: {\n      /**\n       * The output endpoint string.\n       * The endpoint consists of a hostname and port separated by a colon.\n       * E.g. \"example.com:123\". A port is always present.\n       */\n      endpoint?: string;\n    };\n  };\n  /**\n   * A map of namespaces to a local JSON schema for encryption\n   *\n   * **NOTE**: Supplying options.schemaMap provides more security than relying on JSON Schemas obtained from the server.\n   * It protects against a malicious server advertising a false JSON Schema, which could trick the client into sending decrypted data that should be encrypted.\n   * Schemas supplied in the schemaMap only apply to configuring automatic encryption for Client-Side Field Level Encryption.\n   * Other validation rules in the JSON schema will not be enforced by the driver and will result in an error.\n   */\n  schemaMap?: Document;\n  /** Supply a schema for the encrypted fields in the document  */\n  encryptedFieldsMap?: Document;\n  /** Allows the user to bypass auto encryption, maintaining implicit decryption */\n  bypassAutoEncryption?: boolean;\n  /** Allows users to bypass query analysis */\n  bypassQueryAnalysis?: boolean;\n  options?: {\n    /** An optional hook to catch logging messages from the underlying encryption engine */\n    logger?: (level: AutoEncryptionLoggerLevel, message: string) => void;\n  };\n  extraOptions?: {\n    /**\n     * A local process the driver communicates with to determine how to encrypt values in a command.\n     * Defaults to \"mongodb://%2Fvar%2Fmongocryptd.sock\" if domain sockets are available or \"mongodb://localhost:27020\" otherwise\n     */\n    mongocryptdURI?: string;\n    /** If true, autoEncryption will not attempt to spawn a mongocryptd before connecting  */\n    mongocryptdBypassSpawn?: boolean;\n    /** The path to the mongocryptd executable on the system */\n    mongocryptdSpawnPath?: string;\n    /** Command line arguments to use when auto-spawning a mongocryptd */\n    mongocryptdSpawnArgs?: string[];\n    /**\n     * Full path to a MongoDB Crypt shared library to be used (instead of mongocryptd).\n     *\n     * This needs to be the path to the file itself, not a directory.\n     * It can be an absolute or relative path. If the path is relative and\n     * its first component is `$ORIGIN`, it will be replaced by the directory\n     * containing the mongodb-client-encryption native addon file. Otherwise,\n     * the path will be interpreted relative to the current working directory.\n     *\n     * Currently, loading different MongoDB Crypt shared library files from different\n     * MongoClients in the same process is not supported.\n     *\n     * If this option is provided and no MongoDB Crypt shared library could be loaded\n     * from the specified location, creating the MongoClient will fail.\n     *\n     * If this option is not provided and `cryptSharedLibRequired` is not specified,\n     * the AutoEncrypter will attempt to spawn and/or use mongocryptd according\n     * to the mongocryptd-specific `extraOptions` options.\n     *\n     * Specifying a path prevents mongocryptd from being used as a fallback.\n     *\n     * Requires the MongoDB Crypt shared library, available in MongoDB 6.0 or higher.\n     */\n    cryptSharedLibPath?: string;\n    /**\n     * If specified, never use mongocryptd and instead fail when the MongoDB Crypt\n     * shared library could not be loaded.\n     *\n     * This is always true when `cryptSharedLibPath` is specified.\n     *\n     * Requires the MongoDB Crypt shared library, available in MongoDB 6.0 or higher.\n     */\n    cryptSharedLibRequired?: boolean;\n    /**\n     * Search paths for a MongoDB Crypt shared library to be used (instead of mongocryptd)\n     * Only for driver testing!\n     * @internal\n     */\n    cryptSharedLibSearchPaths?: string[];\n  };\n  proxyOptions?: ProxyOptions;\n  /** The TLS options to use connecting to the KMS provider */\n  tlsOptions?: {\n    aws?: AutoEncryptionTlsOptions;\n    local?: AutoEncryptionTlsOptions;\n    azure?: AutoEncryptionTlsOptions;\n    gcp?: AutoEncryptionTlsOptions;\n    kmip?: AutoEncryptionTlsOptions;\n  };\n}\n\n/** @public */\nexport interface AutoEncrypter {\n  // eslint-disable-next-line @typescript-eslint/no-misused-new\n  new (client: MongoClient, options: AutoEncryptionOptions): AutoEncrypter;\n  init(cb: Callback): void;\n  teardown(force: boolean, callback: Callback): void;\n  encrypt(ns: string, cmd: Document, options: any, callback: Callback<Document>): void;\n  decrypt(cmd: Document, options: any, callback: Callback<Document>): void;\n  /** @experimental */\n  readonly cryptSharedLibVersionInfo: { version: bigint; versionStr: string } | null;\n}\n", "import type { Document } from '../../bson';\nimport { MongoRuntimeError } from '../../error';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection, ConnectionOptions } from '../connection';\nimport type { MongoCredentials } from './mongo_credentials';\n\n/**\n * Context used during authentication\n * @internal\n */\nexport class AuthContext {\n  /** The connection to authenticate */\n  connection: Connection;\n  /** The credentials to use for authentication */\n  credentials?: MongoCredentials;\n  /** If the context is for reauthentication. */\n  reauthenticating = false;\n  /** The options passed to the `connect` method */\n  options: ConnectionOptions;\n\n  /** A response from an initial auth attempt, only some mechanisms use this (e.g, SCRAM) */\n  response?: Document;\n  /** A random nonce generated for use in an authentication conversation */\n  nonce?: Buffer;\n\n  constructor(\n    connection: Connection,\n    credentials: MongoCredentials | undefined,\n    options: ConnectionOptions\n  ) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\nexport abstract class AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  async prepare(\n    handshakeDoc: HandshakeDocument,\n    _authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    return handshakeDoc;\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   */\n  abstract auth(context: AuthContext): Promise<void>;\n\n  /**\n   * Reauthenticate.\n   * @param context - The shared auth context.\n   */\n  async reauth(context: AuthContext): Promise<void> {\n    if (context.reauthenticating) {\n      throw new MongoRuntimeError('Reauthentication already in progress.');\n    }\n    try {\n      context.reauthenticating = true;\n      await this.auth(context);\n    } finally {\n      context.reauthenticating = false;\n    }\n  }\n}\n", "import * as dns from 'dns';\n\nimport { getKerberos, type Kerberos, type KerberosClient } from '../../deps';\nimport { MongoInvalidArgumentError, MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport type { Connection } from '../connection';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\n/** @public */\nexport const GSSAPICanonicalizationValue = Object.freeze({\n  on: true,\n  off: false,\n  none: 'none',\n  forward: 'forward',\n  forwardAndReverse: 'forwardAndReverse'\n} as const);\n\n/** @public */\nexport type GSSAPICanonicalizationValue =\n  (typeof GSSAPICanonicalizationValue)[keyof typeof GSSAPICanonicalizationValue];\n\ntype MechanismProperties = {\n  CANONICALIZE_HOST_NAME?: GSSAPICanonicalizationValue;\n  SERVICE_HOST?: string;\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n};\n\nasync function externalCommand(\n  connection: Connection,\n  command: ReturnType<typeof saslStart> | ReturnType<typeof saslContinue>\n): Promise<{ payload: string; conversationId: any }> {\n  return connection.commandAsync(ns('$external.$cmd'), command, undefined) as Promise<{\n    payload: string;\n    conversationId: any;\n  }>;\n}\n\nlet krb: typeof Kerberos;\n\nexport class GSSAPI extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (credentials == null) {\n      throw new MongoMissingCredentialsError('Credentials required for GSSAPI authentication');\n    }\n\n    const { username } = credentials;\n\n    const client = await makeKerberosClient(authContext);\n\n    const payload = await client.step('');\n\n    const saslStartResponse = await externalCommand(connection, saslStart(payload));\n\n    const negotiatedPayload = await negotiate(client, 10, saslStartResponse.payload);\n\n    const saslContinueResponse = await externalCommand(\n      connection,\n      saslContinue(negotiatedPayload, saslStartResponse.conversationId)\n    );\n\n    const finalizePayload = await finalize(client, username, saslContinueResponse.payload);\n\n    await externalCommand(connection, {\n      saslContinue: 1,\n      conversationId: saslContinueResponse.conversationId,\n      payload: finalizePayload\n    });\n  }\n}\n\nasync function makeKerberosClient(authContext: AuthContext): Promise<KerberosClient> {\n  const { hostAddress } = authContext.options;\n  const { credentials } = authContext;\n  if (!hostAddress || typeof hostAddress.host !== 'string' || !credentials) {\n    throw new MongoInvalidArgumentError(\n      'Connection must have host and port and credentials defined.'\n    );\n  }\n\n  loadKrb();\n  if ('kModuleError' in krb) {\n    throw krb['kModuleError'];\n  }\n  const { initializeClient } = krb;\n\n  const { username, password } = credentials;\n  const mechanismProperties = credentials.mechanismProperties as MechanismProperties;\n\n  const serviceName = mechanismProperties.SERVICE_NAME ?? 'mongodb';\n\n  const host = await performGSSAPICanonicalizeHostName(hostAddress.host, mechanismProperties);\n\n  const initOptions = {};\n  if (password != null) {\n    // TODO(NODE-5139): These do not match the typescript options in initializeClient\n    Object.assign(initOptions, { user: username, password: password });\n  }\n\n  const spnHost = mechanismProperties.SERVICE_HOST ?? host;\n  let spn = `${serviceName}${process.platform === 'win32' ? '/' : '@'}${spnHost}`;\n  if ('SERVICE_REALM' in mechanismProperties) {\n    spn = `${spn}@${mechanismProperties.SERVICE_REALM}`;\n  }\n\n  return initializeClient(spn, initOptions);\n}\n\nfunction saslStart(payload: string) {\n  return {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload,\n    autoAuthorize: 1\n  } as const;\n}\n\nfunction saslContinue(payload: string, conversationId: number) {\n  return {\n    saslContinue: 1,\n    conversationId,\n    payload\n  } as const;\n}\n\nasync function negotiate(\n  client: KerberosClient,\n  retries: number,\n  payload: string\n): Promise<string> {\n  try {\n    const response = await client.step(payload);\n    return response || '';\n  } catch (error) {\n    if (retries === 0) {\n      // Retries exhausted, raise error\n      throw error;\n    }\n    // Adjust number of retries and call step again\n    return negotiate(client, retries - 1, payload);\n  }\n}\n\nasync function finalize(client: KerberosClient, user: string, payload: string): Promise<string> {\n  // GSS Client Unwrap\n  const response = await client.unwrap(payload);\n  return client.wrap(response || '', { user });\n}\n\nexport async function performGSSAPICanonicalizeHostName(\n  host: string,\n  mechanismProperties: MechanismProperties\n): Promise<string> {\n  const mode = mechanismProperties.CANONICALIZE_HOST_NAME;\n  if (!mode || mode === GSSAPICanonicalizationValue.none) {\n    return host;\n  }\n\n  // If forward and reverse or true\n  if (\n    mode === GSSAPICanonicalizationValue.on ||\n    mode === GSSAPICanonicalizationValue.forwardAndReverse\n  ) {\n    // Perform the lookup of the ip address.\n    const { address } = await dns.promises.lookup(host);\n\n    try {\n      // Perform a reverse ptr lookup on the ip address.\n      const results = await dns.promises.resolvePtr(address);\n      // If the ptr did not error but had no results, return the host.\n      return results.length > 0 ? results[0] : host;\n    } catch (error) {\n      // This can error as ptr records may not exist for all ips. In this case\n      // fallback to a cname lookup as dns.lookup() does not return the\n      // cname.\n      return resolveCname(host);\n    }\n  } else {\n    // The case for forward is just to resolve the cname as dns.lookup()\n    // will not return it.\n    return resolveCname(host);\n  }\n}\n\nexport async function resolveCname(host: string): Promise<string> {\n  // Attempt to resolve the host name\n  try {\n    const results = await dns.promises.resolveCname(host);\n    // Get the first resolved host id\n    return results.length > 0 ? results[0] : host;\n  } catch {\n    return host;\n  }\n}\n\n/**\n * Load the Kerberos library.\n */\nfunction loadKrb() {\n  if (!krb) {\n    krb = getKerberos();\n  }\n}\n", "/** @public */\nexport const AuthMechanism = Object.freeze({\n  MONGODB_AWS: 'MONGODB-AWS',\n  MONGODB_CR: 'MONGODB-CR',\n  MONGODB_DEFAULT: 'DEFAULT',\n  MONGODB_GSSAPI: 'GSSAPI',\n  MONGODB_PLAIN: 'PLAIN',\n  MONGODB_SCRAM_SHA1: 'SCRAM-SHA-1',\n  MONGODB_SCRAM_SHA256: 'SCRAM-SHA-256',\n  MONGODB_X509: 'MONGODB-X509',\n  /** @experimental */\n  MONGODB_OIDC: 'MONGODB-OIDC'\n} as const);\n\n/** @public */\nexport type AuthMechanism = (typeof AuthMechanism)[keyof typeof AuthMechanism];\n\n/** @internal */\nexport const AUTH_MECHS_AUTH_SRC_EXTERNAL = new Set<AuthMechanism>([\n  AuthMechanism.MONGODB_GSSAPI,\n  AuthMechanism.MONGODB_AWS,\n  AuthMechanism.MONGODB_OIDC,\n  AuthMechanism.MONGODB_X509\n]);\n", "// Resolves the default auth mechanism according to\n// Resolves the default auth mechanism according to\nimport type { Document } from '../../bson';\nimport {\n  MongoAPIError,\n  MongoAzureError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError\n} from '../../error';\nimport { GSSAPICanonicalizationValue } from './gssapi';\nimport type { OIDCRefreshFunction, OIDCRequestFunction } from './mongodb_oidc';\nimport { AUTH_MECHS_AUTH_SRC_EXTERNAL, AuthMechanism } from './providers';\n\n// https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst\nfunction getDefaultAuthMechanism(hello?: Document): AuthMechanism {\n  if (hello) {\n    // If hello contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(hello.saslSupportedMechs)) {\n      return hello.saslSupportedMechs.includes(AuthMechanism.MONGODB_SCRAM_SHA256)\n        ? AuthMechanism.MONGODB_SCRAM_SHA256\n        : AuthMechanism.MONGODB_SCRAM_SHA1;\n    }\n\n    // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n    if (hello.maxWireVersion >= 3) {\n      return AuthMechanism.MONGODB_SCRAM_SHA1;\n    }\n  }\n\n  // Default for wireprotocol < 3\n  return AuthMechanism.MONGODB_CR;\n}\n\nconst ALLOWED_PROVIDER_NAMES: AuthMechanismProperties['PROVIDER_NAME'][] = ['aws', 'azure'];\nconst ALLOWED_HOSTS_ERROR = 'Auth mechanism property ALLOWED_HOSTS must be an array of strings.';\n\n/** @internal */\nexport const DEFAULT_ALLOWED_HOSTS = [\n  '*.mongodb.net',\n  '*.mongodb-dev.net',\n  '*.mongodbgov.net',\n  'localhost',\n  '127.0.0.1',\n  '::1'\n];\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_AUDIENCE_MISSING_ERROR =\n  'TOKEN_AUDIENCE must be set in the auth mechanism properties when PROVIDER_NAME is azure.';\n\n/** @public */\nexport interface AuthMechanismProperties extends Document {\n  SERVICE_HOST?: string;\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n  CANONICALIZE_HOST_NAME?: GSSAPICanonicalizationValue;\n  AWS_SESSION_TOKEN?: string;\n  /** @experimental */\n  REQUEST_TOKEN_CALLBACK?: OIDCRequestFunction;\n  /** @experimental */\n  REFRESH_TOKEN_CALLBACK?: OIDCRefreshFunction;\n  /** @experimental */\n  PROVIDER_NAME?: 'aws' | 'azure';\n  /** @experimental */\n  ALLOWED_HOSTS?: string[];\n  /** @experimental */\n  TOKEN_AUDIENCE?: string;\n}\n\n/** @public */\nexport interface MongoCredentialsOptions {\n  username?: string;\n  password: string;\n  source: string;\n  db?: string;\n  mechanism?: AuthMechanism;\n  mechanismProperties: AuthMechanismProperties;\n}\n\n/**\n * A representation of the credentials used by MongoDB\n * @public\n */\nexport class MongoCredentials {\n  /** The username used for authentication */\n  readonly username: string;\n  /** The password used for authentication */\n  readonly password: string;\n  /** The database that the user should authenticate against */\n  readonly source: string;\n  /** The method used to authenticate */\n  readonly mechanism: AuthMechanism;\n  /** Special properties used by some types of auth mechanisms */\n  readonly mechanismProperties: AuthMechanismProperties;\n\n  constructor(options: MongoCredentialsOptions) {\n    this.username = options.username ?? '';\n    this.password = options.password;\n    this.source = options.source;\n    if (!this.source && options.db) {\n      this.source = options.db;\n    }\n    this.mechanism = options.mechanism || AuthMechanism.MONGODB_DEFAULT;\n    this.mechanismProperties = options.mechanismProperties || {};\n\n    if (this.mechanism.match(/MONGODB-AWS/i)) {\n      if (!this.username && process.env.AWS_ACCESS_KEY_ID) {\n        this.username = process.env.AWS_ACCESS_KEY_ID;\n      }\n\n      if (!this.password && process.env.AWS_SECRET_ACCESS_KEY) {\n        this.password = process.env.AWS_SECRET_ACCESS_KEY;\n      }\n\n      if (\n        this.mechanismProperties.AWS_SESSION_TOKEN == null &&\n        process.env.AWS_SESSION_TOKEN != null\n      ) {\n        this.mechanismProperties = {\n          ...this.mechanismProperties,\n          AWS_SESSION_TOKEN: process.env.AWS_SESSION_TOKEN\n        };\n      }\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_OIDC && !this.mechanismProperties.ALLOWED_HOSTS) {\n      this.mechanismProperties = {\n        ...this.mechanismProperties,\n        ALLOWED_HOSTS: DEFAULT_ALLOWED_HOSTS\n      };\n    }\n\n    Object.freeze(this.mechanismProperties);\n    Object.freeze(this);\n  }\n\n  /** Determines if two MongoCredentials objects are equivalent */\n  equals(other: MongoCredentials): boolean {\n    return (\n      this.mechanism === other.mechanism &&\n      this.username === other.username &&\n      this.password === other.password &&\n      this.source === other.source\n    );\n  }\n\n  /**\n   * If the authentication mechanism is set to \"default\", resolves the authMechanism\n   * based on the server version and server supported sasl mechanisms.\n   *\n   * @param hello - A hello response from the server\n   */\n  resolveAuthMechanism(hello?: Document): MongoCredentials {\n    // If the mechanism is not \"default\", then it does not need to be resolved\n    if (this.mechanism.match(/DEFAULT/i)) {\n      return new MongoCredentials({\n        username: this.username,\n        password: this.password,\n        source: this.source,\n        mechanism: getDefaultAuthMechanism(hello),\n        mechanismProperties: this.mechanismProperties\n      });\n    }\n\n    return this;\n  }\n\n  validate(): void {\n    if (\n      (this.mechanism === AuthMechanism.MONGODB_GSSAPI ||\n        this.mechanism === AuthMechanism.MONGODB_CR ||\n        this.mechanism === AuthMechanism.MONGODB_PLAIN ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA1 ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA256) &&\n      !this.username\n    ) {\n      throw new MongoMissingCredentialsError(`Username required for mechanism '${this.mechanism}'`);\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_OIDC) {\n      if (this.username && this.mechanismProperties.PROVIDER_NAME) {\n        throw new MongoInvalidArgumentError(\n          `username and PROVIDER_NAME may not be used together for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (\n        this.mechanismProperties.PROVIDER_NAME === 'azure' &&\n        !this.mechanismProperties.TOKEN_AUDIENCE\n      ) {\n        throw new MongoAzureError(TOKEN_AUDIENCE_MISSING_ERROR);\n      }\n\n      if (\n        this.mechanismProperties.PROVIDER_NAME &&\n        !ALLOWED_PROVIDER_NAMES.includes(this.mechanismProperties.PROVIDER_NAME)\n      ) {\n        throw new MongoInvalidArgumentError(\n          `Currently only a PROVIDER_NAME in ${ALLOWED_PROVIDER_NAMES.join(\n            ','\n          )} is supported for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (\n        this.mechanismProperties.REFRESH_TOKEN_CALLBACK &&\n        !this.mechanismProperties.REQUEST_TOKEN_CALLBACK\n      ) {\n        throw new MongoInvalidArgumentError(\n          `A REQUEST_TOKEN_CALLBACK must be provided when using a REFRESH_TOKEN_CALLBACK for mechanism '${this.mechanism}'`\n        );\n      }\n\n      if (\n        !this.mechanismProperties.PROVIDER_NAME &&\n        !this.mechanismProperties.REQUEST_TOKEN_CALLBACK\n      ) {\n        throw new MongoInvalidArgumentError(\n          `Either a PROVIDER_NAME or a REQUEST_TOKEN_CALLBACK must be specified for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (this.mechanismProperties.ALLOWED_HOSTS) {\n        const hosts = this.mechanismProperties.ALLOWED_HOSTS;\n        if (!Array.isArray(hosts)) {\n          throw new MongoInvalidArgumentError(ALLOWED_HOSTS_ERROR);\n        }\n        for (const host of hosts) {\n          if (typeof host !== 'string') {\n            throw new MongoInvalidArgumentError(ALLOWED_HOSTS_ERROR);\n          }\n        }\n      }\n    }\n\n    if (AUTH_MECHS_AUTH_SRC_EXTERNAL.has(this.mechanism)) {\n      if (this.source != null && this.source !== '$external') {\n        // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n        throw new MongoAPIError(\n          `Invalid source '${this.source}' for mechanism '${this.mechanism}' specified.`\n        );\n      }\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_PLAIN && this.source == null) {\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError('PLAIN Authentication Mechanism needs an auth source');\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_X509 && this.password != null) {\n      if (this.password === '') {\n        Reflect.set(this, 'password', undefined);\n        return;\n      }\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError(`Password not allowed for mechanism MONGODB-X509`);\n    }\n\n    const canonicalization = this.mechanismProperties.CANONICALIZE_HOST_NAME ?? false;\n    if (!Object.values(GSSAPICanonicalizationValue).includes(canonicalization)) {\n      throw new MongoAPIError(`Invalid CANONICALIZE_HOST_NAME value: ${canonicalization}`);\n    }\n  }\n\n  static merge(\n    creds: MongoCredentials | undefined,\n    options: Partial<MongoCredentialsOptions>\n  ): MongoCredentials {\n    return new MongoCredentials({\n      username: options.username ?? creds?.username ?? '',\n      password: options.password ?? creds?.password ?? '',\n      mechanism: options.mechanism ?? creds?.mechanism ?? AuthMechanism.MONGODB_DEFAULT,\n      mechanismProperties: options.mechanismProperties ?? creds?.mechanismProperties ?? {},\n      source: options.source ?? options.db ?? creds?.source ?? 'admin'\n    });\n  }\n}\n", "\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n", "\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n", "\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n", "[[[0,44],4],[[45,46],2],[47,4],[[48,57],2],[[58,64],4],[65,1,\"a\"],[66,1,\"b\"],[67,1,\"c\"],[68,1,\"d\"],[69,1,\"e\"],[70,1,\"f\"],[71,1,\"g\"],[72,1,\"h\"],[73,1,\"i\"],[74,1,\"j\"],[75,1,\"k\"],[76,1,\"l\"],[77,1,\"m\"],[78,1,\"n\"],[79,1,\"o\"],[80,1,\"p\"],[81,1,\"q\"],[82,1,\"r\"],[83,1,\"s\"],[84,1,\"t\"],[85,1,\"u\"],[86,1,\"v\"],[87,1,\"w\"],[88,1,\"x\"],[89,1,\"y\"],[90,1,\"z\"],[[91,96],4],[[97,122],2],[[123,127],4],[[128,159],3],[160,5,\" \"],[[161,167],2],[168,5,\" \u0308\"],[169,2],[170,1,\"a\"],[[171,172],2],[173,7],[174,2],[175,5,\" \u0304\"],[[176,177],2],[178,1,\"2\"],[179,1,\"3\"],[180,5,\" \u0301\"],[181,1,\"\u03BC\"],[182,2],[183,2],[184,5,\" \u0327\"],[185,1,\"1\"],[186,1,\"o\"],[187,2],[188,1,\"1\u20444\"],[189,1,\"1\u20442\"],[190,1,\"3\u20444\"],[191,2],[192,1,\"\u00E0\"],[193,1,\"\u00E1\"],[194,1,\"\u00E2\"],[195,1,\"\u00E3\"],[196,1,\"\u00E4\"],[197,1,\"\u00E5\"],[198,1,\"\u00E6\"],[199,1,\"\u00E7\"],[200,1,\"\u00E8\"],[201,1,\"\u00E9\"],[202,1,\"\u00EA\"],[203,1,\"\u00EB\"],[204,1,\"\u00EC\"],[205,1,\"\u00ED\"],[206,1,\"\u00EE\"],[207,1,\"\u00EF\"],[208,1,\"\u00F0\"],[209,1,\"\u00F1\"],[210,1,\"\u00F2\"],[211,1,\"\u00F3\"],[212,1,\"\u00F4\"],[213,1,\"\u00F5\"],[214,1,\"\u00F6\"],[215,2],[216,1,\"\u00F8\"],[217,1,\"\u00F9\"],[218,1,\"\u00FA\"],[219,1,\"\u00FB\"],[220,1,\"\u00FC\"],[221,1,\"\u00FD\"],[222,1,\"\u00FE\"],[223,6,\"ss\"],[[224,246],2],[247,2],[[248,255],2],[256,1,\"\u0101\"],[257,2],[258,1,\"\u0103\"],[259,2],[260,1,\"\u0105\"],[261,2],[262,1,\"\u0107\"],[263,2],[264,1,\"\u0109\"],[265,2],[266,1,\"\u010B\"],[267,2],[268,1,\"\u010D\"],[269,2],[270,1,\"\u010F\"],[271,2],[272,1,\"\u0111\"],[273,2],[274,1,\"\u0113\"],[275,2],[276,1,\"\u0115\"],[277,2],[278,1,\"\u0117\"],[279,2],[280,1,\"\u0119\"],[281,2],[282,1,\"\u011B\"],[283,2],[284,1,\"\u011D\"],[285,2],[286,1,\"\u011F\"],[287,2],[288,1,\"\u0121\"],[289,2],[290,1,\"\u0123\"],[291,2],[292,1,\"\u0125\"],[293,2],[294,1,\"\u0127\"],[295,2],[296,1,\"\u0129\"],[297,2],[298,1,\"\u012B\"],[299,2],[300,1,\"\u012D\"],[301,2],[302,1,\"\u012F\"],[303,2],[304,1,\"i\u0307\"],[305,2],[[306,307],1,\"ij\"],[308,1,\"\u0135\"],[309,2],[310,1,\"\u0137\"],[[311,312],2],[313,1,\"\u013A\"],[314,2],[315,1,\"\u013C\"],[316,2],[317,1,\"\u013E\"],[318,2],[[319,320],1,\"l\u00B7\"],[321,1,\"\u0142\"],[322,2],[323,1,\"\u0144\"],[324,2],[325,1,\"\u0146\"],[326,2],[327,1,\"\u0148\"],[328,2],[329,1,\"\u02BCn\"],[330,1,\"\u014B\"],[331,2],[332,1,\"\u014D\"],[333,2],[334,1,\"\u014F\"],[335,2],[336,1,\"\u0151\"],[337,2],[338,1,\"\u0153\"],[339,2],[340,1,\"\u0155\"],[341,2],[342,1,\"\u0157\"],[343,2],[344,1,\"\u0159\"],[345,2],[346,1,\"\u015B\"],[347,2],[348,1,\"\u015D\"],[349,2],[350,1,\"\u015F\"],[351,2],[352,1,\"\u0161\"],[353,2],[354,1,\"\u0163\"],[355,2],[356,1,\"\u0165\"],[357,2],[358,1,\"\u0167\"],[359,2],[360,1,\"\u0169\"],[361,2],[362,1,\"\u016B\"],[363,2],[364,1,\"\u016D\"],[365,2],[366,1,\"\u016F\"],[367,2],[368,1,\"\u0171\"],[369,2],[370,1,\"\u0173\"],[371,2],[372,1,\"\u0175\"],[373,2],[374,1,\"\u0177\"],[375,2],[376,1,\"\u00FF\"],[377,1,\"\u017A\"],[378,2],[379,1,\"\u017C\"],[380,2],[381,1,\"\u017E\"],[382,2],[383,1,\"s\"],[384,2],[385,1,\"\u0253\"],[386,1,\"\u0183\"],[387,2],[388,1,\"\u0185\"],[389,2],[390,1,\"\u0254\"],[391,1,\"\u0188\"],[392,2],[393,1,\"\u0256\"],[394,1,\"\u0257\"],[395,1,\"\u018C\"],[[396,397],2],[398,1,\"\u01DD\"],[399,1,\"\u0259\"],[400,1,\"\u025B\"],[401,1,\"\u0192\"],[402,2],[403,1,\"\u0260\"],[404,1,\"\u0263\"],[405,2],[406,1,\"\u0269\"],[407,1,\"\u0268\"],[408,1,\"\u0199\"],[[409,411],2],[412,1,\"\u026F\"],[413,1,\"\u0272\"],[414,2],[415,1,\"\u0275\"],[416,1,\"\u01A1\"],[417,2],[418,1,\"\u01A3\"],[419,2],[420,1,\"\u01A5\"],[421,2],[422,1,\"\u0280\"],[423,1,\"\u01A8\"],[424,2],[425,1,\"\u0283\"],[[426,427],2],[428,1,\"\u01AD\"],[429,2],[430,1,\"\u0288\"],[431,1,\"\u01B0\"],[432,2],[433,1,\"\u028A\"],[434,1,\"\u028B\"],[435,1,\"\u01B4\"],[436,2],[437,1,\"\u01B6\"],[438,2],[439,1,\"\u0292\"],[440,1,\"\u01B9\"],[[441,443],2],[444,1,\"\u01BD\"],[[445,451],2],[[452,454],1,\"d\u017E\"],[[455,457],1,\"lj\"],[[458,460],1,\"nj\"],[461,1,\"\u01CE\"],[462,2],[463,1,\"\u01D0\"],[464,2],[465,1,\"\u01D2\"],[466,2],[467,1,\"\u01D4\"],[468,2],[469,1,\"\u01D6\"],[470,2],[471,1,\"\u01D8\"],[472,2],[473,1,\"\u01DA\"],[474,2],[475,1,\"\u01DC\"],[[476,477],2],[478,1,\"\u01DF\"],[479,2],[480,1,\"\u01E1\"],[481,2],[482,1,\"\u01E3\"],[483,2],[484,1,\"\u01E5\"],[485,2],[486,1,\"\u01E7\"],[487,2],[488,1,\"\u01E9\"],[489,2],[490,1,\"\u01EB\"],[491,2],[492,1,\"\u01ED\"],[493,2],[494,1,\"\u01EF\"],[[495,496],2],[[497,499],1,\"dz\"],[500,1,\"\u01F5\"],[501,2],[502,1,\"\u0195\"],[503,1,\"\u01BF\"],[504,1,\"\u01F9\"],[505,2],[506,1,\"\u01FB\"],[507,2],[508,1,\"\u01FD\"],[509,2],[510,1,\"\u01FF\"],[511,2],[512,1,\"\u0201\"],[513,2],[514,1,\"\u0203\"],[515,2],[516,1,\"\u0205\"],[517,2],[518,1,\"\u0207\"],[519,2],[520,1,\"\u0209\"],[521,2],[522,1,\"\u020B\"],[523,2],[524,1,\"\u020D\"],[525,2],[526,1,\"\u020F\"],[527,2],[528,1,\"\u0211\"],[529,2],[530,1,\"\u0213\"],[531,2],[532,1,\"\u0215\"],[533,2],[534,1,\"\u0217\"],[535,2],[536,1,\"\u0219\"],[537,2],[538,1,\"\u021B\"],[539,2],[540,1,\"\u021D\"],[541,2],[542,1,\"\u021F\"],[543,2],[544,1,\"\u019E\"],[545,2],[546,1,\"\u0223\"],[547,2],[548,1,\"\u0225\"],[549,2],[550,1,\"\u0227\"],[551,2],[552,1,\"\u0229\"],[553,2],[554,1,\"\u022B\"],[555,2],[556,1,\"\u022D\"],[557,2],[558,1,\"\u022F\"],[559,2],[560,1,\"\u0231\"],[561,2],[562,1,\"\u0233\"],[563,2],[[564,566],2],[[567,569],2],[570,1,\"\u2C65\"],[571,1,\"\u023C\"],[572,2],[573,1,\"\u019A\"],[574,1,\"\u2C66\"],[[575,576],2],[577,1,\"\u0242\"],[578,2],[579,1,\"\u0180\"],[580,1,\"\u0289\"],[581,1,\"\u028C\"],[582,1,\"\u0247\"],[583,2],[584,1,\"\u0249\"],[585,2],[586,1,\"\u024B\"],[587,2],[588,1,\"\u024D\"],[589,2],[590,1,\"\u024F\"],[591,2],[[592,680],2],[[681,685],2],[[686,687],2],[688,1,\"h\"],[689,1,\"\u0266\"],[690,1,\"j\"],[691,1,\"r\"],[692,1,\"\u0279\"],[693,1,\"\u027B\"],[694,1,\"\u0281\"],[695,1,\"w\"],[696,1,\"y\"],[[697,705],2],[[706,709],2],[[710,721],2],[[722,727],2],[728,5,\" \u0306\"],[729,5,\" \u0307\"],[730,5,\" \u030A\"],[731,5,\" \u0328\"],[732,5,\" \u0303\"],[733,5,\" \u030B\"],[734,2],[735,2],[736,1,\"\u0263\"],[737,1,\"l\"],[738,1,\"s\"],[739,1,\"x\"],[740,1,\"\u0295\"],[[741,745],2],[[746,747],2],[748,2],[749,2],[750,2],[[751,767],2],[[768,831],2],[832,1,\"\u0300\"],[833,1,\"\u0301\"],[834,2],[835,1,\"\u0313\"],[836,1,\"\u0308\u0301\"],[837,1,\"\u03B9\"],[[838,846],2],[847,7],[[848,855],2],[[856,860],2],[[861,863],2],[[864,865],2],[866,2],[[867,879],2],[880,1,\"\u0371\"],[881,2],[882,1,\"\u0373\"],[883,2],[884,1,\"\u02B9\"],[885,2],[886,1,\"\u0377\"],[887,2],[[888,889],3],[890,5,\" \u03B9\"],[[891,893],2],[894,5,\";\"],[895,1,\"\u03F3\"],[[896,899],3],[900,5,\" \u0301\"],[901,5,\" \u0308\u0301\"],[902,1,\"\u03AC\"],[903,1,\"\u00B7\"],[904,1,\"\u03AD\"],[905,1,\"\u03AE\"],[906,1,\"\u03AF\"],[907,3],[908,1,\"\u03CC\"],[909,3],[910,1,\"\u03CD\"],[911,1,\"\u03CE\"],[912,2],[913,1,\"\u03B1\"],[914,1,\"\u03B2\"],[915,1,\"\u03B3\"],[916,1,\"\u03B4\"],[917,1,\"\u03B5\"],[918,1,\"\u03B6\"],[919,1,\"\u03B7\"],[920,1,\"\u03B8\"],[921,1,\"\u03B9\"],[922,1,\"\u03BA\"],[923,1,\"\u03BB\"],[924,1,\"\u03BC\"],[925,1,\"\u03BD\"],[926,1,\"\u03BE\"],[927,1,\"\u03BF\"],[928,1,\"\u03C0\"],[929,1,\"\u03C1\"],[930,3],[931,1,\"\u03C3\"],[932,1,\"\u03C4\"],[933,1,\"\u03C5\"],[934,1,\"\u03C6\"],[935,1,\"\u03C7\"],[936,1,\"\u03C8\"],[937,1,\"\u03C9\"],[938,1,\"\u03CA\"],[939,1,\"\u03CB\"],[[940,961],2],[962,6,\"\u03C3\"],[[963,974],2],[975,1,\"\u03D7\"],[976,1,\"\u03B2\"],[977,1,\"\u03B8\"],[978,1,\"\u03C5\"],[979,1,\"\u03CD\"],[980,1,\"\u03CB\"],[981,1,\"\u03C6\"],[982,1,\"\u03C0\"],[983,2],[984,1,\"\u03D9\"],[985,2],[986,1,\"\u03DB\"],[987,2],[988,1,\"\u03DD\"],[989,2],[990,1,\"\u03DF\"],[991,2],[992,1,\"\u03E1\"],[993,2],[994,1,\"\u03E3\"],[995,2],[996,1,\"\u03E5\"],[997,2],[998,1,\"\u03E7\"],[999,2],[1000,1,\"\u03E9\"],[1001,2],[1002,1,\"\u03EB\"],[1003,2],[1004,1,\"\u03ED\"],[1005,2],[1006,1,\"\u03EF\"],[1007,2],[1008,1,\"\u03BA\"],[1009,1,\"\u03C1\"],[1010,1,\"\u03C3\"],[1011,2],[1012,1,\"\u03B8\"],[1013,1,\"\u03B5\"],[1014,2],[1015,1,\"\u03F8\"],[1016,2],[1017,1,\"\u03C3\"],[1018,1,\"\u03FB\"],[1019,2],[1020,2],[1021,1,\"\u037B\"],[1022,1,\"\u037C\"],[1023,1,\"\u037D\"],[1024,1,\"\u0450\"],[1025,1,\"\u0451\"],[1026,1,\"\u0452\"],[1027,1,\"\u0453\"],[1028,1,\"\u0454\"],[1029,1,\"\u0455\"],[1030,1,\"\u0456\"],[1031,1,\"\u0457\"],[1032,1,\"\u0458\"],[1033,1,\"\u0459\"],[1034,1,\"\u045A\"],[1035,1,\"\u045B\"],[1036,1,\"\u045C\"],[1037,1,\"\u045D\"],[1038,1,\"\u045E\"],[1039,1,\"\u045F\"],[1040,1,\"\u0430\"],[1041,1,\"\u0431\"],[1042,1,\"\u0432\"],[1043,1,\"\u0433\"],[1044,1,\"\u0434\"],[1045,1,\"\u0435\"],[1046,1,\"\u0436\"],[1047,1,\"\u0437\"],[1048,1,\"\u0438\"],[1049,1,\"\u0439\"],[1050,1,\"\u043A\"],[1051,1,\"\u043B\"],[1052,1,\"\u043C\"],[1053,1,\"\u043D\"],[1054,1,\"\u043E\"],[1055,1,\"\u043F\"],[1056,1,\"\u0440\"],[1057,1,\"\u0441\"],[1058,1,\"\u0442\"],[1059,1,\"\u0443\"],[1060,1,\"\u0444\"],[1061,1,\"\u0445\"],[1062,1,\"\u0446\"],[1063,1,\"\u0447\"],[1064,1,\"\u0448\"],[1065,1,\"\u0449\"],[1066,1,\"\u044A\"],[1067,1,\"\u044B\"],[1068,1,\"\u044C\"],[1069,1,\"\u044D\"],[1070,1,\"\u044E\"],[1071,1,\"\u044F\"],[[1072,1103],2],[1104,2],[[1105,1116],2],[1117,2],[[1118,1119],2],[1120,1,\"\u0461\"],[1121,2],[1122,1,\"\u0463\"],[1123,2],[1124,1,\"\u0465\"],[1125,2],[1126,1,\"\u0467\"],[1127,2],[1128,1,\"\u0469\"],[1129,2],[1130,1,\"\u046B\"],[1131,2],[1132,1,\"\u046D\"],[1133,2],[1134,1,\"\u046F\"],[1135,2],[1136,1,\"\u0471\"],[1137,2],[1138,1,\"\u0473\"],[1139,2],[1140,1,\"\u0475\"],[1141,2],[1142,1,\"\u0477\"],[1143,2],[1144,1,\"\u0479\"],[1145,2],[1146,1,\"\u047B\"],[1147,2],[1148,1,\"\u047D\"],[1149,2],[1150,1,\"\u047F\"],[1151,2],[1152,1,\"\u0481\"],[1153,2],[1154,2],[[1155,1158],2],[1159,2],[[1160,1161],2],[1162,1,\"\u048B\"],[1163,2],[1164,1,\"\u048D\"],[1165,2],[1166,1,\"\u048F\"],[1167,2],[1168,1,\"\u0491\"],[1169,2],[1170,1,\"\u0493\"],[1171,2],[1172,1,\"\u0495\"],[1173,2],[1174,1,\"\u0497\"],[1175,2],[1176,1,\"\u0499\"],[1177,2],[1178,1,\"\u049B\"],[1179,2],[1180,1,\"\u049D\"],[1181,2],[1182,1,\"\u049F\"],[1183,2],[1184,1,\"\u04A1\"],[1185,2],[1186,1,\"\u04A3\"],[1187,2],[1188,1,\"\u04A5\"],[1189,2],[1190,1,\"\u04A7\"],[1191,2],[1192,1,\"\u04A9\"],[1193,2],[1194,1,\"\u04AB\"],[1195,2],[1196,1,\"\u04AD\"],[1197,2],[1198,1,\"\u04AF\"],[1199,2],[1200,1,\"\u04B1\"],[1201,2],[1202,1,\"\u04B3\"],[1203,2],[1204,1,\"\u04B5\"],[1205,2],[1206,1,\"\u04B7\"],[1207,2],[1208,1,\"\u04B9\"],[1209,2],[1210,1,\"\u04BB\"],[1211,2],[1212,1,\"\u04BD\"],[1213,2],[1214,1,\"\u04BF\"],[1215,2],[1216,3],[1217,1,\"\u04C2\"],[1218,2],[1219,1,\"\u04C4\"],[1220,2],[1221,1,\"\u04C6\"],[1222,2],[1223,1,\"\u04C8\"],[1224,2],[1225,1,\"\u04CA\"],[1226,2],[1227,1,\"\u04CC\"],[1228,2],[1229,1,\"\u04CE\"],[1230,2],[1231,2],[1232,1,\"\u04D1\"],[1233,2],[1234,1,\"\u04D3\"],[1235,2],[1236,1,\"\u04D5\"],[1237,2],[1238,1,\"\u04D7\"],[1239,2],[1240,1,\"\u04D9\"],[1241,2],[1242,1,\"\u04DB\"],[1243,2],[1244,1,\"\u04DD\"],[1245,2],[1246,1,\"\u04DF\"],[1247,2],[1248,1,\"\u04E1\"],[1249,2],[1250,1,\"\u04E3\"],[1251,2],[1252,1,\"\u04E5\"],[1253,2],[1254,1,\"\u04E7\"],[1255,2],[1256,1,\"\u04E9\"],[1257,2],[1258,1,\"\u04EB\"],[1259,2],[1260,1,\"\u04ED\"],[1261,2],[1262,1,\"\u04EF\"],[1263,2],[1264,1,\"\u04F1\"],[1265,2],[1266,1,\"\u04F3\"],[1267,2],[1268,1,\"\u04F5\"],[1269,2],[1270,1,\"\u04F7\"],[1271,2],[1272,1,\"\u04F9\"],[1273,2],[1274,1,\"\u04FB\"],[1275,2],[1276,1,\"\u04FD\"],[1277,2],[1278,1,\"\u04FF\"],[1279,2],[1280,1,\"\u0501\"],[1281,2],[1282,1,\"\u0503\"],[1283,2],[1284,1,\"\u0505\"],[1285,2],[1286,1,\"\u0507\"],[1287,2],[1288,1,\"\u0509\"],[1289,2],[1290,1,\"\u050B\"],[1291,2],[1292,1,\"\u050D\"],[1293,2],[1294,1,\"\u050F\"],[1295,2],[1296,1,\"\u0511\"],[1297,2],[1298,1,\"\u0513\"],[1299,2],[1300,1,\"\u0515\"],[1301,2],[1302,1,\"\u0517\"],[1303,2],[1304,1,\"\u0519\"],[1305,2],[1306,1,\"\u051B\"],[1307,2],[1308,1,\"\u051D\"],[1309,2],[1310,1,\"\u051F\"],[1311,2],[1312,1,\"\u0521\"],[1313,2],[1314,1,\"\u0523\"],[1315,2],[1316,1,\"\u0525\"],[1317,2],[1318,1,\"\u0527\"],[1319,2],[1320,1,\"\u0529\"],[1321,2],[1322,1,\"\u052B\"],[1323,2],[1324,1,\"\u052D\"],[1325,2],[1326,1,\"\u052F\"],[1327,2],[1328,3],[1329,1,\"\u0561\"],[1330,1,\"\u0562\"],[1331,1,\"\u0563\"],[1332,1,\"\u0564\"],[1333,1,\"\u0565\"],[1334,1,\"\u0566\"],[1335,1,\"\u0567\"],[1336,1,\"\u0568\"],[1337,1,\"\u0569\"],[1338,1,\"\u056A\"],[1339,1,\"\u056B\"],[1340,1,\"\u056C\"],[1341,1,\"\u056D\"],[1342,1,\"\u056E\"],[1343,1,\"\u056F\"],[1344,1,\"\u0570\"],[1345,1,\"\u0571\"],[1346,1,\"\u0572\"],[1347,1,\"\u0573\"],[1348,1,\"\u0574\"],[1349,1,\"\u0575\"],[1350,1,\"\u0576\"],[1351,1,\"\u0577\"],[1352,1,\"\u0578\"],[1353,1,\"\u0579\"],[1354,1,\"\u057A\"],[1355,1,\"\u057B\"],[1356,1,\"\u057C\"],[1357,1,\"\u057D\"],[1358,1,\"\u057E\"],[1359,1,\"\u057F\"],[1360,1,\"\u0580\"],[1361,1,\"\u0581\"],[1362,1,\"\u0582\"],[1363,1,\"\u0583\"],[1364,1,\"\u0584\"],[1365,1,\"\u0585\"],[1366,1,\"\u0586\"],[[1367,1368],3],[1369,2],[[1370,1375],2],[1376,2],[[1377,1414],2],[1415,1,\"\u0565\u0582\"],[1416,2],[1417,2],[1418,2],[[1419,1420],3],[[1421,1422],2],[1423,2],[1424,3],[[1425,1441],2],[1442,2],[[1443,1455],2],[[1456,1465],2],[1466,2],[[1467,1469],2],[1470,2],[1471,2],[1472,2],[[1473,1474],2],[1475,2],[1476,2],[1477,2],[1478,2],[1479,2],[[1480,1487],3],[[1488,1514],2],[[1515,1518],3],[1519,2],[[1520,1524],2],[[1525,1535],3],[[1536,1539],3],[1540,3],[1541,3],[[1542,1546],2],[1547,2],[1548,2],[[1549,1551],2],[[1552,1557],2],[[1558,1562],2],[1563,2],[1564,3],[1565,2],[1566,2],[1567,2],[1568,2],[[1569,1594],2],[[1595,1599],2],[1600,2],[[1601,1618],2],[[1619,1621],2],[[1622,1624],2],[[1625,1630],2],[1631,2],[[1632,1641],2],[[1642,1645],2],[[1646,1647],2],[[1648,1652],2],[1653,1,\"\u0627\u0674\"],[1654,1,\"\u0648\u0674\"],[1655,1,\"\u06C7\u0674\"],[1656,1,\"\u064A\u0674\"],[[1657,1719],2],[[1720,1721],2],[[1722,1726],2],[1727,2],[[1728,1742],2],[1743,2],[[1744,1747],2],[1748,2],[[1749,1756],2],[1757,3],[1758,2],[[1759,1768],2],[1769,2],[[1770,1773],2],[[1774,1775],2],[[1776,1785],2],[[1786,1790],2],[1791,2],[[1792,1805],2],[1806,3],[1807,3],[[1808,1836],2],[[1837,1839],2],[[1840,1866],2],[[1867,1868],3],[[1869,1871],2],[[1872,1901],2],[[1902,1919],2],[[1920,1968],2],[1969,2],[[1970,1983],3],[[1984,2037],2],[[2038,2042],2],[[2043,2044],3],[2045,2],[[2046,2047],2],[[2048,2093],2],[[2094,2095],3],[[2096,2110],2],[2111,3],[[2112,2139],2],[[2140,2141],3],[2142,2],[2143,3],[[2144,2154],2],[[2155,2159],3],[[2160,2183],2],[2184,2],[[2185,2190],2],[2191,3],[[2192,2193],3],[[2194,2199],3],[[2200,2207],2],[2208,2],[2209,2],[[2210,2220],2],[[2221,2226],2],[[2227,2228],2],[2229,2],[[2230,2237],2],[[2238,2247],2],[[2248,2258],2],[2259,2],[[2260,2273],2],[2274,3],[2275,2],[[2276,2302],2],[2303,2],[2304,2],[[2305,2307],2],[2308,2],[[2309,2361],2],[[2362,2363],2],[[2364,2381],2],[2382,2],[2383,2],[[2384,2388],2],[2389,2],[[2390,2391],2],[2392,1,\"\u0915\u093C\"],[2393,1,\"\u0916\u093C\"],[2394,1,\"\u0917\u093C\"],[2395,1,\"\u091C\u093C\"],[2396,1,\"\u0921\u093C\"],[2397,1,\"\u0922\u093C\"],[2398,1,\"\u092B\u093C\"],[2399,1,\"\u092F\u093C\"],[[2400,2403],2],[[2404,2405],2],[[2406,2415],2],[2416,2],[[2417,2418],2],[[2419,2423],2],[2424,2],[[2425,2426],2],[[2427,2428],2],[2429,2],[[2430,2431],2],[2432,2],[[2433,2435],2],[2436,3],[[2437,2444],2],[[2445,2446],3],[[2447,2448],2],[[2449,2450],3],[[2451,2472],2],[2473,3],[[2474,2480],2],[2481,3],[2482,2],[[2483,2485],3],[[2486,2489],2],[[2490,2491],3],[2492,2],[2493,2],[[2494,2500],2],[[2501,2502],3],[[2503,2504],2],[[2505,2506],3],[[2507,2509],2],[2510,2],[[2511,2518],3],[2519,2],[[2520,2523],3],[2524,1,\"\u09A1\u09BC\"],[2525,1,\"\u09A2\u09BC\"],[2526,3],[2527,1,\"\u09AF\u09BC\"],[[2528,2531],2],[[2532,2533],3],[[2534,2545],2],[[2546,2554],2],[2555,2],[2556,2],[2557,2],[2558,2],[[2559,2560],3],[2561,2],[2562,2],[2563,2],[2564,3],[[2565,2570],2],[[2571,2574],3],[[2575,2576],2],[[2577,2578],3],[[2579,2600],2],[2601,3],[[2602,2608],2],[2609,3],[2610,2],[2611,1,\"\u0A32\u0A3C\"],[2612,3],[2613,2],[2614,1,\"\u0A38\u0A3C\"],[2615,3],[[2616,2617],2],[[2618,2619],3],[2620,2],[2621,3],[[2622,2626],2],[[2627,2630],3],[[2631,2632],2],[[2633,2634],3],[[2635,2637],2],[[2638,2640],3],[2641,2],[[2642,2648],3],[2649,1,\"\u0A16\u0A3C\"],[2650,1,\"\u0A17\u0A3C\"],[2651,1,\"\u0A1C\u0A3C\"],[2652,2],[2653,3],[2654,1,\"\u0A2B\u0A3C\"],[[2655,2661],3],[[2662,2676],2],[2677,2],[2678,2],[[2679,2688],3],[[2689,2691],2],[2692,3],[[2693,2699],2],[2700,2],[2701,2],[2702,3],[[2703,2705],2],[2706,3],[[2707,2728],2],[2729,3],[[2730,2736],2],[2737,3],[[2738,2739],2],[2740,3],[[2741,2745],2],[[2746,2747],3],[[2748,2757],2],[2758,3],[[2759,2761],2],[2762,3],[[2763,2765],2],[[2766,2767],3],[2768,2],[[2769,2783],3],[2784,2],[[2785,2787],2],[[2788,2789],3],[[2790,2799],2],[2800,2],[2801,2],[[2802,2808],3],[2809,2],[[2810,2815],2],[2816,3],[[2817,2819],2],[2820,3],[[2821,2828],2],[[2829,2830],3],[[2831,2832],2],[[2833,2834],3],[[2835,2856],2],[2857,3],[[2858,2864],2],[2865,3],[[2866,2867],2],[2868,3],[2869,2],[[2870,2873],2],[[2874,2875],3],[[2876,2883],2],[2884,2],[[2885,2886],3],[[2887,2888],2],[[2889,2890],3],[[2891,2893],2],[[2894,2900],3],[2901,2],[[2902,2903],2],[[2904,2907],3],[2908,1,\"\u0B21\u0B3C\"],[2909,1,\"\u0B22\u0B3C\"],[2910,3],[[2911,2913],2],[[2914,2915],2],[[2916,2917],3],[[2918,2927],2],[2928,2],[2929,2],[[2930,2935],2],[[2936,2945],3],[[2946,2947],2],[2948,3],[[2949,2954],2],[[2955,2957],3],[[2958,2960],2],[2961,3],[[2962,2965],2],[[2966,2968],3],[[2969,2970],2],[2971,3],[2972,2],[2973,3],[[2974,2975],2],[[2976,2978],3],[[2979,2980],2],[[2981,2983],3],[[2984,2986],2],[[2987,2989],3],[[2990,2997],2],[2998,2],[[2999,3001],2],[[3002,3005],3],[[3006,3010],2],[[3011,3013],3],[[3014,3016],2],[3017,3],[[3018,3021],2],[[3022,3023],3],[3024,2],[[3025,3030],3],[3031,2],[[3032,3045],3],[3046,2],[[3047,3055],2],[[3056,3058],2],[[3059,3066],2],[[3067,3071],3],[3072,2],[[3073,3075],2],[3076,2],[[3077,3084],2],[3085,3],[[3086,3088],2],[3089,3],[[3090,3112],2],[3113,3],[[3114,3123],2],[3124,2],[[3125,3129],2],[[3130,3131],3],[3132,2],[3133,2],[[3134,3140],2],[3141,3],[[3142,3144],2],[3145,3],[[3146,3149],2],[[3150,3156],3],[[3157,3158],2],[3159,3],[[3160,3161],2],[3162,2],[[3163,3164],3],[3165,2],[[3166,3167],3],[[3168,3169],2],[[3170,3171],2],[[3172,3173],3],[[3174,3183],2],[[3184,3190],3],[3191,2],[[3192,3199],2],[3200,2],[3201,2],[[3202,3203],2],[3204,2],[[3205,3212],2],[3213,3],[[3214,3216],2],[3217,3],[[3218,3240],2],[3241,3],[[3242,3251],2],[3252,3],[[3253,3257],2],[[3258,3259],3],[[3260,3261],2],[[3262,3268],2],[3269,3],[[3270,3272],2],[3273,3],[[3274,3277],2],[[3278,3284],3],[[3285,3286],2],[[3287,3292],3],[3293,2],[3294,2],[3295,3],[[3296,3297],2],[[3298,3299],2],[[3300,3301],3],[[3302,3311],2],[3312,3],[[3313,3314],2],[[3315,3327],3],[3328,2],[3329,2],[[3330,3331],2],[3332,2],[[3333,3340],2],[3341,3],[[3342,3344],2],[3345,3],[[3346,3368],2],[3369,2],[[3370,3385],2],[3386,2],[[3387,3388],2],[3389,2],[[3390,3395],2],[3396,2],[3397,3],[[3398,3400],2],[3401,3],[[3402,3405],2],[3406,2],[3407,2],[[3408,3411],3],[[3412,3414],2],[3415,2],[[3416,3422],2],[3423,2],[[3424,3425],2],[[3426,3427],2],[[3428,3429],3],[[3430,3439],2],[[3440,3445],2],[[3446,3448],2],[3449,2],[[3450,3455],2],[3456,3],[3457,2],[[3458,3459],2],[3460,3],[[3461,3478],2],[[3479,3481],3],[[3482,3505],2],[3506,3],[[3507,3515],2],[3516,3],[3517,2],[[3518,3519],3],[[3520,3526],2],[[3527,3529],3],[3530,2],[[3531,3534],3],[[3535,3540],2],[3541,3],[3542,2],[3543,3],[[3544,3551],2],[[3552,3557],3],[[3558,3567],2],[[3568,3569],3],[[3570,3571],2],[3572,2],[[3573,3584],3],[[3585,3634],2],[3635,1,\"\u0E4D\u0E32\"],[[3636,3642],2],[[3643,3646],3],[3647,2],[[3648,3662],2],[3663,2],[[3664,3673],2],[[3674,3675],2],[[3676,3712],3],[[3713,3714],2],[3715,3],[3716,2],[3717,3],[3718,2],[[3719,3720],2],[3721,2],[3722,2],[3723,3],[3724,2],[3725,2],[[3726,3731],2],[[3732,3735],2],[3736,2],[[3737,3743],2],[3744,2],[[3745,3747],2],[3748,3],[3749,2],[3750,3],[3751,2],[[3752,3753],2],[[3754,3755],2],[3756,2],[[3757,3762],2],[3763,1,\"\u0ECD\u0EB2\"],[[3764,3769],2],[3770,2],[[3771,3773],2],[[3774,3775],3],[[3776,3780],2],[3781,3],[3782,2],[3783,3],[[3784,3789],2],[[3790,3791],3],[[3792,3801],2],[[3802,3803],3],[3804,1,\"\u0EAB\u0E99\"],[3805,1,\"\u0EAB\u0EA1\"],[[3806,3807],2],[[3808,3839],3],[3840,2],[[3841,3850],2],[3851,2],[3852,1,\"\u0F0B\"],[[3853,3863],2],[[3864,3865],2],[[3866,3871],2],[[3872,3881],2],[[3882,3892],2],[3893,2],[3894,2],[3895,2],[3896,2],[3897,2],[[3898,3901],2],[[3902,3906],2],[3907,1,\"\u0F42\u0FB7\"],[[3908,3911],2],[3912,3],[[3913,3916],2],[3917,1,\"\u0F4C\u0FB7\"],[[3918,3921],2],[3922,1,\"\u0F51\u0FB7\"],[[3923,3926],2],[3927,1,\"\u0F56\u0FB7\"],[[3928,3931],2],[3932,1,\"\u0F5B\u0FB7\"],[[3933,3944],2],[3945,1,\"\u0F40\u0FB5\"],[3946,2],[[3947,3948],2],[[3949,3952],3],[[3953,3954],2],[3955,1,\"\u0F71\u0F72\"],[3956,2],[3957,1,\"\u0F71\u0F74\"],[3958,1,\"\u0FB2\u0F80\"],[3959,1,\"\u0FB2\u0F71\u0F80\"],[3960,1,\"\u0FB3\u0F80\"],[3961,1,\"\u0FB3\u0F71\u0F80\"],[[3962,3968],2],[3969,1,\"\u0F71\u0F80\"],[[3970,3972],2],[3973,2],[[3974,3979],2],[[3980,3983],2],[[3984,3986],2],[3987,1,\"\u0F92\u0FB7\"],[[3988,3989],2],[3990,2],[3991,2],[3992,3],[[3993,3996],2],[3997,1,\"\u0F9C\u0FB7\"],[[3998,4001],2],[4002,1,\"\u0FA1\u0FB7\"],[[4003,4006],2],[4007,1,\"\u0FA6\u0FB7\"],[[4008,4011],2],[4012,1,\"\u0FAB\u0FB7\"],[4013,2],[[4014,4016],2],[[4017,4023],2],[4024,2],[4025,1,\"\u0F90\u0FB5\"],[[4026,4028],2],[4029,3],[[4030,4037],2],[4038,2],[[4039,4044],2],[4045,3],[4046,2],[4047,2],[[4048,4049],2],[[4050,4052],2],[[4053,4056],2],[[4057,4058],2],[[4059,4095],3],[[4096,4129],2],[4130,2],[[4131,4135],2],[4136,2],[[4137,4138],2],[4139,2],[[4140,4146],2],[[4147,4149],2],[[4150,4153],2],[[4154,4159],2],[[4160,4169],2],[[4170,4175],2],[[4176,4185],2],[[4186,4249],2],[[4250,4253],2],[[4254,4255],2],[[4256,4293],3],[4294,3],[4295,1,\"\u2D27\"],[[4296,4300],3],[4301,1,\"\u2D2D\"],[[4302,4303],3],[[4304,4342],2],[[4343,4344],2],[[4345,4346],2],[4347,2],[4348,1,\"\u10DC\"],[[4349,4351],2],[[4352,4441],2],[[4442,4446],2],[[4447,4448],3],[[4449,4514],2],[[4515,4519],2],[[4520,4601],2],[[4602,4607],2],[[4608,4614],2],[4615,2],[[4616,4678],2],[4679,2],[4680,2],[4681,3],[[4682,4685],2],[[4686,4687],3],[[4688,4694],2],[4695,3],[4696,2],[4697,3],[[4698,4701],2],[[4702,4703],3],[[4704,4742],2],[4743,2],[4744,2],[4745,3],[[4746,4749],2],[[4750,4751],3],[[4752,4782],2],[4783,2],[4784,2],[4785,3],[[4786,4789],2],[[4790,4791],3],[[4792,4798],2],[4799,3],[4800,2],[4801,3],[[4802,4805],2],[[4806,4807],3],[[4808,4814],2],[4815,2],[[4816,4822],2],[4823,3],[[4824,4846],2],[4847,2],[[4848,4878],2],[4879,2],[4880,2],[4881,3],[[4882,4885],2],[[4886,4887],3],[[4888,4894],2],[4895,2],[[4896,4934],2],[4935,2],[[4936,4954],2],[[4955,4956],3],[[4957,4958],2],[4959,2],[4960,2],[[4961,4988],2],[[4989,4991],3],[[4992,5007],2],[[5008,5017],2],[[5018,5023],3],[[5024,5108],2],[5109,2],[[5110,5111],3],[5112,1,\"\u13F0\"],[5113,1,\"\u13F1\"],[5114,1,\"\u13F2\"],[5115,1,\"\u13F3\"],[5116,1,\"\u13F4\"],[5117,1,\"\u13F5\"],[[5118,5119],3],[5120,2],[[5121,5740],2],[[5741,5742],2],[[5743,5750],2],[[5751,5759],2],[5760,3],[[5761,5786],2],[[5787,5788],2],[[5789,5791],3],[[5792,5866],2],[[5867,5872],2],[[5873,5880],2],[[5881,5887],3],[[5888,5900],2],[5901,2],[[5902,5908],2],[5909,2],[[5910,5918],3],[5919,2],[[5920,5940],2],[[5941,5942],2],[[5943,5951],3],[[5952,5971],2],[[5972,5983],3],[[5984,5996],2],[5997,3],[[5998,6000],2],[6001,3],[[6002,6003],2],[[6004,6015],3],[[6016,6067],2],[[6068,6069],3],[[6070,6099],2],[[6100,6102],2],[6103,2],[[6104,6107],2],[6108,2],[6109,2],[[6110,6111],3],[[6112,6121],2],[[6122,6127],3],[[6128,6137],2],[[6138,6143],3],[[6144,6149],2],[6150,3],[[6151,6154],2],[[6155,6157],7],[6158,3],[6159,7],[[6160,6169],2],[[6170,6175],3],[[6176,6263],2],[6264,2],[[6265,6271],3],[[6272,6313],2],[6314,2],[[6315,6319],3],[[6320,6389],2],[[6390,6399],3],[[6400,6428],2],[[6429,6430],2],[6431,3],[[6432,6443],2],[[6444,6447],3],[[6448,6459],2],[[6460,6463],3],[6464,2],[[6465,6467],3],[[6468,6469],2],[[6470,6509],2],[[6510,6511],3],[[6512,6516],2],[[6517,6527],3],[[6528,6569],2],[[6570,6571],2],[[6572,6575],3],[[6576,6601],2],[[6602,6607],3],[[6608,6617],2],[6618,2],[[6619,6621],3],[[6622,6623],2],[[6624,6655],2],[[6656,6683],2],[[6684,6685],3],[[6686,6687],2],[[6688,6750],2],[6751,3],[[6752,6780],2],[[6781,6782],3],[[6783,6793],2],[[6794,6799],3],[[6800,6809],2],[[6810,6815],3],[[6816,6822],2],[6823,2],[[6824,6829],2],[[6830,6831],3],[[6832,6845],2],[6846,2],[[6847,6848],2],[[6849,6862],2],[[6863,6911],3],[[6912,6987],2],[6988,2],[[6989,6991],3],[[6992,7001],2],[[7002,7018],2],[[7019,7027],2],[[7028,7036],2],[[7037,7038],2],[7039,3],[[7040,7082],2],[[7083,7085],2],[[7086,7097],2],[[7098,7103],2],[[7104,7155],2],[[7156,7163],3],[[7164,7167],2],[[7168,7223],2],[[7224,7226],3],[[7227,7231],2],[[7232,7241],2],[[7242,7244],3],[[7245,7293],2],[[7294,7295],2],[7296,1,\"\u0432\"],[7297,1,\"\u0434\"],[7298,1,\"\u043E\"],[7299,1,\"\u0441\"],[[7300,7301],1,\"\u0442\"],[7302,1,\"\u044A\"],[7303,1,\"\u0463\"],[7304,1,\"\uA64B\"],[[7305,7311],3],[7312,1,\"\u10D0\"],[7313,1,\"\u10D1\"],[7314,1,\"\u10D2\"],[7315,1,\"\u10D3\"],[7316,1,\"\u10D4\"],[7317,1,\"\u10D5\"],[7318,1,\"\u10D6\"],[7319,1,\"\u10D7\"],[7320,1,\"\u10D8\"],[7321,1,\"\u10D9\"],[7322,1,\"\u10DA\"],[7323,1,\"\u10DB\"],[7324,1,\"\u10DC\"],[7325,1,\"\u10DD\"],[7326,1,\"\u10DE\"],[7327,1,\"\u10DF\"],[7328,1,\"\u10E0\"],[7329,1,\"\u10E1\"],[7330,1,\"\u10E2\"],[7331,1,\"\u10E3\"],[7332,1,\"\u10E4\"],[7333,1,\"\u10E5\"],[7334,1,\"\u10E6\"],[7335,1,\"\u10E7\"],[7336,1,\"\u10E8\"],[7337,1,\"\u10E9\"],[7338,1,\"\u10EA\"],[7339,1,\"\u10EB\"],[7340,1,\"\u10EC\"],[7341,1,\"\u10ED\"],[7342,1,\"\u10EE\"],[7343,1,\"\u10EF\"],[7344,1,\"\u10F0\"],[7345,1,\"\u10F1\"],[7346,1,\"\u10F2\"],[7347,1,\"\u10F3\"],[7348,1,\"\u10F4\"],[7349,1,\"\u10F5\"],[7350,1,\"\u10F6\"],[7351,1,\"\u10F7\"],[7352,1,\"\u10F8\"],[7353,1,\"\u10F9\"],[7354,1,\"\u10FA\"],[[7355,7356],3],[7357,1,\"\u10FD\"],[7358,1,\"\u10FE\"],[7359,1,\"\u10FF\"],[[7360,7367],2],[[7368,7375],3],[[7376,7378],2],[7379,2],[[7380,7410],2],[[7411,7414],2],[7415,2],[[7416,7417],2],[7418,2],[[7419,7423],3],[[7424,7467],2],[7468,1,\"a\"],[7469,1,\"\u00E6\"],[7470,1,\"b\"],[7471,2],[7472,1,\"d\"],[7473,1,\"e\"],[7474,1,\"\u01DD\"],[7475,1,\"g\"],[7476,1,\"h\"],[7477,1,\"i\"],[7478,1,\"j\"],[7479,1,\"k\"],[7480,1,\"l\"],[7481,1,\"m\"],[7482,1,\"n\"],[7483,2],[7484,1,\"o\"],[7485,1,\"\u0223\"],[7486,1,\"p\"],[7487,1,\"r\"],[7488,1,\"t\"],[7489,1,\"u\"],[7490,1,\"w\"],[7491,1,\"a\"],[7492,1,\"\u0250\"],[7493,1,\"\u0251\"],[7494,1,\"\u1D02\"],[7495,1,\"b\"],[7496,1,\"d\"],[7497,1,\"e\"],[7498,1,\"\u0259\"],[7499,1,\"\u025B\"],[7500,1,\"\u025C\"],[7501,1,\"g\"],[7502,2],[7503,1,\"k\"],[7504,1,\"m\"],[7505,1,\"\u014B\"],[7506,1,\"o\"],[7507,1,\"\u0254\"],[7508,1,\"\u1D16\"],[7509,1,\"\u1D17\"],[7510,1,\"p\"],[7511,1,\"t\"],[7512,1,\"u\"],[7513,1,\"\u1D1D\"],[7514,1,\"\u026F\"],[7515,1,\"v\"],[7516,1,\"\u1D25\"],[7517,1,\"\u03B2\"],[7518,1,\"\u03B3\"],[7519,1,\"\u03B4\"],[7520,1,\"\u03C6\"],[7521,1,\"\u03C7\"],[7522,1,\"i\"],[7523,1,\"r\"],[7524,1,\"u\"],[7525,1,\"v\"],[7526,1,\"\u03B2\"],[7527,1,\"\u03B3\"],[7528,1,\"\u03C1\"],[7529,1,\"\u03C6\"],[7530,1,\"\u03C7\"],[7531,2],[[7532,7543],2],[7544,1,\"\u043D\"],[[7545,7578],2],[7579,1,\"\u0252\"],[7580,1,\"c\"],[7581,1,\"\u0255\"],[7582,1,\"\u00F0\"],[7583,1,\"\u025C\"],[7584,1,\"f\"],[7585,1,\"\u025F\"],[7586,1,\"\u0261\"],[7587,1,\"\u0265\"],[7588,1,\"\u0268\"],[7589,1,\"\u0269\"],[7590,1,\"\u026A\"],[7591,1,\"\u1D7B\"],[7592,1,\"\u029D\"],[7593,1,\"\u026D\"],[7594,1,\"\u1D85\"],[7595,1,\"\u029F\"],[7596,1,\"\u0271\"],[7597,1,\"\u0270\"],[7598,1,\"\u0272\"],[7599,1,\"\u0273\"],[7600,1,\"\u0274\"],[7601,1,\"\u0275\"],[7602,1,\"\u0278\"],[7603,1,\"\u0282\"],[7604,1,\"\u0283\"],[7605,1,\"\u01AB\"],[7606,1,\"\u0289\"],[7607,1,\"\u028A\"],[7608,1,\"\u1D1C\"],[7609,1,\"\u028B\"],[7610,1,\"\u028C\"],[7611,1,\"z\"],[7612,1,\"\u0290\"],[7613,1,\"\u0291\"],[7614,1,\"\u0292\"],[7615,1,\"\u03B8\"],[[7616,7619],2],[[7620,7626],2],[[7627,7654],2],[[7655,7669],2],[[7670,7673],2],[7674,2],[7675,2],[7676,2],[7677,2],[[7678,7679],2],[7680,1,\"\u1E01\"],[7681,2],[7682,1,\"\u1E03\"],[7683,2],[7684,1,\"\u1E05\"],[7685,2],[7686,1,\"\u1E07\"],[7687,2],[7688,1,\"\u1E09\"],[7689,2],[7690,1,\"\u1E0B\"],[7691,2],[7692,1,\"\u1E0D\"],[7693,2],[7694,1,\"\u1E0F\"],[7695,2],[7696,1,\"\u1E11\"],[7697,2],[7698,1,\"\u1E13\"],[7699,2],[7700,1,\"\u1E15\"],[7701,2],[7702,1,\"\u1E17\"],[7703,2],[7704,1,\"\u1E19\"],[7705,2],[7706,1,\"\u1E1B\"],[7707,2],[7708,1,\"\u1E1D\"],[7709,2],[7710,1,\"\u1E1F\"],[7711,2],[7712,1,\"\u1E21\"],[7713,2],[7714,1,\"\u1E23\"],[7715,2],[7716,1,\"\u1E25\"],[7717,2],[7718,1,\"\u1E27\"],[7719,2],[7720,1,\"\u1E29\"],[7721,2],[7722,1,\"\u1E2B\"],[7723,2],[7724,1,\"\u1E2D\"],[7725,2],[7726,1,\"\u1E2F\"],[7727,2],[7728,1,\"\u1E31\"],[7729,2],[7730,1,\"\u1E33\"],[7731,2],[7732,1,\"\u1E35\"],[7733,2],[7734,1,\"\u1E37\"],[7735,2],[7736,1,\"\u1E39\"],[7737,2],[7738,1,\"\u1E3B\"],[7739,2],[7740,1,\"\u1E3D\"],[7741,2],[7742,1,\"\u1E3F\"],[7743,2],[7744,1,\"\u1E41\"],[7745,2],[7746,1,\"\u1E43\"],[7747,2],[7748,1,\"\u1E45\"],[7749,2],[7750,1,\"\u1E47\"],[7751,2],[7752,1,\"\u1E49\"],[7753,2],[7754,1,\"\u1E4B\"],[7755,2],[7756,1,\"\u1E4D\"],[7757,2],[7758,1,\"\u1E4F\"],[7759,2],[7760,1,\"\u1E51\"],[7761,2],[7762,1,\"\u1E53\"],[7763,2],[7764,1,\"\u1E55\"],[7765,2],[7766,1,\"\u1E57\"],[7767,2],[7768,1,\"\u1E59\"],[7769,2],[7770,1,\"\u1E5B\"],[7771,2],[7772,1,\"\u1E5D\"],[7773,2],[7774,1,\"\u1E5F\"],[7775,2],[7776,1,\"\u1E61\"],[7777,2],[7778,1,\"\u1E63\"],[7779,2],[7780,1,\"\u1E65\"],[7781,2],[7782,1,\"\u1E67\"],[7783,2],[7784,1,\"\u1E69\"],[7785,2],[7786,1,\"\u1E6B\"],[7787,2],[7788,1,\"\u1E6D\"],[7789,2],[7790,1,\"\u1E6F\"],[7791,2],[7792,1,\"\u1E71\"],[7793,2],[7794,1,\"\u1E73\"],[7795,2],[7796,1,\"\u1E75\"],[7797,2],[7798,1,\"\u1E77\"],[7799,2],[7800,1,\"\u1E79\"],[7801,2],[7802,1,\"\u1E7B\"],[7803,2],[7804,1,\"\u1E7D\"],[7805,2],[7806,1,\"\u1E7F\"],[7807,2],[7808,1,\"\u1E81\"],[7809,2],[7810,1,\"\u1E83\"],[7811,2],[7812,1,\"\u1E85\"],[7813,2],[7814,1,\"\u1E87\"],[7815,2],[7816,1,\"\u1E89\"],[7817,2],[7818,1,\"\u1E8B\"],[7819,2],[7820,1,\"\u1E8D\"],[7821,2],[7822,1,\"\u1E8F\"],[7823,2],[7824,1,\"\u1E91\"],[7825,2],[7826,1,\"\u1E93\"],[7827,2],[7828,1,\"\u1E95\"],[[7829,7833],2],[7834,1,\"a\u02BE\"],[7835,1,\"\u1E61\"],[[7836,7837],2],[7838,1,\"ss\"],[7839,2],[7840,1,\"\u1EA1\"],[7841,2],[7842,1,\"\u1EA3\"],[7843,2],[7844,1,\"\u1EA5\"],[7845,2],[7846,1,\"\u1EA7\"],[7847,2],[7848,1,\"\u1EA9\"],[7849,2],[7850,1,\"\u1EAB\"],[7851,2],[7852,1,\"\u1EAD\"],[7853,2],[7854,1,\"\u1EAF\"],[7855,2],[7856,1,\"\u1EB1\"],[7857,2],[7858,1,\"\u1EB3\"],[7859,2],[7860,1,\"\u1EB5\"],[7861,2],[7862,1,\"\u1EB7\"],[7863,2],[7864,1,\"\u1EB9\"],[7865,2],[7866,1,\"\u1EBB\"],[7867,2],[7868,1,\"\u1EBD\"],[7869,2],[7870,1,\"\u1EBF\"],[7871,2],[7872,1,\"\u1EC1\"],[7873,2],[7874,1,\"\u1EC3\"],[7875,2],[7876,1,\"\u1EC5\"],[7877,2],[7878,1,\"\u1EC7\"],[7879,2],[7880,1,\"\u1EC9\"],[7881,2],[7882,1,\"\u1ECB\"],[7883,2],[7884,1,\"\u1ECD\"],[7885,2],[7886,1,\"\u1ECF\"],[7887,2],[7888,1,\"\u1ED1\"],[7889,2],[7890,1,\"\u1ED3\"],[7891,2],[7892,1,\"\u1ED5\"],[7893,2],[7894,1,\"\u1ED7\"],[7895,2],[7896,1,\"\u1ED9\"],[7897,2],[7898,1,\"\u1EDB\"],[7899,2],[7900,1,\"\u1EDD\"],[7901,2],[7902,1,\"\u1EDF\"],[7903,2],[7904,1,\"\u1EE1\"],[7905,2],[7906,1,\"\u1EE3\"],[7907,2],[7908,1,\"\u1EE5\"],[7909,2],[7910,1,\"\u1EE7\"],[7911,2],[7912,1,\"\u1EE9\"],[7913,2],[7914,1,\"\u1EEB\"],[7915,2],[7916,1,\"\u1EED\"],[7917,2],[7918,1,\"\u1EEF\"],[7919,2],[7920,1,\"\u1EF1\"],[7921,2],[7922,1,\"\u1EF3\"],[7923,2],[7924,1,\"\u1EF5\"],[7925,2],[7926,1,\"\u1EF7\"],[7927,2],[7928,1,\"\u1EF9\"],[7929,2],[7930,1,\"\u1EFB\"],[7931,2],[7932,1,\"\u1EFD\"],[7933,2],[7934,1,\"\u1EFF\"],[7935,2],[[7936,7943],2],[7944,1,\"\u1F00\"],[7945,1,\"\u1F01\"],[7946,1,\"\u1F02\"],[7947,1,\"\u1F03\"],[7948,1,\"\u1F04\"],[7949,1,\"\u1F05\"],[7950,1,\"\u1F06\"],[7951,1,\"\u1F07\"],[[7952,7957],2],[[7958,7959],3],[7960,1,\"\u1F10\"],[7961,1,\"\u1F11\"],[7962,1,\"\u1F12\"],[7963,1,\"\u1F13\"],[7964,1,\"\u1F14\"],[7965,1,\"\u1F15\"],[[7966,7967],3],[[7968,7975],2],[7976,1,\"\u1F20\"],[7977,1,\"\u1F21\"],[7978,1,\"\u1F22\"],[7979,1,\"\u1F23\"],[7980,1,\"\u1F24\"],[7981,1,\"\u1F25\"],[7982,1,\"\u1F26\"],[7983,1,\"\u1F27\"],[[7984,7991],2],[7992,1,\"\u1F30\"],[7993,1,\"\u1F31\"],[7994,1,\"\u1F32\"],[7995,1,\"\u1F33\"],[7996,1,\"\u1F34\"],[7997,1,\"\u1F35\"],[7998,1,\"\u1F36\"],[7999,1,\"\u1F37\"],[[8000,8005],2],[[8006,8007],3],[8008,1,\"\u1F40\"],[8009,1,\"\u1F41\"],[8010,1,\"\u1F42\"],[8011,1,\"\u1F43\"],[8012,1,\"\u1F44\"],[8013,1,\"\u1F45\"],[[8014,8015],3],[[8016,8023],2],[8024,3],[8025,1,\"\u1F51\"],[8026,3],[8027,1,\"\u1F53\"],[8028,3],[8029,1,\"\u1F55\"],[8030,3],[8031,1,\"\u1F57\"],[[8032,8039],2],[8040,1,\"\u1F60\"],[8041,1,\"\u1F61\"],[8042,1,\"\u1F62\"],[8043,1,\"\u1F63\"],[8044,1,\"\u1F64\"],[8045,1,\"\u1F65\"],[8046,1,\"\u1F66\"],[8047,1,\"\u1F67\"],[8048,2],[8049,1,\"\u03AC\"],[8050,2],[8051,1,\"\u03AD\"],[8052,2],[8053,1,\"\u03AE\"],[8054,2],[8055,1,\"\u03AF\"],[8056,2],[8057,1,\"\u03CC\"],[8058,2],[8059,1,\"\u03CD\"],[8060,2],[8061,1,\"\u03CE\"],[[8062,8063],3],[8064,1,\"\u1F00\u03B9\"],[8065,1,\"\u1F01\u03B9\"],[8066,1,\"\u1F02\u03B9\"],[8067,1,\"\u1F03\u03B9\"],[8068,1,\"\u1F04\u03B9\"],[8069,1,\"\u1F05\u03B9\"],[8070,1,\"\u1F06\u03B9\"],[8071,1,\"\u1F07\u03B9\"],[8072,1,\"\u1F00\u03B9\"],[8073,1,\"\u1F01\u03B9\"],[8074,1,\"\u1F02\u03B9\"],[8075,1,\"\u1F03\u03B9\"],[8076,1,\"\u1F04\u03B9\"],[8077,1,\"\u1F05\u03B9\"],[8078,1,\"\u1F06\u03B9\"],[8079,1,\"\u1F07\u03B9\"],[8080,1,\"\u1F20\u03B9\"],[8081,1,\"\u1F21\u03B9\"],[8082,1,\"\u1F22\u03B9\"],[8083,1,\"\u1F23\u03B9\"],[8084,1,\"\u1F24\u03B9\"],[8085,1,\"\u1F25\u03B9\"],[8086,1,\"\u1F26\u03B9\"],[8087,1,\"\u1F27\u03B9\"],[8088,1,\"\u1F20\u03B9\"],[8089,1,\"\u1F21\u03B9\"],[8090,1,\"\u1F22\u03B9\"],[8091,1,\"\u1F23\u03B9\"],[8092,1,\"\u1F24\u03B9\"],[8093,1,\"\u1F25\u03B9\"],[8094,1,\"\u1F26\u03B9\"],[8095,1,\"\u1F27\u03B9\"],[8096,1,\"\u1F60\u03B9\"],[8097,1,\"\u1F61\u03B9\"],[8098,1,\"\u1F62\u03B9\"],[8099,1,\"\u1F63\u03B9\"],[8100,1,\"\u1F64\u03B9\"],[8101,1,\"\u1F65\u03B9\"],[8102,1,\"\u1F66\u03B9\"],[8103,1,\"\u1F67\u03B9\"],[8104,1,\"\u1F60\u03B9\"],[8105,1,\"\u1F61\u03B9\"],[8106,1,\"\u1F62\u03B9\"],[8107,1,\"\u1F63\u03B9\"],[8108,1,\"\u1F64\u03B9\"],[8109,1,\"\u1F65\u03B9\"],[8110,1,\"\u1F66\u03B9\"],[8111,1,\"\u1F67\u03B9\"],[[8112,8113],2],[8114,1,\"\u1F70\u03B9\"],[8115,1,\"\u03B1\u03B9\"],[8116,1,\"\u03AC\u03B9\"],[8117,3],[8118,2],[8119,1,\"\u1FB6\u03B9\"],[8120,1,\"\u1FB0\"],[8121,1,\"\u1FB1\"],[8122,1,\"\u1F70\"],[8123,1,\"\u03AC\"],[8124,1,\"\u03B1\u03B9\"],[8125,5,\" \u0313\"],[8126,1,\"\u03B9\"],[8127,5,\" \u0313\"],[8128,5,\" \u0342\"],[8129,5,\" \u0308\u0342\"],[8130,1,\"\u1F74\u03B9\"],[8131,1,\"\u03B7\u03B9\"],[8132,1,\"\u03AE\u03B9\"],[8133,3],[8134,2],[8135,1,\"\u1FC6\u03B9\"],[8136,1,\"\u1F72\"],[8137,1,\"\u03AD\"],[8138,1,\"\u1F74\"],[8139,1,\"\u03AE\"],[8140,1,\"\u03B7\u03B9\"],[8141,5,\" \u0313\u0300\"],[8142,5,\" \u0313\u0301\"],[8143,5,\" \u0313\u0342\"],[[8144,8146],2],[8147,1,\"\u0390\"],[[8148,8149],3],[[8150,8151],2],[8152,1,\"\u1FD0\"],[8153,1,\"\u1FD1\"],[8154,1,\"\u1F76\"],[8155,1,\"\u03AF\"],[8156,3],[8157,5,\" \u0314\u0300\"],[8158,5,\" \u0314\u0301\"],[8159,5,\" \u0314\u0342\"],[[8160,8162],2],[8163,1,\"\u03B0\"],[[8164,8167],2],[8168,1,\"\u1FE0\"],[8169,1,\"\u1FE1\"],[8170,1,\"\u1F7A\"],[8171,1,\"\u03CD\"],[8172,1,\"\u1FE5\"],[8173,5,\" \u0308\u0300\"],[8174,5,\" \u0308\u0301\"],[8175,5,\"`\"],[[8176,8177],3],[8178,1,\"\u1F7C\u03B9\"],[8179,1,\"\u03C9\u03B9\"],[8180,1,\"\u03CE\u03B9\"],[8181,3],[8182,2],[8183,1,\"\u1FF6\u03B9\"],[8184,1,\"\u1F78\"],[8185,1,\"\u03CC\"],[8186,1,\"\u1F7C\"],[8187,1,\"\u03CE\"],[8188,1,\"\u03C9\u03B9\"],[8189,5,\" \u0301\"],[8190,5,\" \u0314\"],[8191,3],[[8192,8202],5,\" \"],[8203,7],[[8204,8205],6,\"\"],[[8206,8207],3],[8208,2],[8209,1,\"\u2010\"],[[8210,8214],2],[8215,5,\" \u0333\"],[[8216,8227],2],[[8228,8230],3],[8231,2],[[8232,8238],3],[8239,5,\" \"],[[8240,8242],2],[8243,1,\"\u2032\u2032\"],[8244,1,\"\u2032\u2032\u2032\"],[8245,2],[8246,1,\"\u2035\u2035\"],[8247,1,\"\u2035\u2035\u2035\"],[[8248,8251],2],[8252,5,\"!!\"],[8253,2],[8254,5,\" \u0305\"],[[8255,8262],2],[8263,5,\"??\"],[8264,5,\"?!\"],[8265,5,\"!?\"],[[8266,8269],2],[[8270,8274],2],[[8275,8276],2],[[8277,8278],2],[8279,1,\"\u2032\u2032\u2032\u2032\"],[[8280,8286],2],[8287,5,\" \"],[8288,7],[[8289,8291],3],[8292,7],[8293,3],[[8294,8297],3],[[8298,8303],3],[8304,1,\"0\"],[8305,1,\"i\"],[[8306,8307],3],[8308,1,\"4\"],[8309,1,\"5\"],[8310,1,\"6\"],[8311,1,\"7\"],[8312,1,\"8\"],[8313,1,\"9\"],[8314,5,\"+\"],[8315,1,\"\u2212\"],[8316,5,\"=\"],[8317,5,\"(\"],[8318,5,\")\"],[8319,1,\"n\"],[8320,1,\"0\"],[8321,1,\"1\"],[8322,1,\"2\"],[8323,1,\"3\"],[8324,1,\"4\"],[8325,1,\"5\"],[8326,1,\"6\"],[8327,1,\"7\"],[8328,1,\"8\"],[8329,1,\"9\"],[8330,5,\"+\"],[8331,1,\"\u2212\"],[8332,5,\"=\"],[8333,5,\"(\"],[8334,5,\")\"],[8335,3],[8336,1,\"a\"],[8337,1,\"e\"],[8338,1,\"o\"],[8339,1,\"x\"],[8340,1,\"\u0259\"],[8341,1,\"h\"],[8342,1,\"k\"],[8343,1,\"l\"],[8344,1,\"m\"],[8345,1,\"n\"],[8346,1,\"p\"],[8347,1,\"s\"],[8348,1,\"t\"],[[8349,8351],3],[[8352,8359],2],[8360,1,\"rs\"],[[8361,8362],2],[8363,2],[8364,2],[[8365,8367],2],[[8368,8369],2],[[8370,8373],2],[[8374,8376],2],[8377,2],[8378,2],[[8379,8381],2],[8382,2],[8383,2],[8384,2],[[8385,8399],3],[[8400,8417],2],[[8418,8419],2],[[8420,8426],2],[8427,2],[[8428,8431],2],[8432,2],[[8433,8447],3],[8448,5,\"a/c\"],[8449,5,\"a/s\"],[8450,1,\"c\"],[8451,1,\"\u00B0c\"],[8452,2],[8453,5,\"c/o\"],[8454,5,\"c/u\"],[8455,1,\"\u025B\"],[8456,2],[8457,1,\"\u00B0f\"],[8458,1,\"g\"],[[8459,8462],1,\"h\"],[8463,1,\"\u0127\"],[[8464,8465],1,\"i\"],[[8466,8467],1,\"l\"],[8468,2],[8469,1,\"n\"],[8470,1,\"no\"],[[8471,8472],2],[8473,1,\"p\"],[8474,1,\"q\"],[[8475,8477],1,\"r\"],[[8478,8479],2],[8480,1,\"sm\"],[8481,1,\"tel\"],[8482,1,\"tm\"],[8483,2],[8484,1,\"z\"],[8485,2],[8486,1,\"\u03C9\"],[8487,2],[8488,1,\"z\"],[8489,2],[8490,1,\"k\"],[8491,1,\"\u00E5\"],[8492,1,\"b\"],[8493,1,\"c\"],[8494,2],[[8495,8496],1,\"e\"],[8497,1,\"f\"],[8498,3],[8499,1,\"m\"],[8500,1,\"o\"],[8501,1,\"\u05D0\"],[8502,1,\"\u05D1\"],[8503,1,\"\u05D2\"],[8504,1,\"\u05D3\"],[8505,1,\"i\"],[8506,2],[8507,1,\"fax\"],[8508,1,\"\u03C0\"],[[8509,8510],1,\"\u03B3\"],[8511,1,\"\u03C0\"],[8512,1,\"\u2211\"],[[8513,8516],2],[[8517,8518],1,\"d\"],[8519,1,\"e\"],[8520,1,\"i\"],[8521,1,\"j\"],[[8522,8523],2],[8524,2],[8525,2],[8526,2],[8527,2],[8528,1,\"1\u20447\"],[8529,1,\"1\u20449\"],[8530,1,\"1\u204410\"],[8531,1,\"1\u20443\"],[8532,1,\"2\u20443\"],[8533,1,\"1\u20445\"],[8534,1,\"2\u20445\"],[8535,1,\"3\u20445\"],[8536,1,\"4\u20445\"],[8537,1,\"1\u20446\"],[8538,1,\"5\u20446\"],[8539,1,\"1\u20448\"],[8540,1,\"3\u20448\"],[8541,1,\"5\u20448\"],[8542,1,\"7\u20448\"],[8543,1,\"1\u2044\"],[8544,1,\"i\"],[8545,1,\"ii\"],[8546,1,\"iii\"],[8547,1,\"iv\"],[8548,1,\"v\"],[8549,1,\"vi\"],[8550,1,\"vii\"],[8551,1,\"viii\"],[8552,1,\"ix\"],[8553,1,\"x\"],[8554,1,\"xi\"],[8555,1,\"xii\"],[8556,1,\"l\"],[8557,1,\"c\"],[8558,1,\"d\"],[8559,1,\"m\"],[8560,1,\"i\"],[8561,1,\"ii\"],[8562,1,\"iii\"],[8563,1,\"iv\"],[8564,1,\"v\"],[8565,1,\"vi\"],[8566,1,\"vii\"],[8567,1,\"viii\"],[8568,1,\"ix\"],[8569,1,\"x\"],[8570,1,\"xi\"],[8571,1,\"xii\"],[8572,1,\"l\"],[8573,1,\"c\"],[8574,1,\"d\"],[8575,1,\"m\"],[[8576,8578],2],[8579,3],[8580,2],[[8581,8584],2],[8585,1,\"0\u20443\"],[[8586,8587],2],[[8588,8591],3],[[8592,8682],2],[[8683,8691],2],[[8692,8703],2],[[8704,8747],2],[8748,1,\"\u222B\u222B\"],[8749,1,\"\u222B\u222B\u222B\"],[8750,2],[8751,1,\"\u222E\u222E\"],[8752,1,\"\u222E\u222E\u222E\"],[[8753,8799],2],[8800,4],[[8801,8813],2],[[8814,8815],4],[[8816,8945],2],[[8946,8959],2],[8960,2],[8961,2],[[8962,9000],2],[9001,1,\"\u3008\"],[9002,1,\"\u3009\"],[[9003,9082],2],[9083,2],[9084,2],[[9085,9114],2],[[9115,9166],2],[[9167,9168],2],[[9169,9179],2],[[9180,9191],2],[9192,2],[[9193,9203],2],[[9204,9210],2],[[9211,9214],2],[9215,2],[[9216,9252],2],[[9253,9254],2],[[9255,9279],3],[[9280,9290],2],[[9291,9311],3],[9312,1,\"1\"],[9313,1,\"2\"],[9314,1,\"3\"],[9315,1,\"4\"],[9316,1,\"5\"],[9317,1,\"6\"],[9318,1,\"7\"],[9319,1,\"8\"],[9320,1,\"9\"],[9321,1,\"10\"],[9322,1,\"11\"],[9323,1,\"12\"],[9324,1,\"13\"],[9325,1,\"14\"],[9326,1,\"15\"],[9327,1,\"16\"],[9328,1,\"17\"],[9329,1,\"18\"],[9330,1,\"19\"],[9331,1,\"20\"],[9332,5,\"(1)\"],[9333,5,\"(2)\"],[9334,5,\"(3)\"],[9335,5,\"(4)\"],[9336,5,\"(5)\"],[9337,5,\"(6)\"],[9338,5,\"(7)\"],[9339,5,\"(8)\"],[9340,5,\"(9)\"],[9341,5,\"(10)\"],[9342,5,\"(11)\"],[9343,5,\"(12)\"],[9344,5,\"(13)\"],[9345,5,\"(14)\"],[9346,5,\"(15)\"],[9347,5,\"(16)\"],[9348,5,\"(17)\"],[9349,5,\"(18)\"],[9350,5,\"(19)\"],[9351,5,\"(20)\"],[[9352,9371],3],[9372,5,\"(a)\"],[9373,5,\"(b)\"],[9374,5,\"(c)\"],[9375,5,\"(d)\"],[9376,5,\"(e)\"],[9377,5,\"(f)\"],[9378,5,\"(g)\"],[9379,5,\"(h)\"],[9380,5,\"(i)\"],[9381,5,\"(j)\"],[9382,5,\"(k)\"],[9383,5,\"(l)\"],[9384,5,\"(m)\"],[9385,5,\"(n)\"],[9386,5,\"(o)\"],[9387,5,\"(p)\"],[9388,5,\"(q)\"],[9389,5,\"(r)\"],[9390,5,\"(s)\"],[9391,5,\"(t)\"],[9392,5,\"(u)\"],[9393,5,\"(v)\"],[9394,5,\"(w)\"],[9395,5,\"(x)\"],[9396,5,\"(y)\"],[9397,5,\"(z)\"],[9398,1,\"a\"],[9399,1,\"b\"],[9400,1,\"c\"],[9401,1,\"d\"],[9402,1,\"e\"],[9403,1,\"f\"],[9404,1,\"g\"],[9405,1,\"h\"],[9406,1,\"i\"],[9407,1,\"j\"],[9408,1,\"k\"],[9409,1,\"l\"],[9410,1,\"m\"],[9411,1,\"n\"],[9412,1,\"o\"],[9413,1,\"p\"],[9414,1,\"q\"],[9415,1,\"r\"],[9416,1,\"s\"],[9417,1,\"t\"],[9418,1,\"u\"],[9419,1,\"v\"],[9420,1,\"w\"],[9421,1,\"x\"],[9422,1,\"y\"],[9423,1,\"z\"],[9424,1,\"a\"],[9425,1,\"b\"],[9426,1,\"c\"],[9427,1,\"d\"],[9428,1,\"e\"],[9429,1,\"f\"],[9430,1,\"g\"],[9431,1,\"h\"],[9432,1,\"i\"],[9433,1,\"j\"],[9434,1,\"k\"],[9435,1,\"l\"],[9436,1,\"m\"],[9437,1,\"n\"],[9438,1,\"o\"],[9439,1,\"p\"],[9440,1,\"q\"],[9441,1,\"r\"],[9442,1,\"s\"],[9443,1,\"t\"],[9444,1,\"u\"],[9445,1,\"v\"],[9446,1,\"w\"],[9447,1,\"x\"],[9448,1,\"y\"],[9449,1,\"z\"],[9450,1,\"0\"],[[9451,9470],2],[9471,2],[[9472,9621],2],[[9622,9631],2],[[9632,9711],2],[[9712,9719],2],[[9720,9727],2],[[9728,9747],2],[[9748,9749],2],[[9750,9751],2],[9752,2],[9753,2],[[9754,9839],2],[[9840,9841],2],[[9842,9853],2],[[9854,9855],2],[[9856,9865],2],[[9866,9873],2],[[9874,9884],2],[9885,2],[[9886,9887],2],[[9888,9889],2],[[9890,9905],2],[9906,2],[[9907,9916],2],[[9917,9919],2],[[9920,9923],2],[[9924,9933],2],[9934,2],[[9935,9953],2],[9954,2],[9955,2],[[9956,9959],2],[[9960,9983],2],[9984,2],[[9985,9988],2],[9989,2],[[9990,9993],2],[[9994,9995],2],[[9996,10023],2],[10024,2],[[10025,10059],2],[10060,2],[10061,2],[10062,2],[[10063,10066],2],[[10067,10069],2],[10070,2],[10071,2],[[10072,10078],2],[[10079,10080],2],[[10081,10087],2],[[10088,10101],2],[[10102,10132],2],[[10133,10135],2],[[10136,10159],2],[10160,2],[[10161,10174],2],[10175,2],[[10176,10182],2],[[10183,10186],2],[10187,2],[10188,2],[10189,2],[[10190,10191],2],[[10192,10219],2],[[10220,10223],2],[[10224,10239],2],[[10240,10495],2],[[10496,10763],2],[10764,1,\"\u222B\u222B\u222B\u222B\"],[[10765,10867],2],[10868,5,\"::=\"],[10869,5,\"==\"],[10870,5,\"===\"],[[10871,10971],2],[10972,1,\"\u2ADD\u0338\"],[[10973,11007],2],[[11008,11021],2],[[11022,11027],2],[[11028,11034],2],[[11035,11039],2],[[11040,11043],2],[[11044,11084],2],[[11085,11087],2],[[11088,11092],2],[[11093,11097],2],[[11098,11123],2],[[11124,11125],3],[[11126,11157],2],[11158,3],[11159,2],[[11160,11193],2],[[11194,11196],2],[[11197,11208],2],[11209,2],[[11210,11217],2],[11218,2],[[11219,11243],2],[[11244,11247],2],[[11248,11262],2],[11263,2],[11264,1,\"\u2C30\"],[11265,1,\"\u2C31\"],[11266,1,\"\u2C32\"],[11267,1,\"\u2C33\"],[11268,1,\"\u2C34\"],[11269,1,\"\u2C35\"],[11270,1,\"\u2C36\"],[11271,1,\"\u2C37\"],[11272,1,\"\u2C38\"],[11273,1,\"\u2C39\"],[11274,1,\"\u2C3A\"],[11275,1,\"\u2C3B\"],[11276,1,\"\u2C3C\"],[11277,1,\"\u2C3D\"],[11278,1,\"\u2C3E\"],[11279,1,\"\u2C3F\"],[11280,1,\"\u2C40\"],[11281,1,\"\u2C41\"],[11282,1,\"\u2C42\"],[11283,1,\"\u2C43\"],[11284,1,\"\u2C44\"],[11285,1,\"\u2C45\"],[11286,1,\"\u2C46\"],[11287,1,\"\u2C47\"],[11288,1,\"\u2C48\"],[11289,1,\"\u2C49\"],[11290,1,\"\u2C4A\"],[11291,1,\"\u2C4B\"],[11292,1,\"\u2C4C\"],[11293,1,\"\u2C4D\"],[11294,1,\"\u2C4E\"],[11295,1,\"\u2C4F\"],[11296,1,\"\u2C50\"],[11297,1,\"\u2C51\"],[11298,1,\"\u2C52\"],[11299,1,\"\u2C53\"],[11300,1,\"\u2C54\"],[11301,1,\"\u2C55\"],[11302,1,\"\u2C56\"],[11303,1,\"\u2C57\"],[11304,1,\"\u2C58\"],[11305,1,\"\u2C59\"],[11306,1,\"\u2C5A\"],[11307,1,\"\u2C5B\"],[11308,1,\"\u2C5C\"],[11309,1,\"\u2C5D\"],[11310,1,\"\u2C5E\"],[11311,1,\"\u2C5F\"],[[11312,11358],2],[11359,2],[11360,1,\"\u2C61\"],[11361,2],[11362,1,\"\u026B\"],[11363,1,\"\u1D7D\"],[11364,1,\"\u027D\"],[[11365,11366],2],[11367,1,\"\u2C68\"],[11368,2],[11369,1,\"\u2C6A\"],[11370,2],[11371,1,\"\u2C6C\"],[11372,2],[11373,1,\"\u0251\"],[11374,1,\"\u0271\"],[11375,1,\"\u0250\"],[11376,1,\"\u0252\"],[11377,2],[11378,1,\"\u2C73\"],[11379,2],[11380,2],[11381,1,\"\u2C76\"],[[11382,11383],2],[[11384,11387],2],[11388,1,\"j\"],[11389,1,\"v\"],[11390,1,\"\u023F\"],[11391,1,\"\u0240\"],[11392,1,\"\u2C81\"],[11393,2],[11394,1,\"\u2C83\"],[11395,2],[11396,1,\"\u2C85\"],[11397,2],[11398,1,\"\u2C87\"],[11399,2],[11400,1,\"\u2C89\"],[11401,2],[11402,1,\"\u2C8B\"],[11403,2],[11404,1,\"\u2C8D\"],[11405,2],[11406,1,\"\u2C8F\"],[11407,2],[11408,1,\"\u2C91\"],[11409,2],[11410,1,\"\u2C93\"],[11411,2],[11412,1,\"\u2C95\"],[11413,2],[11414,1,\"\u2C97\"],[11415,2],[11416,1,\"\u2C99\"],[11417,2],[11418,1,\"\u2C9B\"],[11419,2],[11420,1,\"\u2C9D\"],[11421,2],[11422,1,\"\u2C9F\"],[11423,2],[11424,1,\"\u2CA1\"],[11425,2],[11426,1,\"\u2CA3\"],[11427,2],[11428,1,\"\u2CA5\"],[11429,2],[11430,1,\"\u2CA7\"],[11431,2],[11432,1,\"\u2CA9\"],[11433,2],[11434,1,\"\u2CAB\"],[11435,2],[11436,1,\"\u2CAD\"],[11437,2],[11438,1,\"\u2CAF\"],[11439,2],[11440,1,\"\u2CB1\"],[11441,2],[11442,1,\"\u2CB3\"],[11443,2],[11444,1,\"\u2CB5\"],[11445,2],[11446,1,\"\u2CB7\"],[11447,2],[11448,1,\"\u2CB9\"],[11449,2],[11450,1,\"\u2CBB\"],[11451,2],[11452,1,\"\u2CBD\"],[11453,2],[11454,1,\"\u2CBF\"],[11455,2],[11456,1,\"\u2CC1\"],[11457,2],[11458,1,\"\u2CC3\"],[11459,2],[11460,1,\"\u2CC5\"],[11461,2],[11462,1,\"\u2CC7\"],[11463,2],[11464,1,\"\u2CC9\"],[11465,2],[11466,1,\"\u2CCB\"],[11467,2],[11468,1,\"\u2CCD\"],[11469,2],[11470,1,\"\u2CCF\"],[11471,2],[11472,1,\"\u2CD1\"],[11473,2],[11474,1,\"\u2CD3\"],[11475,2],[11476,1,\"\u2CD5\"],[11477,2],[11478,1,\"\u2CD7\"],[11479,2],[11480,1,\"\u2CD9\"],[11481,2],[11482,1,\"\u2CDB\"],[11483,2],[11484,1,\"\u2CDD\"],[11485,2],[11486,1,\"\u2CDF\"],[11487,2],[11488,1,\"\u2CE1\"],[11489,2],[11490,1,\"\u2CE3\"],[[11491,11492],2],[[11493,11498],2],[11499,1,\"\u2CEC\"],[11500,2],[11501,1,\"\u2CEE\"],[[11502,11505],2],[11506,1,\"\u2CF3\"],[11507,2],[[11508,11512],3],[[11513,11519],2],[[11520,11557],2],[11558,3],[11559,2],[[11560,11564],3],[11565,2],[[11566,11567],3],[[11568,11621],2],[[11622,11623],2],[[11624,11630],3],[11631,1,\"\u2D61\"],[11632,2],[[11633,11646],3],[11647,2],[[11648,11670],2],[[11671,11679],3],[[11680,11686],2],[11687,3],[[11688,11694],2],[11695,3],[[11696,11702],2],[11703,3],[[11704,11710],2],[11711,3],[[11712,11718],2],[11719,3],[[11720,11726],2],[11727,3],[[11728,11734],2],[11735,3],[[11736,11742],2],[11743,3],[[11744,11775],2],[[11776,11799],2],[[11800,11803],2],[[11804,11805],2],[[11806,11822],2],[11823,2],[11824,2],[11825,2],[[11826,11835],2],[[11836,11842],2],[[11843,11844],2],[[11845,11849],2],[[11850,11854],2],[11855,2],[[11856,11858],2],[[11859,11869],2],[[11870,11903],3],[[11904,11929],2],[11930,3],[[11931,11934],2],[11935,1,\"\u6BCD\"],[[11936,12018],2],[12019,1,\"\u9F9F\"],[[12020,12031],3],[12032,1,\"\u4E00\"],[12033,1,\"\u4E28\"],[12034,1,\"\u4E36\"],[12035,1,\"\u4E3F\"],[12036,1,\"\u4E59\"],[12037,1,\"\u4E85\"],[12038,1,\"\u4E8C\"],[12039,1,\"\u4EA0\"],[12040,1,\"\u4EBA\"],[12041,1,\"\u513F\"],[12042,1,\"\u5165\"],[12043,1,\"\u516B\"],[12044,1,\"\u5182\"],[12045,1,\"\u5196\"],[12046,1,\"\u51AB\"],[12047,1,\"\u51E0\"],[12048,1,\"\u51F5\"],[12049,1,\"\u5200\"],[12050,1,\"\u529B\"],[12051,1,\"\u52F9\"],[12052,1,\"\u5315\"],[12053,1,\"\u531A\"],[12054,1,\"\u5338\"],[12055,1,\"\u5341\"],[12056,1,\"\u535C\"],[12057,1,\"\u5369\"],[12058,1,\"\u5382\"],[12059,1,\"\u53B6\"],[12060,1,\"\u53C8\"],[12061,1,\"\u53E3\"],[12062,1,\"\u56D7\"],[12063,1,\"\u571F\"],[12064,1,\"\u58EB\"],[12065,1,\"\u5902\"],[12066,1,\"\u590A\"],[12067,1,\"\u5915\"],[12068,1,\"\u5927\"],[12069,1,\"\u5973\"],[12070,1,\"\u5B50\"],[12071,1,\"\u5B80\"],[12072,1,\"\u5BF8\"],[12073,1,\"\u5C0F\"],[12074,1,\"\u5C22\"],[12075,1,\"\u5C38\"],[12076,1,\"\u5C6E\"],[12077,1,\"\u5C71\"],[12078,1,\"\u5DDB\"],[12079,1,\"\u5DE5\"],[12080,1,\"\u5DF1\"],[12081,1,\"\u5DFE\"],[12082,1,\"\u5E72\"],[12083,1,\"\u5E7A\"],[12084,1,\"\u5E7F\"],[12085,1,\"\u5EF4\"],[12086,1,\"\u5EFE\"],[12087,1,\"\u5F0B\"],[12088,1,\"\u5F13\"],[12089,1,\"\u5F50\"],[12090,1,\"\u5F61\"],[12091,1,\"\u5F73\"],[12092,1,\"\u5FC3\"],[12093,1,\"\u6208\"],[12094,1,\"\u6236\"],[12095,1,\"\u624B\"],[12096,1,\"\u652F\"],[12097,1,\"\u6534\"],[12098,1,\"\u6587\"],[12099,1,\"\u6597\"],[12100,1,\"\u65A4\"],[12101,1,\"\u65B9\"],[12102,1,\"\u65E0\"],[12103,1,\"\u65E5\"],[12104,1,\"\u66F0\"],[12105,1,\"\u6708\"],[12106,1,\"\u6728\"],[12107,1,\"\u6B20\"],[12108,1,\"\u6B62\"],[12109,1,\"\u6B79\"],[12110,1,\"\u6BB3\"],[12111,1,\"\u6BCB\"],[12112,1,\"\u6BD4\"],[12113,1,\"\u6BDB\"],[12114,1,\"\u6C0F\"],[12115,1,\"\u6C14\"],[12116,1,\"\u6C34\"],[12117,1,\"\u706B\"],[12118,1,\"\u722A\"],[12119,1,\"\u7236\"],[12120,1,\"\u723B\"],[12121,1,\"\u723F\"],[12122,1,\"\u7247\"],[12123,1,\"\u7259\"],[12124,1,\"\u725B\"],[12125,1,\"\u72AC\"],[12126,1,\"\u7384\"],[12127,1,\"\u7389\"],[12128,1,\"\u74DC\"],[12129,1,\"\u74E6\"],[12130,1,\"\u7518\"],[12131,1,\"\u751F\"],[12132,1,\"\u7528\"],[12133,1,\"\u7530\"],[12134,1,\"\u758B\"],[12135,1,\"\u7592\"],[12136,1,\"\u7676\"],[12137,1,\"\u767D\"],[12138,1,\"\u76AE\"],[12139,1,\"\u76BF\"],[12140,1,\"\u76EE\"],[12141,1,\"\u77DB\"],[12142,1,\"\u77E2\"],[12143,1,\"\u77F3\"],[12144,1,\"\u793A\"],[12145,1,\"\u79B8\"],[12146,1,\"\u79BE\"],[12147,1,\"\u7A74\"],[12148,1,\"\u7ACB\"],[12149,1,\"\u7AF9\"],[12150,1,\"\u7C73\"],[12151,1,\"\u7CF8\"],[12152,1,\"\u7F36\"],[12153,1,\"\u7F51\"],[12154,1,\"\u7F8A\"],[12155,1,\"\u7FBD\"],[12156,1,\"\u8001\"],[12157,1,\"\u800C\"],[12158,1,\"\u8012\"],[12159,1,\"\u8033\"],[12160,1,\"\u807F\"],[12161,1,\"\u8089\"],[12162,1,\"\u81E3\"],[12163,1,\"\u81EA\"],[12164,1,\"\u81F3\"],[12165,1,\"\u81FC\"],[12166,1,\"\u820C\"],[12167,1,\"\u821B\"],[12168,1,\"\u821F\"],[12169,1,\"\u826E\"],[12170,1,\"\u8272\"],[12171,1,\"\u8278\"],[12172,1,\"\u864D\"],[12173,1,\"\u866B\"],[12174,1,\"\u8840\"],[12175,1,\"\u884C\"],[12176,1,\"\u8863\"],[12177,1,\"\u897E\"],[12178,1,\"\u898B\"],[12179,1,\"\u89D2\"],[12180,1,\"\u8A00\"],[12181,1,\"\u8C37\"],[12182,1,\"\u8C46\"],[12183,1,\"\u8C55\"],[12184,1,\"\u8C78\"],[12185,1,\"\u8C9D\"],[12186,1,\"\u8D64\"],[12187,1,\"\u8D70\"],[12188,1,\"\u8DB3\"],[12189,1,\"\u8EAB\"],[12190,1,\"\u8ECA\"],[12191,1,\"\u8F9B\"],[12192,1,\"\u8FB0\"],[12193,1,\"\u8FB5\"],[12194,1,\"\u9091\"],[12195,1,\"\u9149\"],[12196,1,\"\u91C6\"],[12197,1,\"\u91CC\"],[12198,1,\"\u91D1\"],[12199,1,\"\u9577\"],[12200,1,\"\u9580\"],[12201,1,\"\u961C\"],[12202,1,\"\u96B6\"],[12203,1,\"\u96B9\"],[12204,1,\"\u96E8\"],[12205,1,\"\u9751\"],[12206,1,\"\u975E\"],[12207,1,\"\u9762\"],[12208,1,\"\u9769\"],[12209,1,\"\u97CB\"],[12210,1,\"\u97ED\"],[12211,1,\"\u97F3\"],[12212,1,\"\u9801\"],[12213,1,\"\u98A8\"],[12214,1,\"\u98DB\"],[12215,1,\"\u98DF\"],[12216,1,\"\u9996\"],[12217,1,\"\u9999\"],[12218,1,\"\u99AC\"],[12219,1,\"\u9AA8\"],[12220,1,\"\u9AD8\"],[12221,1,\"\u9ADF\"],[12222,1,\"\u9B25\"],[12223,1,\"\u9B2F\"],[12224,1,\"\u9B32\"],[12225,1,\"\u9B3C\"],[12226,1,\"\u9B5A\"],[12227,1,\"\u9CE5\"],[12228,1,\"\u9E75\"],[12229,1,\"\u9E7F\"],[12230,1,\"\u9EA5\"],[12231,1,\"\u9EBB\"],[12232,1,\"\u9EC3\"],[12233,1,\"\u9ECD\"],[12234,1,\"\u9ED1\"],[12235,1,\"\u9EF9\"],[12236,1,\"\u9EFD\"],[12237,1,\"\u9F0E\"],[12238,1,\"\u9F13\"],[12239,1,\"\u9F20\"],[12240,1,\"\u9F3B\"],[12241,1,\"\u9F4A\"],[12242,1,\"\u9F52\"],[12243,1,\"\u9F8D\"],[12244,1,\"\u9F9C\"],[12245,1,\"\u9FA0\"],[[12246,12271],3],[[12272,12283],3],[[12284,12287],3],[12288,5,\" \"],[12289,2],[12290,1,\".\"],[[12291,12292],2],[[12293,12295],2],[[12296,12329],2],[[12330,12333],2],[[12334,12341],2],[12342,1,\"\u3012\"],[12343,2],[12344,1,\"\u5341\"],[12345,1,\"\u5344\"],[12346,1,\"\u5345\"],[12347,2],[12348,2],[12349,2],[12350,2],[12351,2],[12352,3],[[12353,12436],2],[[12437,12438],2],[[12439,12440],3],[[12441,12442],2],[12443,5,\" \u3099\"],[12444,5,\" \u309A\"],[[12445,12446],2],[12447,1,\"\u3088\u308A\"],[12448,2],[[12449,12542],2],[12543,1,\"\u30B3\u30C8\"],[[12544,12548],3],[[12549,12588],2],[12589,2],[12590,2],[12591,2],[12592,3],[12593,1,\"\u1100\"],[12594,1,\"\u1101\"],[12595,1,\"\u11AA\"],[12596,1,\"\u1102\"],[12597,1,\"\u11AC\"],[12598,1,\"\u11AD\"],[12599,1,\"\u1103\"],[12600,1,\"\u1104\"],[12601,1,\"\u1105\"],[12602,1,\"\u11B0\"],[12603,1,\"\u11B1\"],[12604,1,\"\u11B2\"],[12605,1,\"\u11B3\"],[12606,1,\"\u11B4\"],[12607,1,\"\u11B5\"],[12608,1,\"\u111A\"],[12609,1,\"\u1106\"],[12610,1,\"\u1107\"],[12611,1,\"\u1108\"],[12612,1,\"\u1121\"],[12613,1,\"\u1109\"],[12614,1,\"\u110A\"],[12615,1,\"\u110B\"],[12616,1,\"\u110C\"],[12617,1,\"\u110D\"],[12618,1,\"\u110E\"],[12619,1,\"\u110F\"],[12620,1,\"\u1110\"],[12621,1,\"\u1111\"],[12622,1,\"\u1112\"],[12623,1,\"\u1161\"],[12624,1,\"\u1162\"],[12625,1,\"\u1163\"],[12626,1,\"\u1164\"],[12627,1,\"\u1165\"],[12628,1,\"\u1166\"],[12629,1,\"\u1167\"],[12630,1,\"\u1168\"],[12631,1,\"\u1169\"],[12632,1,\"\u116A\"],[12633,1,\"\u116B\"],[12634,1,\"\u116C\"],[12635,1,\"\u116D\"],[12636,1,\"\u116E\"],[12637,1,\"\u116F\"],[12638,1,\"\u1170\"],[12639,1,\"\u1171\"],[12640,1,\"\u1172\"],[12641,1,\"\u1173\"],[12642,1,\"\u1174\"],[12643,1,\"\u1175\"],[12644,3],[12645,1,\"\u1114\"],[12646,1,\"\u1115\"],[12647,1,\"\u11C7\"],[12648,1,\"\u11C8\"],[12649,1,\"\u11CC\"],[12650,1,\"\u11CE\"],[12651,1,\"\u11D3\"],[12652,1,\"\u11D7\"],[12653,1,\"\u11D9\"],[12654,1,\"\u111C\"],[12655,1,\"\u11DD\"],[12656,1,\"\u11DF\"],[12657,1,\"\u111D\"],[12658,1,\"\u111E\"],[12659,1,\"\u1120\"],[12660,1,\"\u1122\"],[12661,1,\"\u1123\"],[12662,1,\"\u1127\"],[12663,1,\"\u1129\"],[12664,1,\"\u112B\"],[12665,1,\"\u112C\"],[12666,1,\"\u112D\"],[12667,1,\"\u112E\"],[12668,1,\"\u112F\"],[12669,1,\"\u1132\"],[12670,1,\"\u1136\"],[12671,1,\"\u1140\"],[12672,1,\"\u1147\"],[12673,1,\"\u114C\"],[12674,1,\"\u11F1\"],[12675,1,\"\u11F2\"],[12676,1,\"\u1157\"],[12677,1,\"\u1158\"],[12678,1,\"\u1159\"],[12679,1,\"\u1184\"],[12680,1,\"\u1185\"],[12681,1,\"\u1188\"],[12682,1,\"\u1191\"],[12683,1,\"\u1192\"],[12684,1,\"\u1194\"],[12685,1,\"\u119E\"],[12686,1,\"\u11A1\"],[12687,3],[[12688,12689],2],[12690,1,\"\u4E00\"],[12691,1,\"\u4E8C\"],[12692,1,\"\u4E09\"],[12693,1,\"\u56DB\"],[12694,1,\"\u4E0A\"],[12695,1,\"\u4E2D\"],[12696,1,\"\u4E0B\"],[12697,1,\"\u7532\"],[12698,1,\"\u4E59\"],[12699,1,\"\u4E19\"],[12700,1,\"\u4E01\"],[12701,1,\"\u5929\"],[12702,1,\"\u5730\"],[12703,1,\"\u4EBA\"],[[12704,12727],2],[[12728,12730],2],[[12731,12735],2],[[12736,12751],2],[[12752,12771],2],[[12772,12783],3],[[12784,12799],2],[12800,5,\"(\u1100)\"],[12801,5,\"(\u1102)\"],[12802,5,\"(\u1103)\"],[12803,5,\"(\u1105)\"],[12804,5,\"(\u1106)\"],[12805,5,\"(\u1107)\"],[12806,5,\"(\u1109)\"],[12807,5,\"(\u110B)\"],[12808,5,\"(\u110C)\"],[12809,5,\"(\u110E)\"],[12810,5,\"(\u110F)\"],[12811,5,\"(\u1110)\"],[12812,5,\"(\u1111)\"],[12813,5,\"(\u1112)\"],[12814,5,\"(\uAC00)\"],[12815,5,\"(\uB098)\"],[12816,5,\"(\uB2E4)\"],[12817,5,\"(\uB77C)\"],[12818,5,\"(\uB9C8)\"],[12819,5,\"(\uBC14)\"],[12820,5,\"(\uC0AC)\"],[12821,5,\"(\uC544)\"],[12822,5,\"(\uC790)\"],[12823,5,\"(\uCC28)\"],[12824,5,\"(\uCE74)\"],[12825,5,\"(\uD0C0)\"],[12826,5,\"(\uD30C)\"],[12827,5,\"(\uD558)\"],[12828,5,\"(\uC8FC)\"],[12829,5,\"(\uC624\uC804)\"],[12830,5,\"(\uC624\uD6C4)\"],[12831,3],[12832,5,\"(\u4E00)\"],[12833,5,\"(\u4E8C)\"],[12834,5,\"(\u4E09)\"],[12835,5,\"(\u56DB)\"],[12836,5,\"(\u4E94)\"],[12837,5,\"(\u516D)\"],[12838,5,\"(\u4E03)\"],[12839,5,\"(\u516B)\"],[12840,5,\"(\u4E5D)\"],[12841,5,\"(\u5341)\"],[12842,5,\"(\u6708)\"],[12843,5,\"(\u706B)\"],[12844,5,\"(\u6C34)\"],[12845,5,\"(\u6728)\"],[12846,5,\"(\u91D1)\"],[12847,5,\"(\u571F)\"],[12848,5,\"(\u65E5)\"],[12849,5,\"(\u682A)\"],[12850,5,\"(\u6709)\"],[12851,5,\"(\u793E)\"],[12852,5,\"(\u540D)\"],[12853,5,\"(\u7279)\"],[12854,5,\"(\u8CA1)\"],[12855,5,\"(\u795D)\"],[12856,5,\"(\u52B4)\"],[12857,5,\"(\u4EE3)\"],[12858,5,\"(\u547C)\"],[12859,5,\"(\u5B66)\"],[12860,5,\"(\u76E3)\"],[12861,5,\"(\u4F01)\"],[12862,5,\"(\u8CC7)\"],[12863,5,\"(\u5354)\"],[12864,5,\"(\u796D)\"],[12865,5,\"(\u4F11)\"],[12866,5,\"(\u81EA)\"],[12867,5,\"(\u81F3)\"],[12868,1,\"\u554F\"],[12869,1,\"\u5E7C\"],[12870,1,\"\u6587\"],[12871,1,\"\u7B8F\"],[[12872,12879],2],[12880,1,\"pte\"],[12881,1,\"21\"],[12882,1,\"22\"],[12883,1,\"23\"],[12884,1,\"24\"],[12885,1,\"25\"],[12886,1,\"26\"],[12887,1,\"27\"],[12888,1,\"28\"],[12889,1,\"29\"],[12890,1,\"30\"],[12891,1,\"31\"],[12892,1,\"32\"],[12893,1,\"33\"],[12894,1,\"34\"],[12895,1,\"35\"],[12896,1,\"\u1100\"],[12897,1,\"\u1102\"],[12898,1,\"\u1103\"],[12899,1,\"\u1105\"],[12900,1,\"\u1106\"],[12901,1,\"\u1107\"],[12902,1,\"\u1109\"],[12903,1,\"\u110B\"],[12904,1,\"\u110C\"],[12905,1,\"\u110E\"],[12906,1,\"\u110F\"],[12907,1,\"\u1110\"],[12908,1,\"\u1111\"],[12909,1,\"\u1112\"],[12910,1,\"\uAC00\"],[12911,1,\"\uB098\"],[12912,1,\"\uB2E4\"],[12913,1,\"\uB77C\"],[12914,1,\"\uB9C8\"],[12915,1,\"\uBC14\"],[12916,1,\"\uC0AC\"],[12917,1,\"\uC544\"],[12918,1,\"\uC790\"],[12919,1,\"\uCC28\"],[12920,1,\"\uCE74\"],[12921,1,\"\uD0C0\"],[12922,1,\"\uD30C\"],[12923,1,\"\uD558\"],[12924,1,\"\uCC38\uACE0\"],[12925,1,\"\uC8FC\uC758\"],[12926,1,\"\uC6B0\"],[12927,2],[12928,1,\"\u4E00\"],[12929,1,\"\u4E8C\"],[12930,1,\"\u4E09\"],[12931,1,\"\u56DB\"],[12932,1,\"\u4E94\"],[12933,1,\"\u516D\"],[12934,1,\"\u4E03\"],[12935,1,\"\u516B\"],[12936,1,\"\u4E5D\"],[12937,1,\"\u5341\"],[12938,1,\"\u6708\"],[12939,1,\"\u706B\"],[12940,1,\"\u6C34\"],[12941,1,\"\u6728\"],[12942,1,\"\u91D1\"],[12943,1,\"\u571F\"],[12944,1,\"\u65E5\"],[12945,1,\"\u682A\"],[12946,1,\"\u6709\"],[12947,1,\"\u793E\"],[12948,1,\"\u540D\"],[12949,1,\"\u7279\"],[12950,1,\"\u8CA1\"],[12951,1,\"\u795D\"],[12952,1,\"\u52B4\"],[12953,1,\"\u79D8\"],[12954,1,\"\u7537\"],[12955,1,\"\u5973\"],[12956,1,\"\u9069\"],[12957,1,\"\u512A\"],[12958,1,\"\u5370\"],[12959,1,\"\u6CE8\"],[12960,1,\"\u9805\"],[12961,1,\"\u4F11\"],[12962,1,\"\u5199\"],[12963,1,\"\u6B63\"],[12964,1,\"\u4E0A\"],[12965,1,\"\u4E2D\"],[12966,1,\"\u4E0B\"],[12967,1,\"\u5DE6\"],[12968,1,\"\u53F3\"],[12969,1,\"\u533B\"],[12970,1,\"\u5B97\"],[12971,1,\"\u5B66\"],[12972,1,\"\u76E3\"],[12973,1,\"\u4F01\"],[12974,1,\"\u8CC7\"],[12975,1,\"\u5354\"],[12976,1,\"\u591C\"],[12977,1,\"36\"],[12978,1,\"37\"],[12979,1,\"38\"],[12980,1,\"39\"],[12981,1,\"40\"],[12982,1,\"41\"],[12983,1,\"42\"],[12984,1,\"43\"],[12985,1,\"44\"],[12986,1,\"45\"],[12987,1,\"46\"],[12988,1,\"47\"],[12989,1,\"48\"],[12990,1,\"49\"],[12991,1,\"50\"],[12992,1,\"1\u6708\"],[12993,1,\"2\u6708\"],[12994,1,\"3\u6708\"],[12995,1,\"4\u6708\"],[12996,1,\"5\u6708\"],[12997,1,\"6\u6708\"],[12998,1,\"7\u6708\"],[12999,1,\"8\u6708\"],[13000,1,\"9\u6708\"],[13001,1,\"10\u6708\"],[13002,1,\"11\u6708\"],[13003,1,\"12\u6708\"],[13004,1,\"hg\"],[13005,1,\"erg\"],[13006,1,\"ev\"],[13007,1,\"ltd\"],[13008,1,\"\u30A2\"],[13009,1,\"\u30A4\"],[13010,1,\"\u30A6\"],[13011,1,\"\u30A8\"],[13012,1,\"\u30AA\"],[13013,1,\"\u30AB\"],[13014,1,\"\u30AD\"],[13015,1,\"\u30AF\"],[13016,1,\"\u30B1\"],[13017,1,\"\u30B3\"],[13018,1,\"\u30B5\"],[13019,1,\"\u30B7\"],[13020,1,\"\u30B9\"],[13021,1,\"\u30BB\"],[13022,1,\"\u30BD\"],[13023,1,\"\u30BF\"],[13024,1,\"\u30C1\"],[13025,1,\"\u30C4\"],[13026,1,\"\u30C6\"],[13027,1,\"\u30C8\"],[13028,1,\"\u30CA\"],[13029,1,\"\u30CB\"],[13030,1,\"\u30CC\"],[13031,1,\"\u30CD\"],[13032,1,\"\u30CE\"],[13033,1,\"\u30CF\"],[13034,1,\"\u30D2\"],[13035,1,\"\u30D5\"],[13036,1,\"\u30D8\"],[13037,1,\"\u30DB\"],[13038,1,\"\u30DE\"],[13039,1,\"\u30DF\"],[13040,1,\"\u30E0\"],[13041,1,\"\u30E1\"],[13042,1,\"\u30E2\"],[13043,1,\"\u30E4\"],[13044,1,\"\u30E6\"],[13045,1,\"\u30E8\"],[13046,1,\"\u30E9\"],[13047,1,\"\u30EA\"],[13048,1,\"\u30EB\"],[13049,1,\"\u30EC\"],[13050,1,\"\u30ED\"],[13051,1,\"\u30EF\"],[13052,1,\"\u30F0\"],[13053,1,\"\u30F1\"],[13054,1,\"\u30F2\"],[13055,1,\"\u4EE4\u548C\"],[13056,1,\"\u30A2\u30D1\u30FC\u30C8\"],[13057,1,\"\u30A2\u30EB\u30D5\u30A1\"],[13058,1,\"\u30A2\u30F3\u30DA\u30A2\"],[13059,1,\"\u30A2\u30FC\u30EB\"],[13060,1,\"\u30A4\u30CB\u30F3\u30B0\"],[13061,1,\"\u30A4\u30F3\u30C1\"],[13062,1,\"\u30A6\u30A9\u30F3\"],[13063,1,\"\u30A8\u30B9\u30AF\u30FC\u30C9\"],[13064,1,\"\u30A8\u30FC\u30AB\u30FC\"],[13065,1,\"\u30AA\u30F3\u30B9\"],[13066,1,\"\u30AA\u30FC\u30E0\"],[13067,1,\"\u30AB\u30A4\u30EA\"],[13068,1,\"\u30AB\u30E9\u30C3\u30C8\"],[13069,1,\"\u30AB\u30ED\u30EA\u30FC\"],[13070,1,\"\u30AC\u30ED\u30F3\"],[13071,1,\"\u30AC\u30F3\u30DE\"],[13072,1,\"\u30AE\u30AC\"],[13073,1,\"\u30AE\u30CB\u30FC\"],[13074,1,\"\u30AD\u30E5\u30EA\u30FC\"],[13075,1,\"\u30AE\u30EB\u30C0\u30FC\"],[13076,1,\"\u30AD\u30ED\"],[13077,1,\"\u30AD\u30ED\u30B0\u30E9\u30E0\"],[13078,1,\"\u30AD\u30ED\u30E1\u30FC\u30C8\u30EB\"],[13079,1,\"\u30AD\u30ED\u30EF\u30C3\u30C8\"],[13080,1,\"\u30B0\u30E9\u30E0\"],[13081,1,\"\u30B0\u30E9\u30E0\u30C8\u30F3\"],[13082,1,\"\u30AF\u30EB\u30BC\u30A4\u30ED\"],[13083,1,\"\u30AF\u30ED\u30FC\u30CD\"],[13084,1,\"\u30B1\u30FC\u30B9\"],[13085,1,\"\u30B3\u30EB\u30CA\"],[13086,1,\"\u30B3\u30FC\u30DD\"],[13087,1,\"\u30B5\u30A4\u30AF\u30EB\"],[13088,1,\"\u30B5\u30F3\u30C1\u30FC\u30E0\"],[13089,1,\"\u30B7\u30EA\u30F3\u30B0\"],[13090,1,\"\u30BB\u30F3\u30C1\"],[13091,1,\"\u30BB\u30F3\u30C8\"],[13092,1,\"\u30C0\u30FC\u30B9\"],[13093,1,\"\u30C7\u30B7\"],[13094,1,\"\u30C9\u30EB\"],[13095,1,\"\u30C8\u30F3\"],[13096,1,\"\u30CA\u30CE\"],[13097,1,\"\u30CE\u30C3\u30C8\"],[13098,1,\"\u30CF\u30A4\u30C4\"],[13099,1,\"\u30D1\u30FC\u30BB\u30F3\u30C8\"],[13100,1,\"\u30D1\u30FC\u30C4\"],[13101,1,\"\u30D0\u30FC\u30EC\u30EB\"],[13102,1,\"\u30D4\u30A2\u30B9\u30C8\u30EB\"],[13103,1,\"\u30D4\u30AF\u30EB\"],[13104,1,\"\u30D4\u30B3\"],[13105,1,\"\u30D3\u30EB\"],[13106,1,\"\u30D5\u30A1\u30E9\u30C3\u30C9\"],[13107,1,\"\u30D5\u30A3\u30FC\u30C8\"],[13108,1,\"\u30D6\u30C3\u30B7\u30A7\u30EB\"],[13109,1,\"\u30D5\u30E9\u30F3\"],[13110,1,\"\u30D8\u30AF\u30BF\u30FC\u30EB\"],[13111,1,\"\u30DA\u30BD\"],[13112,1,\"\u30DA\u30CB\u30D2\"],[13113,1,\"\u30D8\u30EB\u30C4\"],[13114,1,\"\u30DA\u30F3\u30B9\"],[13115,1,\"\u30DA\u30FC\u30B8\"],[13116,1,\"\u30D9\u30FC\u30BF\"],[13117,1,\"\u30DD\u30A4\u30F3\u30C8\"],[13118,1,\"\u30DC\u30EB\u30C8\"],[13119,1,\"\u30DB\u30F3\"],[13120,1,\"\u30DD\u30F3\u30C9\"],[13121,1,\"\u30DB\u30FC\u30EB\"],[13122,1,\"\u30DB\u30FC\u30F3\"],[13123,1,\"\u30DE\u30A4\u30AF\u30ED\"],[13124,1,\"\u30DE\u30A4\u30EB\"],[13125,1,\"\u30DE\u30C3\u30CF\"],[13126,1,\"\u30DE\u30EB\u30AF\"],[13127,1,\"\u30DE\u30F3\u30B7\u30E7\u30F3\"],[13128,1,\"\u30DF\u30AF\u30ED\u30F3\"],[13129,1,\"\u30DF\u30EA\"],[13130,1,\"\u30DF\u30EA\u30D0\u30FC\u30EB\"],[13131,1,\"\u30E1\u30AC\"],[13132,1,\"\u30E1\u30AC\u30C8\u30F3\"],[13133,1,\"\u30E1\u30FC\u30C8\u30EB\"],[13134,1,\"\u30E4\u30FC\u30C9\"],[13135,1,\"\u30E4\u30FC\u30EB\"],[13136,1,\"\u30E6\u30A2\u30F3\"],[13137,1,\"\u30EA\u30C3\u30C8\u30EB\"],[13138,1,\"\u30EA\u30E9\"],[13139,1,\"\u30EB\u30D4\u30FC\"],[13140,1,\"\u30EB\u30FC\u30D6\u30EB\"],[13141,1,\"\u30EC\u30E0\"],[13142,1,\"\u30EC\u30F3\u30C8\u30B2\u30F3\"],[13143,1,\"\u30EF\u30C3\u30C8\"],[13144,1,\"0\u70B9\"],[13145,1,\"1\u70B9\"],[13146,1,\"2\u70B9\"],[13147,1,\"3\u70B9\"],[13148,1,\"4\u70B9\"],[13149,1,\"5\u70B9\"],[13150,1,\"6\u70B9\"],[13151,1,\"7\u70B9\"],[13152,1,\"8\u70B9\"],[13153,1,\"9\u70B9\"],[13154,1,\"10\u70B9\"],[13155,1,\"11\u70B9\"],[13156,1,\"12\u70B9\"],[13157,1,\"13\u70B9\"],[13158,1,\"14\u70B9\"],[13159,1,\"15\u70B9\"],[13160,1,\"16\u70B9\"],[13161,1,\"17\u70B9\"],[13162,1,\"18\u70B9\"],[13163,1,\"19\u70B9\"],[13164,1,\"20\u70B9\"],[13165,1,\"21\u70B9\"],[13166,1,\"22\u70B9\"],[13167,1,\"23\u70B9\"],[13168,1,\"24\u70B9\"],[13169,1,\"hpa\"],[13170,1,\"da\"],[13171,1,\"au\"],[13172,1,\"bar\"],[13173,1,\"ov\"],[13174,1,\"pc\"],[13175,1,\"dm\"],[13176,1,\"dm2\"],[13177,1,\"dm3\"],[13178,1,\"iu\"],[13179,1,\"\u5E73\u6210\"],[13180,1,\"\u662D\u548C\"],[13181,1,\"\u5927\u6B63\"],[13182,1,\"\u660E\u6CBB\"],[13183,1,\"\u682A\u5F0F\u4F1A\u793E\"],[13184,1,\"pa\"],[13185,1,\"na\"],[13186,1,\"\u03BCa\"],[13187,1,\"ma\"],[13188,1,\"ka\"],[13189,1,\"kb\"],[13190,1,\"mb\"],[13191,1,\"gb\"],[13192,1,\"cal\"],[13193,1,\"kcal\"],[13194,1,\"pf\"],[13195,1,\"nf\"],[13196,1,\"\u03BCf\"],[13197,1,\"\u03BCg\"],[13198,1,\"mg\"],[13199,1,\"kg\"],[13200,1,\"hz\"],[13201,1,\"khz\"],[13202,1,\"mhz\"],[13203,1,\"ghz\"],[13204,1,\"thz\"],[13205,1,\"\u03BCl\"],[13206,1,\"ml\"],[13207,1,\"dl\"],[13208,1,\"kl\"],[13209,1,\"fm\"],[13210,1,\"nm\"],[13211,1,\"\u03BCm\"],[13212,1,\"mm\"],[13213,1,\"cm\"],[13214,1,\"km\"],[13215,1,\"mm2\"],[13216,1,\"cm2\"],[13217,1,\"m2\"],[13218,1,\"km2\"],[13219,1,\"mm3\"],[13220,1,\"cm3\"],[13221,1,\"m3\"],[13222,1,\"km3\"],[13223,1,\"m\u2215s\"],[13224,1,\"m\u2215s2\"],[13225,1,\"pa\"],[13226,1,\"kpa\"],[13227,1,\"mpa\"],[13228,1,\"gpa\"],[13229,1,\"rad\"],[13230,1,\"rad\u2215s\"],[13231,1,\"rad\u2215s2\"],[13232,1,\"ps\"],[13233,1,\"ns\"],[13234,1,\"\u03BCs\"],[13235,1,\"ms\"],[13236,1,\"pv\"],[13237,1,\"nv\"],[13238,1,\"\u03BCv\"],[13239,1,\"mv\"],[13240,1,\"kv\"],[13241,1,\"mv\"],[13242,1,\"pw\"],[13243,1,\"nw\"],[13244,1,\"\u03BCw\"],[13245,1,\"mw\"],[13246,1,\"kw\"],[13247,1,\"mw\"],[13248,1,\"k\u03C9\"],[13249,1,\"m\u03C9\"],[13250,3],[13251,1,\"bq\"],[13252,1,\"cc\"],[13253,1,\"cd\"],[13254,1,\"c\u2215kg\"],[13255,3],[13256,1,\"db\"],[13257,1,\"gy\"],[13258,1,\"ha\"],[13259,1,\"hp\"],[13260,1,\"in\"],[13261,1,\"kk\"],[13262,1,\"km\"],[13263,1,\"kt\"],[13264,1,\"lm\"],[13265,1,\"ln\"],[13266,1,\"log\"],[13267,1,\"lx\"],[13268,1,\"mb\"],[13269,1,\"mil\"],[13270,1,\"mol\"],[13271,1,\"ph\"],[13272,3],[13273,1,\"ppm\"],[13274,1,\"pr\"],[13275,1,\"sr\"],[13276,1,\"sv\"],[13277,1,\"wb\"],[13278,1,\"v\u2215m\"],[13279,1,\"a\u2215m\"],[13280,1,\"1\u65E5\"],[13281,1,\"2\u65E5\"],[13282,1,\"3\u65E5\"],[13283,1,\"4\u65E5\"],[13284,1,\"5\u65E5\"],[13285,1,\"6\u65E5\"],[13286,1,\"7\u65E5\"],[13287,1,\"8\u65E5\"],[13288,1,\"9\u65E5\"],[13289,1,\"10\u65E5\"],[13290,1,\"11\u65E5\"],[13291,1,\"12\u65E5\"],[13292,1,\"13\u65E5\"],[13293,1,\"14\u65E5\"],[13294,1,\"15\u65E5\"],[13295,1,\"16\u65E5\"],[13296,1,\"17\u65E5\"],[13297,1,\"18\u65E5\"],[13298,1,\"19\u65E5\"],[13299,1,\"20\u65E5\"],[13300,1,\"21\u65E5\"],[13301,1,\"22\u65E5\"],[13302,1,\"23\u65E5\"],[13303,1,\"24\u65E5\"],[13304,1,\"25\u65E5\"],[13305,1,\"26\u65E5\"],[13306,1,\"27\u65E5\"],[13307,1,\"28\u65E5\"],[13308,1,\"29\u65E5\"],[13309,1,\"30\u65E5\"],[13310,1,\"31\u65E5\"],[13311,1,\"gal\"],[[13312,19893],2],[[19894,19903],2],[[19904,19967],2],[[19968,40869],2],[[40870,40891],2],[[40892,40899],2],[[40900,40907],2],[40908,2],[[40909,40917],2],[[40918,40938],2],[[40939,40943],2],[[40944,40956],2],[[40957,40959],2],[[40960,42124],2],[[42125,42127],3],[[42128,42145],2],[[42146,42147],2],[[42148,42163],2],[42164,2],[[42165,42176],2],[42177,2],[[42178,42180],2],[42181,2],[42182,2],[[42183,42191],3],[[42192,42237],2],[[42238,42239],2],[[42240,42508],2],[[42509,42511],2],[[42512,42539],2],[[42540,42559],3],[42560,1,\"\uA641\"],[42561,2],[42562,1,\"\uA643\"],[42563,2],[42564,1,\"\uA645\"],[42565,2],[42566,1,\"\uA647\"],[42567,2],[42568,1,\"\uA649\"],[42569,2],[42570,1,\"\uA64B\"],[42571,2],[42572,1,\"\uA64D\"],[42573,2],[42574,1,\"\uA64F\"],[42575,2],[42576,1,\"\uA651\"],[42577,2],[42578,1,\"\uA653\"],[42579,2],[42580,1,\"\uA655\"],[42581,2],[42582,1,\"\uA657\"],[42583,2],[42584,1,\"\uA659\"],[42585,2],[42586,1,\"\uA65B\"],[42587,2],[42588,1,\"\uA65D\"],[42589,2],[42590,1,\"\uA65F\"],[42591,2],[42592,1,\"\uA661\"],[42593,2],[42594,1,\"\uA663\"],[42595,2],[42596,1,\"\uA665\"],[42597,2],[42598,1,\"\uA667\"],[42599,2],[42600,1,\"\uA669\"],[42601,2],[42602,1,\"\uA66B\"],[42603,2],[42604,1,\"\uA66D\"],[[42605,42607],2],[[42608,42611],2],[[42612,42619],2],[[42620,42621],2],[42622,2],[42623,2],[42624,1,\"\uA681\"],[42625,2],[42626,1,\"\uA683\"],[42627,2],[42628,1,\"\uA685\"],[42629,2],[42630,1,\"\uA687\"],[42631,2],[42632,1,\"\uA689\"],[42633,2],[42634,1,\"\uA68B\"],[42635,2],[42636,1,\"\uA68D\"],[42637,2],[42638,1,\"\uA68F\"],[42639,2],[42640,1,\"\uA691\"],[42641,2],[42642,1,\"\uA693\"],[42643,2],[42644,1,\"\uA695\"],[42645,2],[42646,1,\"\uA697\"],[42647,2],[42648,1,\"\uA699\"],[42649,2],[42650,1,\"\uA69B\"],[42651,2],[42652,1,\"\u044A\"],[42653,1,\"\u044C\"],[42654,2],[42655,2],[[42656,42725],2],[[42726,42735],2],[[42736,42737],2],[[42738,42743],2],[[42744,42751],3],[[42752,42774],2],[[42775,42778],2],[[42779,42783],2],[[42784,42785],2],[42786,1,\"\uA723\"],[42787,2],[42788,1,\"\uA725\"],[42789,2],[42790,1,\"\uA727\"],[42791,2],[42792,1,\"\uA729\"],[42793,2],[42794,1,\"\uA72B\"],[42795,2],[42796,1,\"\uA72D\"],[42797,2],[42798,1,\"\uA72F\"],[[42799,42801],2],[42802,1,\"\uA733\"],[42803,2],[42804,1,\"\uA735\"],[42805,2],[42806,1,\"\uA737\"],[42807,2],[42808,1,\"\uA739\"],[42809,2],[42810,1,\"\uA73B\"],[42811,2],[42812,1,\"\uA73D\"],[42813,2],[42814,1,\"\uA73F\"],[42815,2],[42816,1,\"\uA741\"],[42817,2],[42818,1,\"\uA743\"],[42819,2],[42820,1,\"\uA745\"],[42821,2],[42822,1,\"\uA747\"],[42823,2],[42824,1,\"\uA749\"],[42825,2],[42826,1,\"\uA74B\"],[42827,2],[42828,1,\"\uA74D\"],[42829,2],[42830,1,\"\uA74F\"],[42831,2],[42832,1,\"\uA751\"],[42833,2],[42834,1,\"\uA753\"],[42835,2],[42836,1,\"\uA755\"],[42837,2],[42838,1,\"\uA757\"],[42839,2],[42840,1,\"\uA759\"],[42841,2],[42842,1,\"\uA75B\"],[42843,2],[42844,1,\"\uA75D\"],[42845,2],[42846,1,\"\uA75F\"],[42847,2],[42848,1,\"\uA761\"],[42849,2],[42850,1,\"\uA763\"],[42851,2],[42852,1,\"\uA765\"],[42853,2],[42854,1,\"\uA767\"],[42855,2],[42856,1,\"\uA769\"],[42857,2],[42858,1,\"\uA76B\"],[42859,2],[42860,1,\"\uA76D\"],[42861,2],[42862,1,\"\uA76F\"],[42863,2],[42864,1,\"\uA76F\"],[[42865,42872],2],[42873,1,\"\uA77A\"],[42874,2],[42875,1,\"\uA77C\"],[42876,2],[42877,1,\"\u1D79\"],[42878,1,\"\uA77F\"],[42879,2],[42880,1,\"\uA781\"],[42881,2],[42882,1,\"\uA783\"],[42883,2],[42884,1,\"\uA785\"],[42885,2],[42886,1,\"\uA787\"],[[42887,42888],2],[[42889,42890],2],[42891,1,\"\uA78C\"],[42892,2],[42893,1,\"\u0265\"],[42894,2],[42895,2],[42896,1,\"\uA791\"],[42897,2],[42898,1,\"\uA793\"],[42899,2],[[42900,42901],2],[42902,1,\"\uA797\"],[42903,2],[42904,1,\"\uA799\"],[42905,2],[42906,1,\"\uA79B\"],[42907,2],[42908,1,\"\uA79D\"],[42909,2],[42910,1,\"\uA79F\"],[42911,2],[42912,1,\"\uA7A1\"],[42913,2],[42914,1,\"\uA7A3\"],[42915,2],[42916,1,\"\uA7A5\"],[42917,2],[42918,1,\"\uA7A7\"],[42919,2],[42920,1,\"\uA7A9\"],[42921,2],[42922,1,\"\u0266\"],[42923,1,\"\u025C\"],[42924,1,\"\u0261\"],[42925,1,\"\u026C\"],[42926,1,\"\u026A\"],[42927,2],[42928,1,\"\u029E\"],[42929,1,\"\u0287\"],[42930,1,\"\u029D\"],[42931,1,\"\uAB53\"],[42932,1,\"\uA7B5\"],[42933,2],[42934,1,\"\uA7B7\"],[42935,2],[42936,1,\"\uA7B9\"],[42937,2],[42938,1,\"\uA7BB\"],[42939,2],[42940,1,\"\uA7BD\"],[42941,2],[42942,1,\"\uA7BF\"],[42943,2],[42944,1,\"\uA7C1\"],[42945,2],[42946,1,\"\uA7C3\"],[42947,2],[42948,1,\"\uA794\"],[42949,1,\"\u0282\"],[42950,1,\"\u1D8E\"],[42951,1,\"\uA7C8\"],[42952,2],[42953,1,\"\uA7CA\"],[42954,2],[[42955,42959],3],[42960,1,\"\uA7D1\"],[42961,2],[42962,3],[42963,2],[42964,3],[42965,2],[42966,1,\"\uA7D7\"],[42967,2],[42968,1,\"\uA7D9\"],[42969,2],[[42970,42993],3],[42994,1,\"c\"],[42995,1,\"f\"],[42996,1,\"q\"],[42997,1,\"\uA7F6\"],[42998,2],[42999,2],[43000,1,\"\u0127\"],[43001,1,\"\u0153\"],[43002,2],[[43003,43007],2],[[43008,43047],2],[[43048,43051],2],[43052,2],[[43053,43055],3],[[43056,43065],2],[[43066,43071],3],[[43072,43123],2],[[43124,43127],2],[[43128,43135],3],[[43136,43204],2],[43205,2],[[43206,43213],3],[[43214,43215],2],[[43216,43225],2],[[43226,43231],3],[[43232,43255],2],[[43256,43258],2],[43259,2],[43260,2],[43261,2],[[43262,43263],2],[[43264,43309],2],[[43310,43311],2],[[43312,43347],2],[[43348,43358],3],[43359,2],[[43360,43388],2],[[43389,43391],3],[[43392,43456],2],[[43457,43469],2],[43470,3],[[43471,43481],2],[[43482,43485],3],[[43486,43487],2],[[43488,43518],2],[43519,3],[[43520,43574],2],[[43575,43583],3],[[43584,43597],2],[[43598,43599],3],[[43600,43609],2],[[43610,43611],3],[[43612,43615],2],[[43616,43638],2],[[43639,43641],2],[[43642,43643],2],[[43644,43647],2],[[43648,43714],2],[[43715,43738],3],[[43739,43741],2],[[43742,43743],2],[[43744,43759],2],[[43760,43761],2],[[43762,43766],2],[[43767,43776],3],[[43777,43782],2],[[43783,43784],3],[[43785,43790],2],[[43791,43792],3],[[43793,43798],2],[[43799,43807],3],[[43808,43814],2],[43815,3],[[43816,43822],2],[43823,3],[[43824,43866],2],[43867,2],[43868,1,\"\uA727\"],[43869,1,\"\uAB37\"],[43870,1,\"\u026B\"],[43871,1,\"\uAB52\"],[[43872,43875],2],[[43876,43877],2],[[43878,43879],2],[43880,2],[43881,1,\"\u028D\"],[[43882,43883],2],[[43884,43887],3],[43888,1,\"\u13A0\"],[43889,1,\"\u13A1\"],[43890,1,\"\u13A2\"],[43891,1,\"\u13A3\"],[43892,1,\"\u13A4\"],[43893,1,\"\u13A5\"],[43894,1,\"\u13A6\"],[43895,1,\"\u13A7\"],[43896,1,\"\u13A8\"],[43897,1,\"\u13A9\"],[43898,1,\"\u13AA\"],[43899,1,\"\u13AB\"],[43900,1,\"\u13AC\"],[43901,1,\"\u13AD\"],[43902,1,\"\u13AE\"],[43903,1,\"\u13AF\"],[43904,1,\"\u13B0\"],[43905,1,\"\u13B1\"],[43906,1,\"\u13B2\"],[43907,1,\"\u13B3\"],[43908,1,\"\u13B4\"],[43909,1,\"\u13B5\"],[43910,1,\"\u13B6\"],[43911,1,\"\u13B7\"],[43912,1,\"\u13B8\"],[43913,1,\"\u13B9\"],[43914,1,\"\u13BA\"],[43915,1,\"\u13BB\"],[43916,1,\"\u13BC\"],[43917,1,\"\u13BD\"],[43918,1,\"\u13BE\"],[43919,1,\"\u13BF\"],[43920,1,\"\u13C0\"],[43921,1,\"\u13C1\"],[43922,1,\"\u13C2\"],[43923,1,\"\u13C3\"],[43924,1,\"\u13C4\"],[43925,1,\"\u13C5\"],[43926,1,\"\u13C6\"],[43927,1,\"\u13C7\"],[43928,1,\"\u13C8\"],[43929,1,\"\u13C9\"],[43930,1,\"\u13CA\"],[43931,1,\"\u13CB\"],[43932,1,\"\u13CC\"],[43933,1,\"\u13CD\"],[43934,1,\"\u13CE\"],[43935,1,\"\u13CF\"],[43936,1,\"\u13D0\"],[43937,1,\"\u13D1\"],[43938,1,\"\u13D2\"],[43939,1,\"\u13D3\"],[43940,1,\"\u13D4\"],[43941,1,\"\u13D5\"],[43942,1,\"\u13D6\"],[43943,1,\"\u13D7\"],[43944,1,\"\u13D8\"],[43945,1,\"\u13D9\"],[43946,1,\"\u13DA\"],[43947,1,\"\u13DB\"],[43948,1,\"\u13DC\"],[43949,1,\"\u13DD\"],[43950,1,\"\u13DE\"],[43951,1,\"\u13DF\"],[43952,1,\"\u13E0\"],[43953,1,\"\u13E1\"],[43954,1,\"\u13E2\"],[43955,1,\"\u13E3\"],[43956,1,\"\u13E4\"],[43957,1,\"\u13E5\"],[43958,1,\"\u13E6\"],[43959,1,\"\u13E7\"],[43960,1,\"\u13E8\"],[43961,1,\"\u13E9\"],[43962,1,\"\u13EA\"],[43963,1,\"\u13EB\"],[43964,1,\"\u13EC\"],[43965,1,\"\u13ED\"],[43966,1,\"\u13EE\"],[43967,1,\"\u13EF\"],[[43968,44010],2],[44011,2],[[44012,44013],2],[[44014,44015],3],[[44016,44025],2],[[44026,44031],3],[[44032,55203],2],[[55204,55215],3],[[55216,55238],2],[[55239,55242],3],[[55243,55291],2],[[55292,55295],3],[[55296,57343],3],[[57344,63743],3],[63744,1,\"\u8C48\"],[63745,1,\"\u66F4\"],[63746,1,\"\u8ECA\"],[63747,1,\"\u8CC8\"],[63748,1,\"\u6ED1\"],[63749,1,\"\u4E32\"],[63750,1,\"\u53E5\"],[[63751,63752],1,\"\u9F9C\"],[63753,1,\"\u5951\"],[63754,1,\"\u91D1\"],[63755,1,\"\u5587\"],[63756,1,\"\u5948\"],[63757,1,\"\u61F6\"],[63758,1,\"\u7669\"],[63759,1,\"\u7F85\"],[63760,1,\"\u863F\"],[63761,1,\"\u87BA\"],[63762,1,\"\u88F8\"],[63763,1,\"\u908F\"],[63764,1,\"\u6A02\"],[63765,1,\"\u6D1B\"],[63766,1,\"\u70D9\"],[63767,1,\"\u73DE\"],[63768,1,\"\u843D\"],[63769,1,\"\u916A\"],[63770,1,\"\u99F1\"],[63771,1,\"\u4E82\"],[63772,1,\"\u5375\"],[63773,1,\"\u6B04\"],[63774,1,\"\u721B\"],[63775,1,\"\u862D\"],[63776,1,\"\u9E1E\"],[63777,1,\"\u5D50\"],[63778,1,\"\u6FEB\"],[63779,1,\"\u85CD\"],[63780,1,\"\u8964\"],[63781,1,\"\u62C9\"],[63782,1,\"\u81D8\"],[63783,1,\"\u881F\"],[63784,1,\"\u5ECA\"],[63785,1,\"\u6717\"],[63786,1,\"\u6D6A\"],[63787,1,\"\u72FC\"],[63788,1,\"\u90CE\"],[63789,1,\"\u4F86\"],[63790,1,\"\u51B7\"],[63791,1,\"\u52DE\"],[63792,1,\"\u64C4\"],[63793,1,\"\u6AD3\"],[63794,1,\"\u7210\"],[63795,1,\"\u76E7\"],[63796,1,\"\u8001\"],[63797,1,\"\u8606\"],[63798,1,\"\u865C\"],[63799,1,\"\u8DEF\"],[63800,1,\"\u9732\"],[63801,1,\"\u9B6F\"],[63802,1,\"\u9DFA\"],[63803,1,\"\u788C\"],[63804,1,\"\u797F\"],[63805,1,\"\u7DA0\"],[63806,1,\"\u83C9\"],[63807,1,\"\u9304\"],[63808,1,\"\u9E7F\"],[63809,1,\"\u8AD6\"],[63810,1,\"\u58DF\"],[63811,1,\"\u5F04\"],[63812,1,\"\u7C60\"],[63813,1,\"\u807E\"],[63814,1,\"\u7262\"],[63815,1,\"\u78CA\"],[63816,1,\"\u8CC2\"],[63817,1,\"\u96F7\"],[63818,1,\"\u58D8\"],[63819,1,\"\u5C62\"],[63820,1,\"\u6A13\"],[63821,1,\"\u6DDA\"],[63822,1,\"\u6F0F\"],[63823,1,\"\u7D2F\"],[63824,1,\"\u7E37\"],[63825,1,\"\u964B\"],[63826,1,\"\u52D2\"],[63827,1,\"\u808B\"],[63828,1,\"\u51DC\"],[63829,1,\"\u51CC\"],[63830,1,\"\u7A1C\"],[63831,1,\"\u7DBE\"],[63832,1,\"\u83F1\"],[63833,1,\"\u9675\"],[63834,1,\"\u8B80\"],[63835,1,\"\u62CF\"],[63836,1,\"\u6A02\"],[63837,1,\"\u8AFE\"],[63838,1,\"\u4E39\"],[63839,1,\"\u5BE7\"],[63840,1,\"\u6012\"],[63841,1,\"\u7387\"],[63842,1,\"\u7570\"],[63843,1,\"\u5317\"],[63844,1,\"\u78FB\"],[63845,1,\"\u4FBF\"],[63846,1,\"\u5FA9\"],[63847,1,\"\u4E0D\"],[63848,1,\"\u6CCC\"],[63849,1,\"\u6578\"],[63850,1,\"\u7D22\"],[63851,1,\"\u53C3\"],[63852,1,\"\u585E\"],[63853,1,\"\u7701\"],[63854,1,\"\u8449\"],[63855,1,\"\u8AAA\"],[63856,1,\"\u6BBA\"],[63857,1,\"\u8FB0\"],[63858,1,\"\u6C88\"],[63859,1,\"\u62FE\"],[63860,1,\"\u82E5\"],[63861,1,\"\u63A0\"],[63862,1,\"\u7565\"],[63863,1,\"\u4EAE\"],[63864,1,\"\u5169\"],[63865,1,\"\u51C9\"],[63866,1,\"\u6881\"],[63867,1,\"\u7CE7\"],[63868,1,\"\u826F\"],[63869,1,\"\u8AD2\"],[63870,1,\"\u91CF\"],[63871,1,\"\u52F5\"],[63872,1,\"\u5442\"],[63873,1,\"\u5973\"],[63874,1,\"\u5EEC\"],[63875,1,\"\u65C5\"],[63876,1,\"\u6FFE\"],[63877,1,\"\u792A\"],[63878,1,\"\u95AD\"],[63879,1,\"\u9A6A\"],[63880,1,\"\u9E97\"],[63881,1,\"\u9ECE\"],[63882,1,\"\u529B\"],[63883,1,\"\u66C6\"],[63884,1,\"\u6B77\"],[63885,1,\"\u8F62\"],[63886,1,\"\u5E74\"],[63887,1,\"\u6190\"],[63888,1,\"\u6200\"],[63889,1,\"\u649A\"],[63890,1,\"\u6F23\"],[63891,1,\"\u7149\"],[63892,1,\"\u7489\"],[63893,1,\"\u79CA\"],[63894,1,\"\u7DF4\"],[63895,1,\"\u806F\"],[63896,1,\"\u8F26\"],[63897,1,\"\u84EE\"],[63898,1,\"\u9023\"],[63899,1,\"\u934A\"],[63900,1,\"\u5217\"],[63901,1,\"\u52A3\"],[63902,1,\"\u54BD\"],[63903,1,\"\u70C8\"],[63904,1,\"\u88C2\"],[63905,1,\"\u8AAA\"],[63906,1,\"\u5EC9\"],[63907,1,\"\u5FF5\"],[63908,1,\"\u637B\"],[63909,1,\"\u6BAE\"],[63910,1,\"\u7C3E\"],[63911,1,\"\u7375\"],[63912,1,\"\u4EE4\"],[63913,1,\"\u56F9\"],[63914,1,\"\u5BE7\"],[63915,1,\"\u5DBA\"],[63916,1,\"\u601C\"],[63917,1,\"\u73B2\"],[63918,1,\"\u7469\"],[63919,1,\"\u7F9A\"],[63920,1,\"\u8046\"],[63921,1,\"\u9234\"],[63922,1,\"\u96F6\"],[63923,1,\"\u9748\"],[63924,1,\"\u9818\"],[63925,1,\"\u4F8B\"],[63926,1,\"\u79AE\"],[63927,1,\"\u91B4\"],[63928,1,\"\u96B8\"],[63929,1,\"\u60E1\"],[63930,1,\"\u4E86\"],[63931,1,\"\u50DA\"],[63932,1,\"\u5BEE\"],[63933,1,\"\u5C3F\"],[63934,1,\"\u6599\"],[63935,1,\"\u6A02\"],[63936,1,\"\u71CE\"],[63937,1,\"\u7642\"],[63938,1,\"\u84FC\"],[63939,1,\"\u907C\"],[63940,1,\"\u9F8D\"],[63941,1,\"\u6688\"],[63942,1,\"\u962E\"],[63943,1,\"\u5289\"],[63944,1,\"\u677B\"],[63945,1,\"\u67F3\"],[63946,1,\"\u6D41\"],[63947,1,\"\u6E9C\"],[63948,1,\"\u7409\"],[63949,1,\"\u7559\"],[63950,1,\"\u786B\"],[63951,1,\"\u7D10\"],[63952,1,\"\u985E\"],[63953,1,\"\u516D\"],[63954,1,\"\u622E\"],[63955,1,\"\u9678\"],[63956,1,\"\u502B\"],[63957,1,\"\u5D19\"],[63958,1,\"\u6DEA\"],[63959,1,\"\u8F2A\"],[63960,1,\"\u5F8B\"],[63961,1,\"\u6144\"],[63962,1,\"\u6817\"],[63963,1,\"\u7387\"],[63964,1,\"\u9686\"],[63965,1,\"\u5229\"],[63966,1,\"\u540F\"],[63967,1,\"\u5C65\"],[63968,1,\"\u6613\"],[63969,1,\"\u674E\"],[63970,1,\"\u68A8\"],[63971,1,\"\u6CE5\"],[63972,1,\"\u7406\"],[63973,1,\"\u75E2\"],[63974,1,\"\u7F79\"],[63975,1,\"\u88CF\"],[63976,1,\"\u88E1\"],[63977,1,\"\u91CC\"],[63978,1,\"\u96E2\"],[63979,1,\"\u533F\"],[63980,1,\"\u6EBA\"],[63981,1,\"\u541D\"],[63982,1,\"\u71D0\"],[63983,1,\"\u7498\"],[63984,1,\"\u85FA\"],[63985,1,\"\u96A3\"],[63986,1,\"\u9C57\"],[63987,1,\"\u9E9F\"],[63988,1,\"\u6797\"],[63989,1,\"\u6DCB\"],[63990,1,\"\u81E8\"],[63991,1,\"\u7ACB\"],[63992,1,\"\u7B20\"],[63993,1,\"\u7C92\"],[63994,1,\"\u72C0\"],[63995,1,\"\u7099\"],[63996,1,\"\u8B58\"],[63997,1,\"\u4EC0\"],[63998,1,\"\u8336\"],[63999,1,\"\u523A\"],[64000,1,\"\u5207\"],[64001,1,\"\u5EA6\"],[64002,1,\"\u62D3\"],[64003,1,\"\u7CD6\"],[64004,1,\"\u5B85\"],[64005,1,\"\u6D1E\"],[64006,1,\"\u66B4\"],[64007,1,\"\u8F3B\"],[64008,1,\"\u884C\"],[64009,1,\"\u964D\"],[64010,1,\"\u898B\"],[64011,1,\"\u5ED3\"],[64012,1,\"\u5140\"],[64013,1,\"\u55C0\"],[[64014,64015],2],[64016,1,\"\u585A\"],[64017,2],[64018,1,\"\u6674\"],[[64019,64020],2],[64021,1,\"\u51DE\"],[64022,1,\"\u732A\"],[64023,1,\"\u76CA\"],[64024,1,\"\u793C\"],[64025,1,\"\u795E\"],[64026,1,\"\u7965\"],[64027,1,\"\u798F\"],[64028,1,\"\u9756\"],[64029,1,\"\u7CBE\"],[64030,1,\"\u7FBD\"],[64031,2],[64032,1,\"\u8612\"],[64033,2],[64034,1,\"\u8AF8\"],[[64035,64036],2],[64037,1,\"\u9038\"],[64038,1,\"\u90FD\"],[[64039,64041],2],[64042,1,\"\u98EF\"],[64043,1,\"\u98FC\"],[64044,1,\"\u9928\"],[64045,1,\"\u9DB4\"],[64046,1,\"\u90DE\"],[64047,1,\"\u96B7\"],[64048,1,\"\u4FAE\"],[64049,1,\"\u50E7\"],[64050,1,\"\u514D\"],[64051,1,\"\u52C9\"],[64052,1,\"\u52E4\"],[64053,1,\"\u5351\"],[64054,1,\"\u559D\"],[64055,1,\"\u5606\"],[64056,1,\"\u5668\"],[64057,1,\"\u5840\"],[64058,1,\"\u58A8\"],[64059,1,\"\u5C64\"],[64060,1,\"\u5C6E\"],[64061,1,\"\u6094\"],[64062,1,\"\u6168\"],[64063,1,\"\u618E\"],[64064,1,\"\u61F2\"],[64065,1,\"\u654F\"],[64066,1,\"\u65E2\"],[64067,1,\"\u6691\"],[64068,1,\"\u6885\"],[64069,1,\"\u6D77\"],[64070,1,\"\u6E1A\"],[64071,1,\"\u6F22\"],[64072,1,\"\u716E\"],[64073,1,\"\u722B\"],[64074,1,\"\u7422\"],[64075,1,\"\u7891\"],[64076,1,\"\u793E\"],[64077,1,\"\u7949\"],[64078,1,\"\u7948\"],[64079,1,\"\u7950\"],[64080,1,\"\u7956\"],[64081,1,\"\u795D\"],[64082,1,\"\u798D\"],[64083,1,\"\u798E\"],[64084,1,\"\u7A40\"],[64085,1,\"\u7A81\"],[64086,1,\"\u7BC0\"],[64087,1,\"\u7DF4\"],[64088,1,\"\u7E09\"],[64089,1,\"\u7E41\"],[64090,1,\"\u7F72\"],[64091,1,\"\u8005\"],[64092,1,\"\u81ED\"],[[64093,64094],1,\"\u8279\"],[64095,1,\"\u8457\"],[64096,1,\"\u8910\"],[64097,1,\"\u8996\"],[64098,1,\"\u8B01\"],[64099,1,\"\u8B39\"],[64100,1,\"\u8CD3\"],[64101,1,\"\u8D08\"],[64102,1,\"\u8FB6\"],[64103,1,\"\u9038\"],[64104,1,\"\u96E3\"],[64105,1,\"\u97FF\"],[64106,1,\"\u983B\"],[64107,1,\"\u6075\"],[64108,1,\"\uD850\uDEEE\"],[64109,1,\"\u8218\"],[[64110,64111],3],[64112,1,\"\u4E26\"],[64113,1,\"\u51B5\"],[64114,1,\"\u5168\"],[64115,1,\"\u4F80\"],[64116,1,\"\u5145\"],[64117,1,\"\u5180\"],[64118,1,\"\u52C7\"],[64119,1,\"\u52FA\"],[64120,1,\"\u559D\"],[64121,1,\"\u5555\"],[64122,1,\"\u5599\"],[64123,1,\"\u55E2\"],[64124,1,\"\u585A\"],[64125,1,\"\u58B3\"],[64126,1,\"\u5944\"],[64127,1,\"\u5954\"],[64128,1,\"\u5A62\"],[64129,1,\"\u5B28\"],[64130,1,\"\u5ED2\"],[64131,1,\"\u5ED9\"],[64132,1,\"\u5F69\"],[64133,1,\"\u5FAD\"],[64134,1,\"\u60D8\"],[64135,1,\"\u614E\"],[64136,1,\"\u6108\"],[64137,1,\"\u618E\"],[64138,1,\"\u6160\"],[64139,1,\"\u61F2\"],[64140,1,\"\u6234\"],[64141,1,\"\u63C4\"],[64142,1,\"\u641C\"],[64143,1,\"\u6452\"],[64144,1,\"\u6556\"],[64145,1,\"\u6674\"],[64146,1,\"\u6717\"],[64147,1,\"\u671B\"],[64148,1,\"\u6756\"],[64149,1,\"\u6B79\"],[64150,1,\"\u6BBA\"],[64151,1,\"\u6D41\"],[64152,1,\"\u6EDB\"],[64153,1,\"\u6ECB\"],[64154,1,\"\u6F22\"],[64155,1,\"\u701E\"],[64156,1,\"\u716E\"],[64157,1,\"\u77A7\"],[64158,1,\"\u7235\"],[64159,1,\"\u72AF\"],[64160,1,\"\u732A\"],[64161,1,\"\u7471\"],[64162,1,\"\u7506\"],[64163,1,\"\u753B\"],[64164,1,\"\u761D\"],[64165,1,\"\u761F\"],[64166,1,\"\u76CA\"],[64167,1,\"\u76DB\"],[64168,1,\"\u76F4\"],[64169,1,\"\u774A\"],[64170,1,\"\u7740\"],[64171,1,\"\u78CC\"],[64172,1,\"\u7AB1\"],[64173,1,\"\u7BC0\"],[64174,1,\"\u7C7B\"],[64175,1,\"\u7D5B\"],[64176,1,\"\u7DF4\"],[64177,1,\"\u7F3E\"],[64178,1,\"\u8005\"],[64179,1,\"\u8352\"],[64180,1,\"\u83EF\"],[64181,1,\"\u8779\"],[64182,1,\"\u8941\"],[64183,1,\"\u8986\"],[64184,1,\"\u8996\"],[64185,1,\"\u8ABF\"],[64186,1,\"\u8AF8\"],[64187,1,\"\u8ACB\"],[64188,1,\"\u8B01\"],[64189,1,\"\u8AFE\"],[64190,1,\"\u8AED\"],[64191,1,\"\u8B39\"],[64192,1,\"\u8B8A\"],[64193,1,\"\u8D08\"],[64194,1,\"\u8F38\"],[64195,1,\"\u9072\"],[64196,1,\"\u9199\"],[64197,1,\"\u9276\"],[64198,1,\"\u967C\"],[64199,1,\"\u96E3\"],[64200,1,\"\u9756\"],[64201,1,\"\u97DB\"],[64202,1,\"\u97FF\"],[64203,1,\"\u980B\"],[64204,1,\"\u983B\"],[64205,1,\"\u9B12\"],[64206,1,\"\u9F9C\"],[64207,1,\"\uD84A\uDC4A\"],[64208,1,\"\uD84A\uDC44\"],[64209,1,\"\uD84C\uDFD5\"],[64210,1,\"\u3B9D\"],[64211,1,\"\u4018\"],[64212,1,\"\u4039\"],[64213,1,\"\uD854\uDE49\"],[64214,1,\"\uD857\uDCD0\"],[64215,1,\"\uD85F\uDED3\"],[64216,1,\"\u9F43\"],[64217,1,\"\u9F8E\"],[[64218,64255],3],[64256,1,\"ff\"],[64257,1,\"fi\"],[64258,1,\"fl\"],[64259,1,\"ffi\"],[64260,1,\"ffl\"],[[64261,64262],1,\"st\"],[[64263,64274],3],[64275,1,\"\u0574\u0576\"],[64276,1,\"\u0574\u0565\"],[64277,1,\"\u0574\u056B\"],[64278,1,\"\u057E\u0576\"],[64279,1,\"\u0574\u056D\"],[[64280,64284],3],[64285,1,\"\u05D9\u05B4\"],[64286,2],[64287,1,\"\u05F2\u05B7\"],[64288,1,\"\u05E2\"],[64289,1,\"\u05D0\"],[64290,1,\"\u05D3\"],[64291,1,\"\u05D4\"],[64292,1,\"\u05DB\"],[64293,1,\"\u05DC\"],[64294,1,\"\u05DD\"],[64295,1,\"\u05E8\"],[64296,1,\"\u05EA\"],[64297,5,\"+\"],[64298,1,\"\u05E9\u05C1\"],[64299,1,\"\u05E9\u05C2\"],[64300,1,\"\u05E9\u05BC\u05C1\"],[64301,1,\"\u05E9\u05BC\u05C2\"],[64302,1,\"\u05D0\u05B7\"],[64303,1,\"\u05D0\u05B8\"],[64304,1,\"\u05D0\u05BC\"],[64305,1,\"\u05D1\u05BC\"],[64306,1,\"\u05D2\u05BC\"],[64307,1,\"\u05D3\u05BC\"],[64308,1,\"\u05D4\u05BC\"],[64309,1,\"\u05D5\u05BC\"],[64310,1,\"\u05D6\u05BC\"],[64311,3],[64312,1,\"\u05D8\u05BC\"],[64313,1,\"\u05D9\u05BC\"],[64314,1,\"\u05DA\u05BC\"],[64315,1,\"\u05DB\u05BC\"],[64316,1,\"\u05DC\u05BC\"],[64317,3],[64318,1,\"\u05DE\u05BC\"],[64319,3],[64320,1,\"\u05E0\u05BC\"],[64321,1,\"\u05E1\u05BC\"],[64322,3],[64323,1,\"\u05E3\u05BC\"],[64324,1,\"\u05E4\u05BC\"],[64325,3],[64326,1,\"\u05E6\u05BC\"],[64327,1,\"\u05E7\u05BC\"],[64328,1,\"\u05E8\u05BC\"],[64329,1,\"\u05E9\u05BC\"],[64330,1,\"\u05EA\u05BC\"],[64331,1,\"\u05D5\u05B9\"],[64332,1,\"\u05D1\u05BF\"],[64333,1,\"\u05DB\u05BF\"],[64334,1,\"\u05E4\u05BF\"],[64335,1,\"\u05D0\u05DC\"],[[64336,64337],1,\"\u0671\"],[[64338,64341],1,\"\u067B\"],[[64342,64345],1,\"\u067E\"],[[64346,64349],1,\"\u0680\"],[[64350,64353],1,\"\u067A\"],[[64354,64357],1,\"\u067F\"],[[64358,64361],1,\"\u0679\"],[[64362,64365],1,\"\u06A4\"],[[64366,64369],1,\"\u06A6\"],[[64370,64373],1,\"\u0684\"],[[64374,64377],1,\"\u0683\"],[[64378,64381],1,\"\u0686\"],[[64382,64385],1,\"\u0687\"],[[64386,64387],1,\"\u068D\"],[[64388,64389],1,\"\u068C\"],[[64390,64391],1,\"\u068E\"],[[64392,64393],1,\"\u0688\"],[[64394,64395],1,\"\u0698\"],[[64396,64397],1,\"\u0691\"],[[64398,64401],1,\"\u06A9\"],[[64402,64405],1,\"\u06AF\"],[[64406,64409],1,\"\u06B3\"],[[64410,64413],1,\"\u06B1\"],[[64414,64415],1,\"\u06BA\"],[[64416,64419],1,\"\u06BB\"],[[64420,64421],1,\"\u06C0\"],[[64422,64425],1,\"\u06C1\"],[[64426,64429],1,\"\u06BE\"],[[64430,64431],1,\"\u06D2\"],[[64432,64433],1,\"\u06D3\"],[[64434,64449],2],[64450,2],[[64451,64466],3],[[64467,64470],1,\"\u06AD\"],[[64471,64472],1,\"\u06C7\"],[[64473,64474],1,\"\u06C6\"],[[64475,64476],1,\"\u06C8\"],[64477,1,\"\u06C7\u0674\"],[[64478,64479],1,\"\u06CB\"],[[64480,64481],1,\"\u06C5\"],[[64482,64483],1,\"\u06C9\"],[[64484,64487],1,\"\u06D0\"],[[64488,64489],1,\"\u0649\"],[[64490,64491],1,\"\u0626\u0627\"],[[64492,64493],1,\"\u0626\u06D5\"],[[64494,64495],1,\"\u0626\u0648\"],[[64496,64497],1,\"\u0626\u06C7\"],[[64498,64499],1,\"\u0626\u06C6\"],[[64500,64501],1,\"\u0626\u06C8\"],[[64502,64504],1,\"\u0626\u06D0\"],[[64505,64507],1,\"\u0626\u0649\"],[[64508,64511],1,\"\u06CC\"],[64512,1,\"\u0626\u062C\"],[64513,1,\"\u0626\u062D\"],[64514,1,\"\u0626\u0645\"],[64515,1,\"\u0626\u0649\"],[64516,1,\"\u0626\u064A\"],[64517,1,\"\u0628\u062C\"],[64518,1,\"\u0628\u062D\"],[64519,1,\"\u0628\u062E\"],[64520,1,\"\u0628\u0645\"],[64521,1,\"\u0628\u0649\"],[64522,1,\"\u0628\u064A\"],[64523,1,\"\u062A\u062C\"],[64524,1,\"\u062A\u062D\"],[64525,1,\"\u062A\u062E\"],[64526,1,\"\u062A\u0645\"],[64527,1,\"\u062A\u0649\"],[64528,1,\"\u062A\u064A\"],[64529,1,\"\u062B\u062C\"],[64530,1,\"\u062B\u0645\"],[64531,1,\"\u062B\u0649\"],[64532,1,\"\u062B\u064A\"],[64533,1,\"\u062C\u062D\"],[64534,1,\"\u062C\u0645\"],[64535,1,\"\u062D\u062C\"],[64536,1,\"\u062D\u0645\"],[64537,1,\"\u062E\u062C\"],[64538,1,\"\u062E\u062D\"],[64539,1,\"\u062E\u0645\"],[64540,1,\"\u0633\u062C\"],[64541,1,\"\u0633\u062D\"],[64542,1,\"\u0633\u062E\"],[64543,1,\"\u0633\u0645\"],[64544,1,\"\u0635\u062D\"],[64545,1,\"\u0635\u0645\"],[64546,1,\"\u0636\u062C\"],[64547,1,\"\u0636\u062D\"],[64548,1,\"\u0636\u062E\"],[64549,1,\"\u0636\u0645\"],[64550,1,\"\u0637\u062D\"],[64551,1,\"\u0637\u0645\"],[64552,1,\"\u0638\u0645\"],[64553,1,\"\u0639\u062C\"],[64554,1,\"\u0639\u0645\"],[64555,1,\"\u063A\u062C\"],[64556,1,\"\u063A\u0645\"],[64557,1,\"\u0641\u062C\"],[64558,1,\"\u0641\u062D\"],[64559,1,\"\u0641\u062E\"],[64560,1,\"\u0641\u0645\"],[64561,1,\"\u0641\u0649\"],[64562,1,\"\u0641\u064A\"],[64563,1,\"\u0642\u062D\"],[64564,1,\"\u0642\u0645\"],[64565,1,\"\u0642\u0649\"],[64566,1,\"\u0642\u064A\"],[64567,1,\"\u0643\u0627\"],[64568,1,\"\u0643\u062C\"],[64569,1,\"\u0643\u062D\"],[64570,1,\"\u0643\u062E\"],[64571,1,\"\u0643\u0644\"],[64572,1,\"\u0643\u0645\"],[64573,1,\"\u0643\u0649\"],[64574,1,\"\u0643\u064A\"],[64575,1,\"\u0644\u062C\"],[64576,1,\"\u0644\u062D\"],[64577,1,\"\u0644\u062E\"],[64578,1,\"\u0644\u0645\"],[64579,1,\"\u0644\u0649\"],[64580,1,\"\u0644\u064A\"],[64581,1,\"\u0645\u062C\"],[64582,1,\"\u0645\u062D\"],[64583,1,\"\u0645\u062E\"],[64584,1,\"\u0645\u0645\"],[64585,1,\"\u0645\u0649\"],[64586,1,\"\u0645\u064A\"],[64587,1,\"\u0646\u062C\"],[64588,1,\"\u0646\u062D\"],[64589,1,\"\u0646\u062E\"],[64590,1,\"\u0646\u0645\"],[64591,1,\"\u0646\u0649\"],[64592,1,\"\u0646\u064A\"],[64593,1,\"\u0647\u062C\"],[64594,1,\"\u0647\u0645\"],[64595,1,\"\u0647\u0649\"],[64596,1,\"\u0647\u064A\"],[64597,1,\"\u064A\u062C\"],[64598,1,\"\u064A\u062D\"],[64599,1,\"\u064A\u062E\"],[64600,1,\"\u064A\u0645\"],[64601,1,\"\u064A\u0649\"],[64602,1,\"\u064A\u064A\"],[64603,1,\"\u0630\u0670\"],[64604,1,\"\u0631\u0670\"],[64605,1,\"\u0649\u0670\"],[64606,5,\" \u064C\u0651\"],[64607,5,\" \u064D\u0651\"],[64608,5,\" \u064E\u0651\"],[64609,5,\" \u064F\u0651\"],[64610,5,\" \u0650\u0651\"],[64611,5,\" \u0651\u0670\"],[64612,1,\"\u0626\u0631\"],[64613,1,\"\u0626\u0632\"],[64614,1,\"\u0626\u0645\"],[64615,1,\"\u0626\u0646\"],[64616,1,\"\u0626\u0649\"],[64617,1,\"\u0626\u064A\"],[64618,1,\"\u0628\u0631\"],[64619,1,\"\u0628\u0632\"],[64620,1,\"\u0628\u0645\"],[64621,1,\"\u0628\u0646\"],[64622,1,\"\u0628\u0649\"],[64623,1,\"\u0628\u064A\"],[64624,1,\"\u062A\u0631\"],[64625,1,\"\u062A\u0632\"],[64626,1,\"\u062A\u0645\"],[64627,1,\"\u062A\u0646\"],[64628,1,\"\u062A\u0649\"],[64629,1,\"\u062A\u064A\"],[64630,1,\"\u062B\u0631\"],[64631,1,\"\u062B\u0632\"],[64632,1,\"\u062B\u0645\"],[64633,1,\"\u062B\u0646\"],[64634,1,\"\u062B\u0649\"],[64635,1,\"\u062B\u064A\"],[64636,1,\"\u0641\u0649\"],[64637,1,\"\u0641\u064A\"],[64638,1,\"\u0642\u0649\"],[64639,1,\"\u0642\u064A\"],[64640,1,\"\u0643\u0627\"],[64641,1,\"\u0643\u0644\"],[64642,1,\"\u0643\u0645\"],[64643,1,\"\u0643\u0649\"],[64644,1,\"\u0643\u064A\"],[64645,1,\"\u0644\u0645\"],[64646,1,\"\u0644\u0649\"],[64647,1,\"\u0644\u064A\"],[64648,1,\"\u0645\u0627\"],[64649,1,\"\u0645\u0645\"],[64650,1,\"\u0646\u0631\"],[64651,1,\"\u0646\u0632\"],[64652,1,\"\u0646\u0645\"],[64653,1,\"\u0646\u0646\"],[64654,1,\"\u0646\u0649\"],[64655,1,\"\u0646\u064A\"],[64656,1,\"\u0649\u0670\"],[64657,1,\"\u064A\u0631\"],[64658,1,\"\u064A\u0632\"],[64659,1,\"\u064A\u0645\"],[64660,1,\"\u064A\u0646\"],[64661,1,\"\u064A\u0649\"],[64662,1,\"\u064A\u064A\"],[64663,1,\"\u0626\u062C\"],[64664,1,\"\u0626\u062D\"],[64665,1,\"\u0626\u062E\"],[64666,1,\"\u0626\u0645\"],[64667,1,\"\u0626\u0647\"],[64668,1,\"\u0628\u062C\"],[64669,1,\"\u0628\u062D\"],[64670,1,\"\u0628\u062E\"],[64671,1,\"\u0628\u0645\"],[64672,1,\"\u0628\u0647\"],[64673,1,\"\u062A\u062C\"],[64674,1,\"\u062A\u062D\"],[64675,1,\"\u062A\u062E\"],[64676,1,\"\u062A\u0645\"],[64677,1,\"\u062A\u0647\"],[64678,1,\"\u062B\u0645\"],[64679,1,\"\u062C\u062D\"],[64680,1,\"\u062C\u0645\"],[64681,1,\"\u062D\u062C\"],[64682,1,\"\u062D\u0645\"],[64683,1,\"\u062E\u062C\"],[64684,1,\"\u062E\u0645\"],[64685,1,\"\u0633\u062C\"],[64686,1,\"\u0633\u062D\"],[64687,1,\"\u0633\u062E\"],[64688,1,\"\u0633\u0645\"],[64689,1,\"\u0635\u062D\"],[64690,1,\"\u0635\u062E\"],[64691,1,\"\u0635\u0645\"],[64692,1,\"\u0636\u062C\"],[64693,1,\"\u0636\u062D\"],[64694,1,\"\u0636\u062E\"],[64695,1,\"\u0636\u0645\"],[64696,1,\"\u0637\u062D\"],[64697,1,\"\u0638\u0645\"],[64698,1,\"\u0639\u062C\"],[64699,1,\"\u0639\u0645\"],[64700,1,\"\u063A\u062C\"],[64701,1,\"\u063A\u0645\"],[64702,1,\"\u0641\u062C\"],[64703,1,\"\u0641\u062D\"],[64704,1,\"\u0641\u062E\"],[64705,1,\"\u0641\u0645\"],[64706,1,\"\u0642\u062D\"],[64707,1,\"\u0642\u0645\"],[64708,1,\"\u0643\u062C\"],[64709,1,\"\u0643\u062D\"],[64710,1,\"\u0643\u062E\"],[64711,1,\"\u0643\u0644\"],[64712,1,\"\u0643\u0645\"],[64713,1,\"\u0644\u062C\"],[64714,1,\"\u0644\u062D\"],[64715,1,\"\u0644\u062E\"],[64716,1,\"\u0644\u0645\"],[64717,1,\"\u0644\u0647\"],[64718,1,\"\u0645\u062C\"],[64719,1,\"\u0645\u062D\"],[64720,1,\"\u0645\u062E\"],[64721,1,\"\u0645\u0645\"],[64722,1,\"\u0646\u062C\"],[64723,1,\"\u0646\u062D\"],[64724,1,\"\u0646\u062E\"],[64725,1,\"\u0646\u0645\"],[64726,1,\"\u0646\u0647\"],[64727,1,\"\u0647\u062C\"],[64728,1,\"\u0647\u0645\"],[64729,1,\"\u0647\u0670\"],[64730,1,\"\u064A\u062C\"],[64731,1,\"\u064A\u062D\"],[64732,1,\"\u064A\u062E\"],[64733,1,\"\u064A\u0645\"],[64734,1,\"\u064A\u0647\"],[64735,1,\"\u0626\u0645\"],[64736,1,\"\u0626\u0647\"],[64737,1,\"\u0628\u0645\"],[64738,1,\"\u0628\u0647\"],[64739,1,\"\u062A\u0645\"],[64740,1,\"\u062A\u0647\"],[64741,1,\"\u062B\u0645\"],[64742,1,\"\u062B\u0647\"],[64743,1,\"\u0633\u0645\"],[64744,1,\"\u0633\u0647\"],[64745,1,\"\u0634\u0645\"],[64746,1,\"\u0634\u0647\"],[64747,1,\"\u0643\u0644\"],[64748,1,\"\u0643\u0645\"],[64749,1,\"\u0644\u0645\"],[64750,1,\"\u0646\u0645\"],[64751,1,\"\u0646\u0647\"],[64752,1,\"\u064A\u0645\"],[64753,1,\"\u064A\u0647\"],[64754,1,\"\u0640\u064E\u0651\"],[64755,1,\"\u0640\u064F\u0651\"],[64756,1,\"\u0640\u0650\u0651\"],[64757,1,\"\u0637\u0649\"],[64758,1,\"\u0637\u064A\"],[64759,1,\"\u0639\u0649\"],[64760,1,\"\u0639\u064A\"],[64761,1,\"\u063A\u0649\"],[64762,1,\"\u063A\u064A\"],[64763,1,\"\u0633\u0649\"],[64764,1,\"\u0633\u064A\"],[64765,1,\"\u0634\u0649\"],[64766,1,\"\u0634\u064A\"],[64767,1,\"\u062D\u0649\"],[64768,1,\"\u062D\u064A\"],[64769,1,\"\u062C\u0649\"],[64770,1,\"\u062C\u064A\"],[64771,1,\"\u062E\u0649\"],[64772,1,\"\u062E\u064A\"],[64773,1,\"\u0635\u0649\"],[64774,1,\"\u0635\u064A\"],[64775,1,\"\u0636\u0649\"],[64776,1,\"\u0636\u064A\"],[64777,1,\"\u0634\u062C\"],[64778,1,\"\u0634\u062D\"],[64779,1,\"\u0634\u062E\"],[64780,1,\"\u0634\u0645\"],[64781,1,\"\u0634\u0631\"],[64782,1,\"\u0633\u0631\"],[64783,1,\"\u0635\u0631\"],[64784,1,\"\u0636\u0631\"],[64785,1,\"\u0637\u0649\"],[64786,1,\"\u0637\u064A\"],[64787,1,\"\u0639\u0649\"],[64788,1,\"\u0639\u064A\"],[64789,1,\"\u063A\u0649\"],[64790,1,\"\u063A\u064A\"],[64791,1,\"\u0633\u0649\"],[64792,1,\"\u0633\u064A\"],[64793,1,\"\u0634\u0649\"],[64794,1,\"\u0634\u064A\"],[64795,1,\"\u062D\u0649\"],[64796,1,\"\u062D\u064A\"],[64797,1,\"\u062C\u0649\"],[64798,1,\"\u062C\u064A\"],[64799,1,\"\u062E\u0649\"],[64800,1,\"\u062E\u064A\"],[64801,1,\"\u0635\u0649\"],[64802,1,\"\u0635\u064A\"],[64803,1,\"\u0636\u0649\"],[64804,1,\"\u0636\u064A\"],[64805,1,\"\u0634\u062C\"],[64806,1,\"\u0634\u062D\"],[64807,1,\"\u0634\u062E\"],[64808,1,\"\u0634\u0645\"],[64809,1,\"\u0634\u0631\"],[64810,1,\"\u0633\u0631\"],[64811,1,\"\u0635\u0631\"],[64812,1,\"\u0636\u0631\"],[64813,1,\"\u0634\u062C\"],[64814,1,\"\u0634\u062D\"],[64815,1,\"\u0634\u062E\"],[64816,1,\"\u0634\u0645\"],[64817,1,\"\u0633\u0647\"],[64818,1,\"\u0634\u0647\"],[64819,1,\"\u0637\u0645\"],[64820,1,\"\u0633\u062C\"],[64821,1,\"\u0633\u062D\"],[64822,1,\"\u0633\u062E\"],[64823,1,\"\u0634\u062C\"],[64824,1,\"\u0634\u062D\"],[64825,1,\"\u0634\u062E\"],[64826,1,\"\u0637\u0645\"],[64827,1,\"\u0638\u0645\"],[[64828,64829],1,\"\u0627\u064B\"],[[64830,64831],2],[[64832,64847],2],[64848,1,\"\u062A\u062C\u0645\"],[[64849,64850],1,\"\u062A\u062D\u062C\"],[64851,1,\"\u062A\u062D\u0645\"],[64852,1,\"\u062A\u062E\u0645\"],[64853,1,\"\u062A\u0645\u062C\"],[64854,1,\"\u062A\u0645\u062D\"],[64855,1,\"\u062A\u0645\u062E\"],[[64856,64857],1,\"\u062C\u0645\u062D\"],[64858,1,\"\u062D\u0645\u064A\"],[64859,1,\"\u062D\u0645\u0649\"],[64860,1,\"\u0633\u062D\u062C\"],[64861,1,\"\u0633\u062C\u062D\"],[64862,1,\"\u0633\u062C\u0649\"],[[64863,64864],1,\"\u0633\u0645\u062D\"],[64865,1,\"\u0633\u0645\u062C\"],[[64866,64867],1,\"\u0633\u0645\u0645\"],[[64868,64869],1,\"\u0635\u062D\u062D\"],[64870,1,\"\u0635\u0645\u0645\"],[[64871,64872],1,\"\u0634\u062D\u0645\"],[64873,1,\"\u0634\u062C\u064A\"],[[64874,64875],1,\"\u0634\u0645\u062E\"],[[64876,64877],1,\"\u0634\u0645\u0645\"],[64878,1,\"\u0636\u062D\u0649\"],[[64879,64880],1,\"\u0636\u062E\u0645\"],[[64881,64882],1,\"\u0637\u0645\u062D\"],[64883,1,\"\u0637\u0645\u0645\"],[64884,1,\"\u0637\u0645\u064A\"],[64885,1,\"\u0639\u062C\u0645\"],[[64886,64887],1,\"\u0639\u0645\u0645\"],[64888,1,\"\u0639\u0645\u0649\"],[64889,1,\"\u063A\u0645\u0645\"],[64890,1,\"\u063A\u0645\u064A\"],[64891,1,\"\u063A\u0645\u0649\"],[[64892,64893],1,\"\u0641\u062E\u0645\"],[64894,1,\"\u0642\u0645\u062D\"],[64895,1,\"\u0642\u0645\u0645\"],[64896,1,\"\u0644\u062D\u0645\"],[64897,1,\"\u0644\u062D\u064A\"],[64898,1,\"\u0644\u062D\u0649\"],[[64899,64900],1,\"\u0644\u062C\u062C\"],[[64901,64902],1,\"\u0644\u062E\u0645\"],[[64903,64904],1,\"\u0644\u0645\u062D\"],[64905,1,\"\u0645\u062D\u062C\"],[64906,1,\"\u0645\u062D\u0645\"],[64907,1,\"\u0645\u062D\u064A\"],[64908,1,\"\u0645\u062C\u062D\"],[64909,1,\"\u0645\u062C\u0645\"],[64910,1,\"\u0645\u062E\u062C\"],[64911,1,\"\u0645\u062E\u0645\"],[[64912,64913],3],[64914,1,\"\u0645\u062C\u062E\"],[64915,1,\"\u0647\u0645\u062C\"],[64916,1,\"\u0647\u0645\u0645\"],[64917,1,\"\u0646\u062D\u0645\"],[64918,1,\"\u0646\u062D\u0649\"],[[64919,64920],1,\"\u0646\u062C\u0645\"],[64921,1,\"\u0646\u062C\u0649\"],[64922,1,\"\u0646\u0645\u064A\"],[64923,1,\"\u0646\u0645\u0649\"],[[64924,64925],1,\"\u064A\u0645\u0645\"],[64926,1,\"\u0628\u062E\u064A\"],[64927,1,\"\u062A\u062C\u064A\"],[64928,1,\"\u062A\u062C\u0649\"],[64929,1,\"\u062A\u062E\u064A\"],[64930,1,\"\u062A\u062E\u0649\"],[64931,1,\"\u062A\u0645\u064A\"],[64932,1,\"\u062A\u0645\u0649\"],[64933,1,\"\u062C\u0645\u064A\"],[64934,1,\"\u062C\u062D\u0649\"],[64935,1,\"\u062C\u0645\u0649\"],[64936,1,\"\u0633\u062E\u0649\"],[64937,1,\"\u0635\u062D\u064A\"],[64938,1,\"\u0634\u062D\u064A\"],[64939,1,\"\u0636\u062D\u064A\"],[64940,1,\"\u0644\u062C\u064A\"],[64941,1,\"\u0644\u0645\u064A\"],[64942,1,\"\u064A\u062D\u064A\"],[64943,1,\"\u064A\u062C\u064A\"],[64944,1,\"\u064A\u0645\u064A\"],[64945,1,\"\u0645\u0645\u064A\"],[64946,1,\"\u0642\u0645\u064A\"],[64947,1,\"\u0646\u062D\u064A\"],[64948,1,\"\u0642\u0645\u062D\"],[64949,1,\"\u0644\u062D\u0645\"],[64950,1,\"\u0639\u0645\u064A\"],[64951,1,\"\u0643\u0645\u064A\"],[64952,1,\"\u0646\u062C\u062D\"],[64953,1,\"\u0645\u062E\u064A\"],[64954,1,\"\u0644\u062C\u0645\"],[64955,1,\"\u0643\u0645\u0645\"],[64956,1,\"\u0644\u062C\u0645\"],[64957,1,\"\u0646\u062C\u062D\"],[64958,1,\"\u062C\u062D\u064A\"],[64959,1,\"\u062D\u062C\u064A\"],[64960,1,\"\u0645\u062C\u064A\"],[64961,1,\"\u0641\u0645\u064A\"],[64962,1,\"\u0628\u062D\u064A\"],[64963,1,\"\u0643\u0645\u0645\"],[64964,1,\"\u0639\u062C\u0645\"],[64965,1,\"\u0635\u0645\u0645\"],[64966,1,\"\u0633\u062E\u064A\"],[64967,1,\"\u0646\u062C\u064A\"],[[64968,64974],3],[64975,2],[[64976,65007],3],[65008,1,\"\u0635\u0644\u06D2\"],[65009,1,\"\u0642\u0644\u06D2\"],[65010,1,\"\u0627\u0644\u0644\u0647\"],[65011,1,\"\u0627\u0643\u0628\u0631\"],[65012,1,\"\u0645\u062D\u0645\u062F\"],[65013,1,\"\u0635\u0644\u0639\u0645\"],[65014,1,\"\u0631\u0633\u0648\u0644\"],[65015,1,\"\u0639\u0644\u064A\u0647\"],[65016,1,\"\u0648\u0633\u0644\u0645\"],[65017,1,\"\u0635\u0644\u0649\"],[65018,5,\"\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645\"],[65019,5,\"\u062C\u0644 \u062C\u0644\u0627\u0644\u0647\"],[65020,1,\"\u0631\u06CC\u0627\u0644\"],[65021,2],[[65022,65023],2],[[65024,65039],7],[65040,5,\",\"],[65041,1,\"\u3001\"],[65042,3],[65043,5,\":\"],[65044,5,\";\"],[65045,5,\"!\"],[65046,5,\"?\"],[65047,1,\"\u3016\"],[65048,1,\"\u3017\"],[65049,3],[[65050,65055],3],[[65056,65059],2],[[65060,65062],2],[[65063,65069],2],[[65070,65071],2],[65072,3],[65073,1,\"\u2014\"],[65074,1,\"\u2013\"],[[65075,65076],5,\"_\"],[65077,5,\"(\"],[65078,5,\")\"],[65079,5,\"{\"],[65080,5,\"}\"],[65081,1,\"\u3014\"],[65082,1,\"\u3015\"],[65083,1,\"\u3010\"],[65084,1,\"\u3011\"],[65085,1,\"\u300A\"],[65086,1,\"\u300B\"],[65087,1,\"\u3008\"],[65088,1,\"\u3009\"],[65089,1,\"\u300C\"],[65090,1,\"\u300D\"],[65091,1,\"\u300E\"],[65092,1,\"\u300F\"],[[65093,65094],2],[65095,5,\"[\"],[65096,5,\"]\"],[[65097,65100],5,\" \u0305\"],[[65101,65103],5,\"_\"],[65104,5,\",\"],[65105,1,\"\u3001\"],[65106,3],[65107,3],[65108,5,\";\"],[65109,5,\":\"],[65110,5,\"?\"],[65111,5,\"!\"],[65112,1,\"\u2014\"],[65113,5,\"(\"],[65114,5,\")\"],[65115,5,\"{\"],[65116,5,\"}\"],[65117,1,\"\u3014\"],[65118,1,\"\u3015\"],[65119,5,\"#\"],[65120,5,\"&\"],[65121,5,\"*\"],[65122,5,\"+\"],[65123,1,\"-\"],[65124,5,\"<\"],[65125,5,\">\"],[65126,5,\"=\"],[65127,3],[65128,5,\"\\\\\"],[65129,5,\"$\"],[65130,5,\"%\"],[65131,5,\"@\"],[[65132,65135],3],[65136,5,\" \u064B\"],[65137,1,\"\u0640\u064B\"],[65138,5,\" \u064C\"],[65139,2],[65140,5,\" \u064D\"],[65141,3],[65142,5,\" \u064E\"],[65143,1,\"\u0640\u064E\"],[65144,5,\" \u064F\"],[65145,1,\"\u0640\u064F\"],[65146,5,\" \u0650\"],[65147,1,\"\u0640\u0650\"],[65148,5,\" \u0651\"],[65149,1,\"\u0640\u0651\"],[65150,5,\" \u0652\"],[65151,1,\"\u0640\u0652\"],[65152,1,\"\u0621\"],[[65153,65154],1,\"\u0622\"],[[65155,65156],1,\"\u0623\"],[[65157,65158],1,\"\u0624\"],[[65159,65160],1,\"\u0625\"],[[65161,65164],1,\"\u0626\"],[[65165,65166],1,\"\u0627\"],[[65167,65170],1,\"\u0628\"],[[65171,65172],1,\"\u0629\"],[[65173,65176],1,\"\u062A\"],[[65177,65180],1,\"\u062B\"],[[65181,65184],1,\"\u062C\"],[[65185,65188],1,\"\u062D\"],[[65189,65192],1,\"\u062E\"],[[65193,65194],1,\"\u062F\"],[[65195,65196],1,\"\u0630\"],[[65197,65198],1,\"\u0631\"],[[65199,65200],1,\"\u0632\"],[[65201,65204],1,\"\u0633\"],[[65205,65208],1,\"\u0634\"],[[65209,65212],1,\"\u0635\"],[[65213,65216],1,\"\u0636\"],[[65217,65220],1,\"\u0637\"],[[65221,65224],1,\"\u0638\"],[[65225,65228],1,\"\u0639\"],[[65229,65232],1,\"\u063A\"],[[65233,65236],1,\"\u0641\"],[[65237,65240],1,\"\u0642\"],[[65241,65244],1,\"\u0643\"],[[65245,65248],1,\"\u0644\"],[[65249,65252],1,\"\u0645\"],[[65253,65256],1,\"\u0646\"],[[65257,65260],1,\"\u0647\"],[[65261,65262],1,\"\u0648\"],[[65263,65264],1,\"\u0649\"],[[65265,65268],1,\"\u064A\"],[[65269,65270],1,\"\u0644\u0622\"],[[65271,65272],1,\"\u0644\u0623\"],[[65273,65274],1,\"\u0644\u0625\"],[[65275,65276],1,\"\u0644\ua\"],[65314,1,\"b\"],[65315,1,\"c\"],[65316,1,\"d\"],[65317,1,\"e\"],[65318,1,\"f\"],[65319,1,\"g\"],[65320,1,\"h\"],[65321,1,\"i\"],[65322,1,\"j\"],[65323,1,\"k\"],[65324,1,\"l\"],[65325,1,\"m\"],[65326,1,\"n\"],[65327,1,\"o\"],[65328,1,\"p\"],[65329,1,\"q\"],[65330,1,\"r\"],[65331,1,\"s\"],[65332,1,\"t\"],[65333,1,\"u\"],[65334,1,\"v\"],[65335,1,\"w\"],[65336,1,\"x\"],[65337,1,\"y\"],[65338,1,\"z\"],[65339,5,\"[\"],[65340,5,\"\\\\\"],[65341,5,\"]\"],[65342,5,\"^\"],[65343,5,\"_\"],[65344,5,\"`\"],[65345,1,\"a\"],[65346,1,\"b\"],[65347,1,\"c\"],[65348,1,\"d\"],[65349,1,\"e\"],[65350,1,\"f\"],[65351,1,\"g\"],[65352,1,\"h\"],[65353,1,\"i\"],[65354,1,\"j\"],[65355,1,\"k\"],[65356,1,\"l\"],[65357,1,\"m\"],[65358,1,\"n\"],[65359,1,\"o\"],[65360,1,\"p\"],[65361,1,\"q\"],[65362,1,\"r\"],[65363,1,\"s\"],[65364,1,\"t\"],[65365,1,\"u\"],[65366,1,\"v\"],[65367,1,\"w\"],[65368,1,\"x\"],[65369,1,\"y\"],[65370,1,\"z\"],[65371,5,\"{\"],[65372,5,\"|\"],[65373,5,\"}\"],[65374,5,\"~\"],[65375,1,\"\u2985\"],[65376,1,\"\u2986\"],[65377,1,\".\"],[65378,1,\"\u300C\"],[65379,1,\"\u300D\"],[65380,1,\"\u3001\"],[65381,1,\"\u30FB\"],[65382,1,\"\u30F2\"],[65383,1,\"\u30A1\"],[65384,1,\"\u30A3\"],[65385,1,\"\u30A5\"],[65386,1,\"\u30A7\"],[65387,1,\"\u30A9\"],[65388,1,\"\u30E3\"],[65389,1,\"\u30E5\"],[65390,1,\"\u30E7\"],[65391,1,\"\u30C3\"],[65392,1,\"\u30FC\"],[65393,1,\"\u30A2\"],[65394,1,\"\u30A4\"],[65395,1,\"\u30A6\"],[65396,1,\"\u30A8\"],[65397,1,\"\u30AA\"],[65398,1,\"\u30AB\"],[65399,1,\"\u30AD\"],[65400,1,\"\u30AF\"],[65401,1,\"\u30B1\"],[65402,1,\"\u30B3\"],[65403,1,\"\u30B5\"],[65404,1,\"\u30B7\"],[65405,1,\"\u30B9\"],[65406,1,\"\u30BB\"],[65407,1,\"\u30BD\"],[65408,1,\"\u30BF\"],[65409,1,\"\u30C1\"],[65410,1,\"\u30C4\"],[65411,1,\"\u30C6\"],[65412,1,\"\u30C8\"],[65413,1,\"\u30CA\"],[65414,1,\"\u30CB\"],[65415,1,\"\u30CC\"],[65416,1,\"\u30CD\"],[65417,1,\"\u30CE\"],[65418,1,\"\u30CF\"],[65419,1,\"\u30D2\"],[65420,1,\"\u30D5\"],[65421,1,\"\u30D8\"],[65422,1,\"\u30DB\"],[65423,1,\"\u30DE\"],[65424,1,\"\u30DF\"],[65425,1,\"\u30E0\"],[65426,1,\"\u30E1\"],[65427,1,\"\u30E2\"],[65428,1,\"\u30E4\"],[65429,1,\"\u30E6\"],[65430,1,\"\u30E8\"],[65431,1,\"\u30E9\"],[65432,1,\"\u30EA\"],[65433,1,\"\u30EB\"],[65434,1,\"\u30EC\"],[65435,1,\"\u30ED\"],[65436,1,\"\u30EF\"],[65437,1,\"\u30F3\"],[65438,1,\"\u3099\"],[65439,1,\"\u309A\"],[65440,3],[65441,1,\"\u1100\"],[65442,1,\"\u1101\"],[65443,1,\"\u11AA\"],[65444,1,\"\u1102\"],[65445,1,\"\u11AC\"],[65446,1,\"\u11AD\"],[65447,1,\"\u1103\"],[65448,1,\"\u1104\"],[65449,1,\"\u1105\"],[65450,1,\"\u11B0\"],[65451,1,\"\u11B1\"],[65452,1,\"\u11B2\"],[65453,1,\"\u11B3\"],[65454,1,\"\u11B4\"],[65455,1,\"\u11B5\"],[65456,1,\"\u111A\"],[65457,1,\"\u1106\"],[65458,1,\"\u1107\"],[65459,1,\"\u1108\"],[65460,1,\"\u1121\"],[65461,1,\"\u1109\"],[65462,1,\"\u110A\"],[65463,1,\"\u110B\"],[65464,1,\"\u110C\"],[65465,1,\"\u110D\"],[65466,1,\"\u110E\"],[65467,1,\"\u110F\"],[65468,1,\"\u1110\"],[65469,1,\"\u1111\"],[65470,1,\"\u1112\"],[[65471,65473],3],[65474,1,\"\u1161\"],[65475,1,\"\u1162\"],[65476,1,\"\u1163\"],[65477,1,\"\u1164\"],[65478,1,\"\u1165\"],[65479,1,\"\u1166\"],[[65480,65481],3],[65482,1,\"\u1167\"],[65483,1,\"\u1168\"],[65484,1,\"\u1169\"],[65485,1,\"\u116A\"],[65486,1,\"\u116B\"],[65487,1,\"\u116C\"],[[65488,65489],3],[65490,1,\"\u116D\"],[65491,1,\"\u116E\"],[65492,1,\"\u116F\"],[65493,1,\"\u1170\"],[65494,1,\"\u1171\"],[65495,1,\"\u1172\"],[[65496,65497],3],[65498,1,\"\u1173\"],[65499,1,\"\u1174\"],[65500,1,\"\u1175\"],[[65501,65503],3],[65504,1,\"\u00A2\"],[65505,1,\"\u00A3\"],[65506,1,\"\u00AC\"],[65507,5,\" \u0304\"],[65508,1,\"\u00A6\"],[65509,1,\"\u00A5\"],[65510,1,\"\u20A9\"],[65511,3],[65512,1,\"\u2502\"],[65513,1,\"\u2190\"],[65514,1,\"\u2191\"],[65515,1,\"\u2192\"],[65516,1,\"\u2193\"],[65517,1,\"\u25A0\"],[65518,1,\"\u25CB\"],[[65519,65528],3],[[65529,65531],3],[65532,3],[65533,3],[[65534,65535],3],[[65536,65547],2],[65548,3],[[65549,65574],2],[65575,3],[[65576,65594],2],[65595,3],[[65596,65597],2],[65598,3],[[65599,65613],2],[[65614,65615],3],[[65616,65629],2],[[65630,65663],3],[[65664,65786],2],[[65787,65791],3],[[65792,65794],2],[[65795,65798],3],[[65799,65843],2],[[65844,65846],3],[[65847,65855],2],[[65856,65930],2],[[65931,65932],2],[[65933,65934],2],[65935,3],[[65936,65947],2],[65948,2],[[65949,65951],3],[65952,2],[[65953,65999],3],[[66000,66044],2],[66045,2],[[66046,66175],3],[[66176,66204],2],[[66205,66207],3],[[66208,66256],2],[[66257,66271],3],[66272,2],[[66273,66299],2],[[66300,66303],3],[[66304,66334],2],[66335,2],[[66336,66339],2],[[66340,66348],3],[[66349,66351],2],[[66352,66368],2],[66369,2],[[66370,66377],2],[66378,2],[[66379,66383],3],[[66384,66426],2],[[66427,66431],3],[[66432,66461],2],[66462,3],[66463,2],[[66464,66499],2],[[66500,66503],3],[[66504,66511],2],[[66512,66517],2],[[66518,66559],3],[66560,1,\"\uD801\uDC28\"],[66561,1,\"\uD801\uDC29\"],[66562,1,\"\uD801\uDC2A\"],[66563,1,\"\uD801\uDC2B\"],[66564,1,\"\uD801\uDC2C\"],[66565,1,\"\uD801\uDC2D\"],[66566,1,\"\uD801\uDC2E\"],[66567,1,\"\uD801\uDC2F\"],[66568,1,\"\uD801\uDC30\"],[66569,1,\"\uD801\uDC31\"],[66570,1,\"\uD801\uDC32\"],[66571,1,\"\uD801\uDC33\"],[66572,1,\"\uD801\uDC34\"],[66573,1,\"\uD801\uDC35\"],[66574,1,\"\uD801\uDC36\"],[66575,1,\"\uD801\uDC37\"],[66576,1,\"\uD801\uDC38\"],[66577,1,\"\uD801\uDC39\"],[66578,1,\"\uD801\uDC3A\"],[66579,1,\"\uD801\uDC3B\"],[66580,1,\"\uD801\uDC3C\"],[66581,1,\"\uD801\uDC3D\"],[66582,1,\"\uD801\uDC3E\"],[66583,1,\"\uD801\uDC3F\"],[66584,1,\"\uD801\uDC40\"],[66585,1,\"\uD801\uDC41\"],[66586,1,\"\uD801\uDC42\"],[66587,1,\"\uD801\uDC43\"],[66588,1,\"\uD801\uDC44\"],[66589,1,\"\uD801\uDC45\"],[66590,1,\"\uD801\uDC46\"],[66591,1,\"\uD801\uDC47\"],[66592,1,\"\uD801\uDC48\"],[66593,1,\"\uD801\uDC49\"],[66594,1,\"\uD801\uDC4A\"],[66595,1,\"\uD801\uDC4B\"],[66596,1,\"\uD801\uDC4C\"],[66597,1,\"\uD801\uDC4D\"],[66598,1,\"\uD801\uDC4E\"],[66599,1,\"\uD801\uDC4F\"],[[66600,66637],2],[[66638,66717],2],[[66718,66719],3],[[66720,66729],2],[[66730,66735],3],[66736,1,\"\uD801\uDCD8\"],[66737,1,\"\uD801\uDCD9\"],[66738,1,\"\uD801\uDCDA\"],[66739,1,\"\uD801\uDCDB\"],[66740,1,\"\uD801\uDCDC\"],[66741,1,\"\uD801\uDCDD\"],[66742,1,\"\uD801\uDCDE\"],[66743,1,\"\uD801\uDCDF\"],[66744,1,\"\uD801\uDCE0\"],[66745,1,\"\uD801\uDCE1\"],[66746,1,\"\uD801\uDCE2\"],[66747,1,\"\uD801\uDCE3\"],[66748,1,\"\uD801\uDCE4\"],[66749,1,\"\uD801\uDCE5\"],[66750,1,\"\uD801\uDCE6\"],[66751,1,\"\uD801\uDCE7\"],[66752,1,\"\uD801\uDCE8\"],[66753,1,\"\uD801\uDCE9\"],[66754,1,\"\uD801\uDCEA\"],[66755,1,\"\uD801\uDCEB\"],[66756,1,\"\uD801\uDCEC\"],[66757,1,\"\uD801\uDCED\"],[66758,1,\"\uD801\uDCEE\"],[66759,1,\"\uD801\uDCEF\"],[66760,1,\"\uD801\uDCF0\"],[66761,1,\"\uD801\uDCF1\"],[66762,1,\"\uD801\uDCF2\"],[66763,1,\"\uD801\uDCF3\"],[66764,1,\"\uD801\uDCF4\"],[66765,1,\"\uD801\uDCF5\"],[66766,1,\"\uD801\uDCF6\"],[66767,1,\"\uD801\uDCF7\"],[66768,1,\"\uD801\uDCF8\"],[66769,1,\"\uD801\uDCF9\"],[66770,1,\"\uD801\uDCFA\"],[66771,1,\"\uD801\uDCFB\"],[[66772,66775],3],[[66776,66811],2],[[66812,66815],3],[[66816,66855],2],[[66856,66863],3],[[66864,66915],2],[[66916,66926],3],[66927,2],[66928,1,\"\uD801\uDD97\"],[66929,1,\"\uD801\uDD98\"],[66930,1,\"\uD801\uDD99\"],[66931,1,\"\uD801\uDD9A\"],[66932,1,\"\uD801\uDD9B\"],[66933,1,\"\uD801\uDD9C\"],[66934,1,\"\uD801\uDD9D\"],[66935,1,\"\uD801\uDD9E\"],[66936,1,\"\uD801\uDD9F\"],[66937,1,\"\uD801\uDDA0\"],[66938,1,\"\uD801\uDDA1\"],[66939,3],[66940,1,\"\uD801\uDDA3\"],[66941,1,\"\uD801\uDDA4\"],[66942,1,\"\uD801\uDDA5\"],[66943,1,\"\uD801\uDDA6\"],[66944,1,\"\uD801\uDDA7\"],[66945,1,\"\uD801\uDDA8\"],[66946,1,\"\uD801\uDDA9\"],[66947,1,\"\uD801\uDDAA\"],[66948,1,\"\uD801\uDDAB\"],[66949,1,\"\uD801\uDDAC\"],[66950,1,\"\uD801\uDDAD\"],[66951,1,\"\uD801\uDDAE\"],[66952,1,\"\uD801\uDDAF\"],[66953,1,\"\uD801\uDDB0\"],[66954,1,\"\uD801\uDDB1\"],[66955,3],[66956,1,\"\uD801\uDDB3\"],[66957,1,\"\uD801\uDDB4\"],[66958,1,\"\uD801\uDDB5\"],[66959,1,\"\uD801\uDDB6\"],[66960,1,\"\uD801\uDDB7\"],[66961,1,\"\uD801\uDDB8\"],[66962,1,\"\uD801\uDDB9\"],[66963,3],[66964,1,\"\uD801\uDDBB\"],[66965,1,\"\uD801\uDDBC\"],[66966,3],[[66967,66977],2],[66978,3],[[66979,66993],2],[66994,3],[[66995,67001],2],[67002,3],[[67003,67004],2],[[67005,67071],3],[[67072,67382],2],[[67383,67391],3],[[67392,67413],2],[[67414,67423],3],[[67424,67431],2],[[67432,67455],3],[67456,2],[67457,1,\"\u02D0\"],[67458,1,\"\u02D1\"],[67459,1,\"\u00E6\"],[67460,1,\"\u0299\"],[67461,1,\"\u0253\"],[67462,3],[67463,1,\"\u02A3\"],[67464,1,\"\uAB66\"],[67465,1,\"\u02A5\"],[67466,1,\"\u02A4\"],[67467,1,\"\u0256\"],[67468,1,\"\u0257\"],[67469,1,\"\u1D91\"],[67470,1,\"\u0258\"],[67471,1,\"\u025E\"],[67472,1,\"\u02A9\"],[67473,1,\"\u0264\"],[67474,1,\"\u0262\"],[67475,1,\"\u0260\"],[67476,1,\"\u029B\"],[67477,1,\"\u0127\"],[67478,1,\"\u029C\"],[67479,1,\"\u0267\"],[67480,1,\"\u0284\"],[67481,1,\"\u02AA\"],[67482,1,\"\u02AB\"],[67483,1,\"\u026C\"],[67484,1,\"\uD837\uDF04\"],[67485,1,\"\uA78E\"],[67486,1,\"\u026E\"],[67487,1,\"\uD837\uDF05\"],[67488,1,\"\u028E\"],[67489,1,\"\uD837\uDF06\"],[67490,1,\"\u00F8\"],[67491,1,\"\u0276\"],[67492,1,\"\u0277\"],[67493,1,\"q\"],[67494,1,\"\u027A\"],[67495,1,\"\uD837\uDF08\"],[67496,1,\"\u027D\"],[67497,1,\"\u027E\"],[67498,1,\"\u0280\"],[67499,1,\"\u02A8\"],[67500,1,\"\u02A6\"],[67501,1,\"\uAB67\"],[67502,1,\"\u02A7\"],[67503,1,\"\u0288\"],[67504,1,\"\u2C71\"],[67505,3],[67506,1,\"\u028F\"],[67507,1,\"\u02A1\"],[67508,1,\"\u02A2\"],[67509,1,\"\u0298\"],[67510,1,\"\u01C0\"],[67511,1,\"\u01C1\"],[67512,1,\"\u01C2\"],[67513,1,\"\uD837\uDF0A\"],[67514,1,\"\uD837\uDF1E\"],[[67515,67583],3],[[67584,67589],2],[[67590,67591],3],[67592,2],[67593,3],[[67594,67637],2],[67638,3],[[67639,67640],2],[[67641,67643],3],[67644,2],[[67645,67646],3],[67647,2],[[67648,67669],2],[67670,3],[[67671,67679],2],[[67680,67702],2],[[67703,67711],2],[[67712,67742],2],[[67743,67750],3],[[67751,67759],2],[[67760,67807],3],[[67808,67826],2],[67827,3],[[67828,67829],2],[[67830,67834],3],[[67835,67839],2],[[67840,67861],2],[[67862,67865],2],[[67866,67867],2],[[67868,67870],3],[67871,2],[[67872,67897],2],[[67898,67902],3],[67903,2],[[67904,67967],3],[[67968,68023],2],[[68024,68027],3],[[68028,68029],2],[[68030,68031],2],[[68032,68047],2],[[68048,68049],3],[[68050,68095],2],[[68096,68099],2],[68100,3],[[68101,68102],2],[[68103,68107],3],[[68108,68115],2],[68116,3],[[68117,68119],2],[68120,3],[[68121,68147],2],[[68148,68149],2],[[68150,68151],3],[[68152,68154],2],[[68155,68158],3],[68159,2],[[68160,68167],2],[68168,2],[[68169,68175],3],[[68176,68184],2],[[68185,68191],3],[[68192,68220],2],[[68221,68223],2],[[68224,68252],2],[[68253,68255],2],[[68256,68287],3],[[68288,68295],2],[68296,2],[[68297,68326],2],[[68327,68330],3],[[68331,68342],2],[[68343,68351],3],[[68352,68405],2],[[68406,68408],3],[[68409,68415],2],[[68416,68437],2],[[68438,68439],3],[[68440,68447],2],[[68448,68466],2],[[68467,68471],3],[[68472,68479],2],[[68480,68497],2],[[68498,68504],3],[[68505,68508],2],[[68509,68520],3],[[68521,68527],2],[[68528,68607],3],[[68608,68680],2],[[68681,68735],3],[68736,1,\"\uD803\uDCC0\"],[68737,1,\"\uD803\uDCC1\"],[68738,1,\"\uD803\uDCC2\"],[68739,1,\"\uD803\uDCC3\"],[68740,1,\"\uD803\uDCC4\"],[68741,1,\"\uD803\uDCC5\"],[68742,1,\"\uD803\uDCC6\"],[68743,1,\"\uD803\uDCC7\"],[68744,1,\"\uD803\uDCC8\"],[68745,1,\"\uD803\uDCC9\"],[68746,1,\"\uD803\uDCCA\"],[68747,1,\"\uD803\uDCCB\"],[68748,1,\"\uD803\uDCCC\"],[68749,1,\"\uD803\uDCCD\"],[68750,1,\"\uD803\uDCCE\"],[68751,1,\"\uD803\uDCCF\"],[68752,1,\"\uD803\uDCD0\"],[68753,1,\"\uD803\uDCD1\"],[68754,1,\"\uD803\uDCD2\"],[68755,1,\"\uD803\uDCD3\"],[68756,1,\"\uD803\uDCD4\"],[68757,1,\"\uD803\uDCD5\"],[68758,1,\"\uD803\uDCD6\"],[68759,1,\"\uD803\uDCD7\"],[68760,1,\"\uD803\uDCD8\"],[68761,1,\"\uD803\uDCD9\"],[68762,1,\"\uD803\uDCDA\"],[68763,1,\"\uD803\uDCDB\"],[68764,1,\"\uD803\uDCDC\"],[68765,1,\"\uD803\uDCDD\"],[68766,1,\"\uD803\uDCDE\"],[68767,1,\"\uD803\uDCDF\"],[68768,1,\"\uD803\uDCE0\"],[68769,1,\"\uD803\uDCE1\"],[68770,1,\"\uD803\uDCE2\"],[68771,1,\"\uD803\uDCE3\"],[68772,1,\"\uD803\uDCE4\"],[68773,1,\"\uD803\uDCE5\"],[68774,1,\"\uD803\uDCE6\"],[68775,1,\"\uD803\uDCE7\"],[68776,1,\"\uD803\uDCE8\"],[68777,1,\"\uD803\uDCE9\"],[68778,1,\"\uD803\uDCEA\"],[68779,1,\"\uD803\uDCEB\"],[68780,1,\"\uD803\uDCEC\"],[68781,1,\"\uD803\uDCED\"],[68782,1,\"\uD803\uDCEE\"],[68783,1,\"\uD803\uDCEF\"],[68784,1,\"\uD803\uDCF0\"],[68785,1,\"\uD803\uDCF1\"],[68786,1,\"\uD803\uDCF2\"],[[68787,68799],3],[[68800,68850],2],[[68851,68857],3],[[68858,68863],2],[[68864,68903],2],[[68904,68911],3],[[68912,68921],2],[[68922,69215],3],[[69216,69246],2],[69247,3],[[69248,69289],2],[69290,3],[[69291,69292],2],[69293,2],[[69294,69295],3],[[69296,69297],2],[[69298,69375],3],[[69376,69404],2],[[69405,69414],2],[69415,2],[[69416,69423],3],[[69424,69456],2],[[69457,69465],2],[[69466,69487],3],[[69488,69509],2],[[69510,69513],2],[[69514,69551],3],[[69552,69572],2],[[69573,69579],2],[[69580,69599],3],[[69600,69622],2],[[69623,69631],3],[[69632,69702],2],[[69703,69709],2],[[69710,69713],3],[[69714,69733],2],[[69734,69743],2],[[69744,69749],2],[[69750,69758],3],[69759,2],[[69760,69818],2],[[69819,69820],2],[69821,3],[[69822,69825],2],[69826,2],[[69827,69836],3],[69837,3],[[69838,69839],3],[[69840,69864],2],[[69865,69871],3],[[69872,69881],2],[[69882,69887],3],[[69888,69940],2],[69941,3],[[69942,69951],2],[[69952,69955],2],[[69956,69958],2],[69959,2],[[69960,69967],3],[[69968,70003],2],[[70004,70005],2],[70006,2],[[70007,70015],3],[[70016,70084],2],[[70085,70088],2],[[70089,70092],2],[70093,2],[[70094,70095],2],[[70096,70105],2],[70106,2],[70107,2],[70108,2],[[70109,70111],2],[70112,3],[[70113,70132],2],[[70133,70143],3],[[70144,70161],2],[70162,3],[[70163,70199],2],[[70200,70205],2],[70206,2],[[70207,70271],3],[[70272,70278],2],[70279,3],[70280,2],[70281,3],[[70282,70285],2],[70286,3],[[70287,70301],2],[70302,3],[[70303,70312],2],[70313,2],[[70314,70319],3],[[70320,70378],2],[[70379,70383],3],[[70384,70393],2],[[70394,70399],3],[70400,2],[[70401,70403],2],[70404,3],[[70405,70412],2],[[70413,70414],3],[[70415,70416],2],[[70417,70418],3],[[70419,70440],2],[70441,3],[[70442,70448],2],[70449,3],[[70450,70451],2],[70452,3],[[70453,70457],2],[70458,3],[70459,2],[[70460,70468],2],[[70469,70470],3],[[70471,70472],2],[[70473,70474],3],[[70475,70477],2],[[70478,70479],3],[70480,2],[[70481,70486],3],[70487,2],[[70488,70492],3],[[70493,70499],2],[[70500,70501],3],[[70502,70508],2],[[70509,70511],3],[[70512,70516],2],[[70517,70655],3],[[70656,70730],2],[[70731,70735],2],[[70736,70745],2],[70746,2],[70747,2],[70748,3],[70749,2],[70750,2],[70751,2],[[70752,70753],2],[[70754,70783],3],[[70784,70853],2],[70854,2],[70855,2],[[70856,70863],3],[[70864,70873],2],[[70874,71039],3],[[71040,71093],2],[[71094,71095],3],[[71096,71104],2],[[71105,71113],2],[[71114,71127],2],[[71128,71133],2],[[71134,71167],3],[[71168,71232],2],[[71233,71235],2],[71236,2],[[71237,71247],3],[[71248,71257],2],[[71258,71263],3],[[71264,71276],2],[[71277,71295],3],[[71296,71351],2],[71352,2],[71353,2],[[71354,71359],3],[[71360,71369],2],[[71370,71423],3],[[71424,71449],2],[71450,2],[[71451,71452],3],[[71453,71467],2],[[71468,71471],3],[[71472,71481],2],[[71482,71487],2],[[71488,71494],2],[[71495,71679],3],[[71680,71738],2],[71739,2],[[71740,71839],3],[71840,1,\"\uD806\uDCC0\"],[71841,1,\"\uD806\uDCC1\"],[71842,1,\"\uD806\uDCC2\"],[71843,1,\"\uD806\uDCC3\"],[71844,1,\"\uD806\uDCC4\"],[71845,1,\"\uD806\uDCC5\"],[71846,1,\"\uD806\uDCC6\"],[71847,1,\"\uD806\uDCC7\"],[71848,1,\"\uD806\uDCC8\"],[71849,1,\"\uD806\uDCC9\"],[71850,1,\"\uD806\uDCCA\"],[71851,1,\"\uD806\uDCCB\"],[71852,1,\"\uD806\uDCCC\"],[71853,1,\"\uD806\uDCCD\"],[71854,1,\"\uD806\uDCCE\"],[71855,1,\"\uD806\uDCCF\"],[71856,1,\"\uD806\uDCD0\"],[71857,1,\"\uD806\uDCD1\"],[71858,1,\"\uD806\uDCD2\"],[71859,1,\"\uD806\uDCD3\"],[71860,1,\"\uD806\uDCD4\"],[71861,1,\"\uD806\uDCD5\"],[71862,1,\"\uD806\uDCD6\"],[71863,1,\"\uD806\uDCD7\"],[71864,1,\"\uD806\uDCD8\"],[71865,1,\"\uD806\uDCD9\"],[71866,1,\"\uD806\uDCDA\"],[71867,1,\"\uD806\uDCDB\"],[71868,1,\"\uD806\uDCDC\"],[71869,1,\"\uD806\uDCDD\"],[71870,1,\"\uD806\uDCDE\"],[71871,1,\"\uD806\uDCDF\"],[[71872,71913],2],[[71914,71922],2],[[71923,71934],3],[71935,2],[[71936,71942],2],[[71943,71944],3],[71945,2],[[71946,71947],3],[[71948,71955],2],[71956,3],[[71957,71958],2],[71959,3],[[71960,71989],2],[71990,3],[[71991,71992],2],[[71993,71994],3],[[71995,72003],2],[[72004,72006],2],[[72007,72015],3],[[72016,72025],2],[[72026,72095],3],[[72096,72103],2],[[72104,72105],3],[[72106,72151],2],[[72152,72153],3],[[72154,72161],2],[72162,2],[[72163,72164],2],[[72165,72191],3],[[72192,72254],2],[[72255,72262],2],[72263,2],[[72264,72271],3],[[72272,72323],2],[[72324,72325],2],[[72326,72345],2],[[72346,72348],2],[72349,2],[[72350,72354],2],[[72355,72367],3],[[72368,72383],2],[[72384,72440],2],[[72441,72703],3],[[72704,72712],2],[72713,3],[[72714,72758],2],[72759,3],[[72760,72768],2],[[72769,72773],2],[[72774,72783],3],[[72784,72793],2],[[72794,72812],2],[[72813,72815],3],[[72816,72817],2],[[72818,72847],2],[[72848,72849],3],[[72850,72871],2],[72872,3],[[72873,72886],2],[[72887,72959],3],[[72960,72966],2],[72967,3],[[72968,72969],2],[72970,3],[[72971,73014],2],[[73015,73017],3],[73018,2],[73019,3],[[73020,73021],2],[73022,3],[[73023,73031],2],[[73032,73039],3],[[73040,73049],2],[[73050,73055],3],[[73056,73061],2],[73062,3],[[73063,73064],2],[73065,3],[[73066,73102],2],[73103,3],[[73104,73105],2],[73106,3],[[73107,73112],2],[[73113,73119],3],[[73120,73129],2],[[73130,73439],3],[[73440,73462],2],[[73463,73464],2],[[73465,73647],3],[73648,2],[[73649,73663],3],[[73664,73713],2],[[73714,73726],3],[73727,2],[[73728,74606],2],[[74607,74648],2],[74649,2],[[74650,74751],3],[[74752,74850],2],[[74851,74862],2],[74863,3],[[74864,74867],2],[74868,2],[[74869,74879],3],[[74880,75075],2],[[75076,77711],3],[[77712,77808],2],[[77809,77810],2],[[77811,77823],3],[[77824,78894],2],[78895,3],[[78896,78904],3],[[78905,82943],3],[[82944,83526],2],[[83527,92159],3],[[92160,92728],2],[[92729,92735],3],[[92736,92766],2],[92767,3],[[92768,92777],2],[[92778,92781],3],[[92782,92783],2],[[92784,92862],2],[92863,3],[[92864,92873],2],[[92874,92879],3],[[92880,92909],2],[[92910,92911],3],[[92912,92916],2],[92917,2],[[92918,92927],3],[[92928,92982],2],[[92983,92991],2],[[92992,92995],2],[[92996,92997],2],[[92998,93007],3],[[93008,93017],2],[93018,3],[[93019,93025],2],[93026,3],[[93027,93047],2],[[93048,93052],3],[[93053,93071],2],[[93072,93759],3],[93760,1,\"\uD81B\uDE60\"],[93761,1,\"\uD81B\uDE61\"],[93762,1,\"\uD81B\uDE62\"],[93763,1,\"\uD81B\uDE63\"],[93764,1,\"\uD81B\uDE64\"],[93765,1,\"\uD81B\uDE65\"],[93766,1,\"\uD81B\uDE66\"],[93767,1,\"\uD81B\uDE67\"],[93768,1,\"\uD81B\uDE68\"],[93769,1,\"\uD81B\uDE69\"],[93770,1,\"\uD81B\uDE6A\"],[93771,1,\"\uD81B\uDE6B\"],[93772,1,\"\uD81B\uDE6C\"],[93773,1,\"\uD81B\uDE6D\"],[93774,1,\"\uD81B\uDE6E\"],[93775,1,\"\uD81B\uDE6F\"],[93776,1,\"\uD81B\uDE70\"],[93777,1,\"\uD81B\uDE71\"],[93778,1,\"\uD81B\uDE72\"],[93779,1,\"\uD81B\uDE73\"],[93780,1,\"\uD81B\uDE74\"],[93781,1,\"\uD81B\uDE75\"],[93782,1,\"\uD81B\uDE76\"],[93783,1,\"\uD81B\uDE77\"],[93784,1,\"\uD81B\uDE78\"],[93785,1,\"\uD81B\uDE79\"],[93786,1,\"\uD81B\uDE7A\"],[93787,1,\"\uD81B\uDE7B\"],[93788,1,\"\uD81B\uDE7C\"],[93789,1,\"\uD81B\uDE7D\"],[93790,1,\"\uD81B\uDE7E\"],[93791,1,\"\uD81B\uDE7F\"],[[93792,93823],2],[[93824,93850],2],[[93851,93951],3],[[93952,94020],2],[[94021,94026],2],[[94027,94030],3],[94031,2],[[94032,94078],2],[[94079,94087],2],[[94088,94094],3],[[94095,94111],2],[[94112,94175],3],[94176,2],[94177,2],[94178,2],[94179,2],[94180,2],[[94181,94191],3],[[94192,94193],2],[[94194,94207],3],[[94208,100332],2],[[100333,100337],2],[[100338,100343],2],[[100344,100351],3],[[100352,101106],2],[[101107,101589],2],[[101590,101631],3],[[101632,101640],2],[[101641,110575],3],[[110576,110579],2],[110580,3],[[110581,110587],2],[110588,3],[[110589,110590],2],[110591,3],[[110592,110593],2],[[110594,110878],2],[[110879,110882],2],[[110883,110927],3],[[110928,110930],2],[[110931,110947],3],[[110948,110951],2],[[110952,110959],3],[[110960,111355],2],[[111356,113663],3],[[113664,113770],2],[[113771,113775],3],[[113776,113788],2],[[113789,113791],3],[[113792,113800],2],[[113801,113807],3],[[113808,113817],2],[[113818,113819],3],[113820,2],[[113821,113822],2],[113823,2],[[113824,113827],7],[[113828,118527],3],[[118528,118573],2],[[118574,118575],3],[[118576,118598],2],[[118599,118607],3],[[118608,118723],2],[[118724,118783],3],[[118784,119029],2],[[119030,119039],3],[[119040,119078],2],[[119079,119080],3],[119081,2],[[119082,119133],2],[119134,1,\"\uD834\uDD57\uD834\uDD65\"],[119135,1,\"\uD834\uDD58\uD834\uDD65\"],[119136,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD6E\"],[119137,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD6F\"],[119138,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD70\"],[119139,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD71\"],[119140,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD72\"],[[119141,119154],2],[[119155,119162],3],[[119163,119226],2],[119227,1,\"\uD834\uDDB9\uD834\uDD65\"],[119228,1,\"\uD834\uDDBA\uD834\uDD65\"],[119229,1,\"\uD834\uDDB9\uD834\uDD65\uD834\uDD6E\"],[119230,1,\"\uD834\uDDBA\uD834\uDD65\uD834\uDD6E\"],[119231,1,\"\uD834\uDDB9\uD834\uDD65\uD834\uDD6F\"],[119232,1,\"\uD834\uDDBA\uD834\uDD65\uD834\uDD6F\"],[[119233,119261],2],[[119262,119272],2],[[119273,119274],2],[[119275,119295],3],[[119296,119365],2],[[119366,119519],3],[[119520,119539],2],[[119540,119551],3],[[119552,119638],2],[[119639,119647],3],[[119648,119665],2],[[119666,119672],2],[[119673,119807],3],[119808,1,\"a\"],[119809,1,\"b\"],[119810,1,\"c\"],[119811,1,\"d\"],[119812,1,\"e\"],[119813,1,\"f\"],[119814,1,\"g\"],[119815,1,\"h\"],[119816,1,\"i\"],[119817,1,\"j\"],[119818,1,\"k\"],[119819,1,\"l\"],[119820,1,\"m\"],[119821,1,\"n\"],[119822,1,\"o\"],[119823,1,\"p\"],[119824,1,\"q\"],[119825,1,\"r\"],[119826,1,\"s\"],[119827,1,\"t\"],[119828,1,\"u\"],[119829,1,\"v\"],[119830,1,\"w\"],[119831,1,\"x\"],[119832,1,\"y\"],[119833,1,\"z\"],[119834,1,\"a\"],[119835,1,\"b\"],[119836,1,\"c\"],[119837,1,\"d\"],[119838,1,\"e\"],[119839,1,\"f\"],[119840,1,\"g\"],[119841,1,\"h\"],[119842,1,\"i\"],[119843,1,\"j\"],[119844,1,\"k\"],[119845,1,\"l\"],[119846,1,\"m\"],[119847,1,\"n\"],[119848,1,\"o\"],[119849,1,\"p\"],[119850,1,\"q\"],[119851,1,\"r\"],[119852,1,\"s\"],[119853,1,\"t\"],[119854,1,\"u\"],[119855,1,\"v\"],[119856,1,\"w\"],[119857,1,\"x\"],[119858,1,\"y\"],[119859,1,\"z\"],[119860,1,\"a\"],[119861,1,\"b\"],[119862,1,\"c\"],[119863,1,\"d\"],[119864,1,\"e\"],[119865,1,\"f\"],[119866,1,\"g\"],[119867,1,\"h\"],[119868,1,\"i\"],[119869,1,\"j\"],[119870,1,\"k\"],[119871,1,\"l\"],[119872,1,\"m\"],[119873,1,\"n\"],[119874,1,\"o\"],[119875,1,\"p\"],[119876,1,\"q\"],[119877,1,\"r\"],[119878,1,\"s\"],[119879,1,\"t\"],[119880,1,\"u\"],[119881,1,\"v\"],[119882,1,\"w\"],[119883,1,\"x\"],[119884,1,\"y\"],[119885,1,\"z\"],[119886,1,\"a\"],[119887,1,\"b\"],[119888,1,\"c\"],[119889,1,\"d\"],[119890,1,\"e\"],[119891,1,\"f\"],[119892,1,\"g\"],[119893,3],[119894,1,\"i\"],[119895,1,\"j\"],[119896,1,\"k\"],[119897,1,\"l\"],[119898,1,\"m\"],[119899,1,\"n\"],[119900,1,\"o\"],[119901,1,\"p\"],[119902,1,\"q\"],[119903,1,\"r\"],[119904,1,\"s\"],[119905,1,\"t\"],[119906,1,\"u\"],[119907,1,\"v\"],[119908,1,\"w\"],[119909,1,\"x\"],[119910,1,\"y\"],[119911,1,\"z\"],[119912,1,\"a\"],[119913,1,\"b\"],[119914,1,\"c\"],[119915,1,\"d\"],[119916,1,\"e\"],[119917,1,\"f\"],[119918,1,\"g\"],[119919,1,\"h\"],[119920,1,\"i\"],[119921,1,\"j\"],[119922,1,\"k\"],[119923,1,\"l\"],[119924,1,\"m\"],[119925,1,\"n\"],[119926,1,\"o\"],[119927,1,\"p\"],[119928,1,\"q\"],[119929,1,\"r\"],[119930,1,\"s\"],[119931,1,\"t\"],[119932,1,\"u\"],[119933,1,\"v\"],[119934,1,\"w\"],[119935,1,\"x\"],[119936,1,\"y\"],[119937,1,\"z\"],[119938,1,\"a\"],[119939,1,\"b\"],[119940,1,\"c\"],[119941,1,\"d\"],[119942,1,\"e\"],[119943,1,\"f\"],[119944,1,\"g\"],[119945,1,\"h\"],[119946,1,\"i\"],[119947,1,\"j\"],[119948,1,\"k\"],[119949,1,\"l\"],[119950,1,\"m\"],[119951,1,\"n\"],[119952,1,\"o\"],[119953,1,\"p\"],[119954,1,\"q\"],[119955,1,\"r\"],[119956,1,\"s\"],[119957,1,\"t\"],[119958,1,\"u\"],[119959,1,\"v\"],[119960,1,\"w\"],[119961,1,\"x\"],[119962,1,\"y\"],[119963,1,\"z\"],[119964,1,\"a\"],[119965,3],[119966,1,\"c\"],[119967,1,\"d\"],[[119968,119969],3],[119970,1,\"g\"],[[119971,119972],3],[119973,1,\"j\"],[119974,1,\"k\"],[[119975,119976],3],[119977,1,\"n\"],[119978,1,\"o\"],[119979,1,\"p\"],[119980,1,\"q\"],[119981,3],[119982,1,\"s\"],[119983,1,\"t\"],[119984,1,\"u\"],[119985,1,\"v\"],[119986,1,\"w\"],[119987,1,\"x\"],[119988,1,\"y\"],[119989,1,\"z\"],[119990,1,\"a\"],[119991,1,\"b\"],[119992,1,\"c\"],[119993,1,\"d\"],[119994,3],[119995,1,\"f\"],[119996,3],[119997,1,\"h\"],[119998,1,\"i\"],[119999,1,\"j\"],[120000,1,\"k\"],[120001,1,\"l\"],[120002,1,\"m\"],[120003,1,\"n\"],[120004,3],[120005,1,\"p\"],[120006,1,\"q\"],[120007,1,\"r\"],[120008,1,\"s\"],[120009,1,\"t\"],[120010,1,\"u\"],[120011,1,\"v\"],[120012,1,\"w\"],[120013,1,\"x\"],[120014,1,\"y\"],[120015,1,\"z\"],[120016,1,\"a\"],[120017,1,\"b\"],[120018,1,\"c\"],[120019,1,\"d\"],[120020,1,\"e\"],[120021,1,\"f\"],[120022,1,\"g\"],[120023,1,\"h\"],[120024,1,\"i\"],[120025,1,\"j\"],[120026,1,\"k\"],[120027,1,\"l\"],[120028,1,\"m\"],[120029,1,\"n\"],[120030,1,\"o\"],[120031,1,\"p\"],[120032,1,\"q\"],[120033,1,\"r\"],[120034,1,\"s\"],[120035,1,\"t\"],[120036,1,\"u\"],[120037,1,\"v\"],[120038,1,\"w\"],[120039,1,\"x\"],[120040,1,\"y\"],[120041,1,\"z\"],[120042,1,\"a\"],[120043,1,\"b\"],[120044,1,\"c\"],[120045,1,\"d\"],[120046,1,\"e\"],[120047,1,\"f\"],[120048,1,\"g\"],[120049,1,\"h\"],[120050,1,\"i\"],[120051,1,\"j\"],[120052,1,\"k\"],[120053,1,\"l\"],[120054,1,\"m\"],[120055,1,\"n\"],[120056,1,\"o\"],[120057,1,\"p\"],[120058,1,\"q\"],[120059,1,\"r\"],[120060,1,\"s\"],[120061,1,\"t\"],[120062,1,\"u\"],[120063,1,\"v\"],[120064,1,\"w\"],[120065,1,\"x\"],[120066,1,\"y\"],[120067,1,\"z\"],[120068,1,\"a\"],[120069,1,\"b\"],[120070,3],[120071,1,\"d\"],[120072,1,\"e\"],[120073,1,\"f\"],[120074,1,\"g\"],[[120075,120076],3],[120077,1,\"j\"],[120078,1,\"k\"],[120079,1,\"l\"],[120080,1,\"m\"],[120081,1,\"n\"],[120082,1,\"o\"],[120083,1,\"p\"],[120084,1,\"q\"],[120085,3],[120086,1,\"s\"],[120087,1,\"t\"],[120088,1,\"u\"],[120089,1,\"v\"],[120090,1,\"w\"],[120091,1,\"x\"],[120092,1,\"y\"],[120093,3],[120094,1,\"a\"],[120095,1,\"b\"],[120096,1,\"c\"],[120097,1,\"d\"],[120098,1,\"e\"],[120099,1,\"f\"],[120100,1,\"g\"],[120101,1,\"h\"],[120102,1,\"i\"],[120103,1,\"j\"],[120104,1,\"k\"],[120105,1,\"l\"],[120106,1,\"m\"],[120107,1,\"n\"],[120108,1,\"o\"],[120109,1,\"p\"],[120110,1,\"q\"],[120111,1,\"r\"],[120112,1,\"s\"],[120113,1,\"t\"],[120114,1,\"u\"],[120115,1,\"v\"],[120116,1,\"w\"],[120117,1,\"x\"],[120118,1,\"y\"],[120119,1,\"z\"],[120120,1,\"a\"],[120121,1,\"b\"],[120122,3],[120123,1,\"d\"],[120124,1,\"e\"],[120125,1,\"f\"],[120126,1,\"g\"],[120127,3],[120128,1,\"i\"],[120129,1,\"j\"],[120130,1,\"k\"],[120131,1,\"l\"],[120132,1,\"m\"],[120133,3],[120134,1,\"o\"],[[120135,120137],3],[120138,1,\"s\"],[120139,1,\"t\"],[120140,1,\"u\"],[120141,1,\"v\"],[120142,1,\"w\"],[120143,1,\"x\"],[120144,1,\"y\"],[120145,3],[120146,1,\"a\"],[120147,1,\"b\"],[120148,1,\"c\"],[120149,1,\"d\"],[120150,1,\"e\"],[120151,1,\"f\"],[120152,1,\"g\"],[120153,1,\"h\"],[120154,1,\"i\"],[120155,1,\"j\"],[120156,1,\"k\"],[120157,1,\"l\"],[120158,1,\"m\"],[120159,1,\"n\"],[120160,1,\"o\"],[120161,1,\"p\"],[120162,1,\"q\"],[120163,1,\"r\"],[120164,1,\"s\"],[120165,1,\"t\"],[120166,1,\"u\"],[120167,1,\"v\"],[120168,1,\"w\"],[120169,1,\"x\"],[120170,1,\"y\"],[120171,1,\"z\"],[120172,1,\"a\"],[120173,1,\"b\"],[120174,1,\"c\"],[120175,1,\"d\"],[120176,1,\"e\"],[120177,1,\"f\"],[120178,1,\"g\"],[120179,1,\"h\"],[120180,1,\"i\"],[120181,1,\"j\"],[120182,1,\"k\"],[120183,1,\"l\"],[120184,1,\"m\"],[120185,1,\"n\"],[120186,1,\"o\"],[120187,1,\"p\"],[120188,1,\"q\"],[120189,1,\"r\"],[120190,1,\"s\"],[120191,1,\"t\"],[120192,1,\"u\"],[120193,1,\"v\"],[120194,1,\"w\"],[120195,1,\"x\"],[120196,1,\"y\"],[120197,1,\"z\"],[120198,1,\"a\"],[120199,1,\"b\"],[120200,1,\"c\"],[120201,1,\"d\"],[120202,1,\"e\"],[120203,1,\"f\"],[120204,1,\"g\"],[120205,1,\"h\"],[120206,1,\"i\"],[120207,1,\"j\"],[120208,1,\"k\"],[120209,1,\"l\"],[120210,1,\"m\"],[120211,1,\"n\"],[120212,1,\"o\"],[120213,1,\"p\"],[120214,1,\"q\"],[120215,1,\"r\"],[120216,1,\"s\"],[120217,1,\"t\"],[120218,1,\"u\"],[120219,1,\"v\"],[120220,1,\"w\"],[120221,1,\"x\"],[120222,1,\"y\"],[120223,1,\"z\"],[120224,1,\"a\"],[120225,1,\"b\"],[120226,1,\"c\"],[120227,1,\"d\"],[120228,1,\"e\"],[120229,1,\"f\"],[120230,1,\"g\"],[120231,1,\"h\"],[120232,1,\"i\"],[120233,1,\"j\"],[120234,1,\"k\"],[120235,1,\"l\"],[120236,1,\"m\"],[120237,1,\"n\"],[120238,1,\"o\"],[120239,1,\"p\"],[120240,1,\"q\"],[120241,1,\"r\"],[120242,1,\"s\"],[120243,1,\"t\"],[120244,1,\"u\"],[120245,1,\"v\"],[120246,1,\"w\"],[120247,1,\"x\"],[120248,1,\"y\"],[120249,1,\"z\"],[120250,1,\"a\"],[120251,1,\"b\"],[120252,1,\"c\"],[120253,1,\"d\"],[120254,1,\"e\"],[120255,1,\"f\"],[120256,1,\"g\"],[120257,1,\"h\"],[120258,1,\"i\"],[120259,1,\"j\"],[120260,1,\"k\"],[120261,1,\"l\"],[120262,1,\"m\"],[120263,1,\"n\"],[120264,1,\"o\"],[120265,1,\"p\"],[120266,1,\"q\"],[120267,1,\"r\"],[120268,1,\"s\"],[120269,1,\"t\"],[120270,1,\"u\"],[120271,1,\"v\"],[120272,1,\"w\"],[120273,1,\"x\"],[120274,1,\"y\"],[120275,1,\"z\"],[120276,1,\"a\"],[120277,1,\"b\"],[120278,1,\"c\"],[120279,1,\"d\"],[120280,1,\"e\"],[120281,1,\"f\"],[120282,1,\"g\"],[120283,1,\"h\"],[120284,1,\"i\"],[120285,1,\"j\"],[120286,1,\"k\"],[120287,1,\"l\"],[120288,1,\"m\"],[120289,1,\"n\"],[120290,1,\"o\"],[120291,1,\"p\"],[120292,1,\"q\"],[120293,1,\"r\"],[120294,1,\"s\"],[120295,1,\"t\"],[120296,1,\"u\"],[120297,1,\"v\"],[120298,1,\"w\"],[120299,1,\"x\"],[120300,1,\"y\"],[120301,1,\"z\"],[120302,1,\"a\"],[120303,1,\"b\"],[120304,1,\"c\"],[120305,1,\"d\"],[120306,1,\"e\"],[120307,1,\"f\"],[120308,1,\"g\"],[120309,1,\"h\"],[120310,1,\"i\"],[120311,1,\"j\"],[120312,1,\"k\"],[120313,1,\"l\"],[120314,1,\"m\"],[120315,1,\"n\"],[120316,1,\"o\"],[120317,1,\"p\"],[120318,1,\"q\"],[120319,1,\"r\"],[120320,1,\"s\"],[120321,1,\"t\"],[120322,1,\"u\"],[120323,1,\"v\"],[120324,1,\"w\"],[120325,1,\"x\"],[120326,1,\"y\"],[120327,1,\"z\"],[120328,1,\"a\"],[120329,1,\"b\"],[120330,1,\"c\"],[120331,1,\"d\"],[120332,1,\"e\"],[120333,1,\"f\"],[120334,1,\"g\"],[120335,1,\"h\"],[120336,1,\"i\"],[120337,1,\"j\"],[120338,1,\"k\"],[120339,1,\"l\"],[120340,1,\"m\"],[120341,1,\"n\"],[120342,1,\"o\"],[120343,1,\"p\"],[120344,1,\"q\"],[120345,1,\"r\"],[120346,1,\"s\"],[120347,1,\"t\"],[120348,1,\"u\"],[120349,1,\"v\"],[120350,1,\"w\"],[120351,1,\"x\"],[120352,1,\"y\"],[120353,1,\"z\"],[120354,1,\"a\"],[120355,1,\"b\"],[120356,1,\"c\"],[120357,1,\"d\"],[120358,1,\"e\"],[120359,1,\"f\"],[120360,1,\"g\"],[120361,1,\"h\"],[120362,1,\"i\"],[120363,1,\"j\"],[120364,1,\"k\"],[120365,1,\"l\"],[120366,1,\"m\"],[120367,1,\"n\"],[120368,1,\"o\"],[120369,1,\"p\"],[120370,1,\"q\"],[120371,1,\"r\"],[120372,1,\"s\"],[120373,1,\"t\"],[120374,1,\"u\"],[120375,1,\"v\"],[120376,1,\"w\"],[120377,1,\"x\"],[120378,1,\"y\"],[120379,1,\"z\"],[120380,1,\"a\"],[120381,1,\"b\"],[120382,1,\"c\"],[120383,1,\"d\"],[120384,1,\"e\"],[120385,1,\"f\"],[120386,1,\"g\"],[120387,1,\"h\"],[120388,1,\"i\"],[120389,1,\"j\"],[120390,1,\"k\"],[120391,1,\"l\"],[120392,1,\"m\"],[120393,1,\"n\"],[120394,1,\"o\"],[120395,1,\"p\"],[120396,1,\"q\"],[120397,1,\"r\"],[120398,1,\"s\"],[120399,1,\"t\"],[120400,1,\"u\"],[120401,1,\"v\"],[120402,1,\"w\"],[120403,1,\"x\"],[120404,1,\"y\"],[120405,1,\"z\"],[120406,1,\"a\"],[120407,1,\"b\"],[120408,1,\"c\"],[120409,1,\"d\"],[120410,1,\"e\"],[120411,1,\"f\"],[120412,1,\"g\"],[120413,1,\"h\"],[120414,1,\"i\"],[120415,1,\"j\"],[120416,1,\"k\"],[120417,1,\"l\"],[120418,1,\"m\"],[120419,1,\"n\"],[120420,1,\"o\"],[120421,1,\"p\"],[120422,1,\"q\"],[120423,1,\"r\"],[120424,1,\"s\"],[120425,1,\"t\"],[120426,1,\"u\"],[120427,1,\"v\"],[120428,1,\"w\"],[120429,1,\"x\"],[120430,1,\"y\"],[120431,1,\"z\"],[120432,1,\"a\"],[120433,1,\"b\"],[120434,1,\"c\"],[120435,1,\"d\"],[120436,1,\"e\"],[120437,1,\"f\"],[120438,1,\"g\"],[120439,1,\"h\"],[120440,1,\"i\"],[120441,1,\"j\"],[120442,1,\"k\"],[120443,1,\"l\"],[120444,1,\"m\"],[120445,1,\"n\"],[120446,1,\"o\"],[120447,1,\"p\"],[120448,1,\"q\"],[120449,1,\"r\"],[120450,1,\"s\"],[120451,1,\"t\"],[120452,1,\"u\"],[120453,1,\"v\"],[120454,1,\"w\"],[120455,1,\"x\"],[120456,1,\"y\"],[120457,1,\"z\"],[120458,1,\"a\"],[120459,1,\"b\"],[120460,1,\"c\"],[120461,1,\"d\"],[120462,1,\"e\"],[120463,1,\"f\"],[120464,1,\"g\"],[120465,1,\"h\"],[120466,1,\"i\"],[120467,1,\"j\"],[120468,1,\"k\"],[120469,1,\"l\"],[120470,1,\"m\"],[120471,1,\"n\"],[120472,1,\"o\"],[120473,1,\"p\"],[120474,1,\"q\"],[120475,1,\"r\"],[120476,1,\"s\"],[120477,1,\"t\"],[120478,1,\"u\"],[120479,1,\"v\"],[120480,1,\"w\"],[120481,1,\"x\"],[120482,1,\"y\"],[120483,1,\"z\"],[120484,1,\"\u0131\"],[120485,1,\"\u0237\"],[[120486,120487],3],[120488,1,\"\u03B1\"],[120489,1,\"\u03B2\"],[120490,1,\"\u03B3\"],[120491,1,\"\u03B4\"],[120492,1,\"\u03B5\"],[120493,1,\"\u03B6\"],[120494,1,\"\u03B7\"],[120495,1,\"\u03B8\"],[120496,1,\"\u03B9\"],[120497,1,\"\u03BA\"],[120498,1,\"\u03BB\"],[120499,1,\"\u03BC\"],[120500,1,\"\u03BD\"],[120501,1,\"\u03BE\"],[120502,1,\"\u03BF\"],[120503,1,\"\u03C0\"],[120504,1,\"\u03C1\"],[120505,1,\"\u03B8\"],[120506,1,\"\u03C3\"],[120507,1,\"\u03C4\"],[120508,1,\"\u03C5\"],[120509,1,\"\u03C6\"],[120510,1,\"\u03C7\"],[120511,1,\"\u03C8\"],[120512,1,\"\u03C9\"],[120513,1,\"\u2207\"],[120514,1,\"\u03B1\"],[120515,1,\"\u03B2\"],[120516,1,\"\u03B3\"],[120517,1,\"\u03B4\"],[120518,1,\"\u03B5\"],[120519,1,\"\u03B6\"],[120520,1,\"\u03B7\"],[120521,1,\"\u03B8\"],[120522,1,\"\u03B9\"],[120523,1,\"\u03BA\"],[120524,1,\"\u03BB\"],[120525,1,\"\u03BC\"],[120526,1,\"\u03BD\"],[120527,1,\"\u03BE\"],[120528,1,\"\u03BF\"],[120529,1,\"\u03C0\"],[120530,1,\"\u03C1\"],[[120531,120532],1,\"\u03C3\"],[120533,1,\"\u03C4\"],[120534,1,\"\u03C5\"],[120535,1,\"\u03C6\"],[120536,1,\"\u03C7\"],[120537,1,\"\u03C8\"],[120538,1,\"\u03C9\"],[120539,1,\"\u2202\"],[120540,1,\"\u03B5\"],[120541,1,\"\u03B8\"],[120542,1,\"\u03BA\"],[120543,1,\"\u03C6\"],[120544,1,\"\u03C1\"],[120545,1,\"\u03C0\"],[120546,1,\"\u03B1\"],[120547,1,\"\u03B2\"],[120548,1,\"\u03B3\"],[120549,1,\"\u03B4\"],[120550,1,\"\u03B5\"],[120551,1,\"\u03B6\"],[120552,1,\"\u03B7\"],[120553,1,\"\u03B8\"],[120554,1,\"\u03B9\"],[120555,1,\"\u03BA\"],[120556,1,\"\u03BB\"],[120557,1,\"\u03BC\"],[120558,1,\"\u03BD\"],[120559,1,\"\u03BE\"],[120560,1,\"\u03BF\"],[120561,1,\"\u03C0\"],[120562,1,\"\u03C1\"],[120563,1,\"\u03B8\"],[120564,1,\"\u03C3\"],[120565,1,\"\u03C4\"],[120566,1,\"\u03C5\"],[120567,1,\"\u03C6\"],[120568,1,\"\u03C7\"],[120569,1,\"\u03C8\"],[120570,1,\"\u03C9\"],[120571,1,\"\u2207\"],[120572,1,\"\u03B1\"],[120573,1,\"\u03B2\"],[120574,1,\"\u03B3\"],[120575,1,\"\u03B4\"],[120576,1,\"\u03B5\"],[120577,1,\"\u03B6\"],[120578,1,\"\u03B7\"],[120579,1,\"\u03B8\"],[120580,1,\"\u03B9\"],[120581,1,\"\u03BA\"],[120582,1,\"\u03BB\"],[120583,1,\"\u03BC\"],[120584,1,\"\u03BD\"],[120585,1,\"\u03BE\"],[120586,1,\"\u03BF\"],[120587,1,\"\u03C0\"],[120588,1,\"\u03C1\"],[[120589,120590],1,\"\u03C3\"],[120591,1,\"\u03C4\"],[120592,1,\"\u03C5\"],[120593,1,\"\u03C6\"],[120594,1,\"\u03C7\"],[120595,1,\"\u03C8\"],[120596,1,\"\u03C9\"],[120597,1,\"\u2202\"],[120598,1,\"\u03B5\"],[120599,1,\"\u03B8\"],[120600,1,\"\u03BA\"],[120601,1,\"\u03C6\"],[120602,1,\"\u03C1\"],[120603,1,\"\u03C0\"],[120604,1,\"\u03B1\"],[120605,1,\"\u03B2\"],[120606,1,\"\u03B3\"],[120607,1,\"\u03B4\"],[120608,1,\"\u03B5\"],[120609,1,\"\u03B6\"],[120610,1,\"\u03B7\"],[120611,1,\"\u03B8\"],[120612,1,\"\u03B9\"],[120613,1,\"\u03BA\"],[120614,1,\"\u03BB\"],[120615,1,\"\u03BC\"],[120616,1,\"\u03BD\"],[120617,1,\"\u03BE\"],[120618,1,\"\u03BF\"],[120619,1,\"\u03C0\"],[120620,1,\"\u03C1\"],[120621,1,\"\u03B8\"],[120622,1,\"\u03C3\"],[120623,1,\"\u03C4\"],[120624,1,\"\u03C5\"],[120625,1,\"\u03C6\"],[120626,1,\"\u03C7\"],[120627,1,\"\u03C8\"],[120628,1,\"\u03C9\"],[120629,1,\"\u2207\"],[120630,1,\"\u03B1\"],[120631,1,\"\u03B2\"],[120632,1,\"\u03B3\"],[120633,1,\"\u03B4\"],[120634,1,\"\u03B5\"],[120635,1,\"\u03B6\"],[120636,1,\"\u03B7\"],[120637,1,\"\u03B8\"],[120638,1,\"\u03B9\"],[120639,1,\"\u03BA\"],[120640,1,\"\u03BB\"],[120641,1,\"\u03BC\"],[120642,1,\"\u03BD\"],[120643,1,\"\u03BE\"],[120644,1,\"\u03BF\"],[120645,1,\"\u03C0\"],[120646,1,\"\u03C1\"],[[120647,120648],1,\"\u03C3\"],[120649,1,\"\u03C4\"],[120650,1,\"\u03C5\"],[120651,1,\"\u03C6\"],[120652,1,\"\u03C7\"],[120653,1,\"\u03C8\"],[120654,1,\"\u03C9\"],[120655,1,\"\u2202\"],[120656,1,\"\u03B5\"],[120657,1,\"\u03B8\"],[120658,1,\"\u03BA\"],[120659,1,\"\u03C6\"],[120660,1,\"\u03C1\"],[120661,1,\"\u03C0\"],[120662,1,\"\u03B1\"],[120663,1,\"\u03B2\"],[120664,1,\"\u03B3\"],[120665,1,\"\u03B4\"],[120666,1,\"\u03B5\"],[120667,1,\"\u03B6\"],[120668,1,\"\u03B7\"],[120669,1,\"\u03B8\"],[120670,1,\"\u03B9\"],[120671,1,\"\u03BA\"],[120672,1,\"\u03BB\"],[120673,1,\"\u03BC\"],[120674,1,\"\u03BD\"],[120675,1,\"\u03BE\"],[120676,1,\"\u03BF\"],[120677,1,\"\u03C0\"],[120678,1,\"\u03C1\"],[120679,1,\"\u03B8\"],[120680,1,\"\u03C3\"],[120681,1,\"\u03C4\"],[120682,1,\"\u03C5\"],[120683,1,\"\u03C6\"],[120684,1,\"\u03C7\"],[120685,1,\"\u03C8\"],[120686,1,\"\u03C9\"],[120687,1,\"\u2207\"],[120688,1,\"\u03B1\"],[120689,1,\"\u03B2\"],[120690,1,\"\u03B3\"],[120691,1,\"\u03B4\"],[120692,1,\"\u03B5\"],[120693,1,\"\u03B6\"],[120694,1,\"\u03B7\"],[120695,1,\"\u03B8\"],[120696,1,\"\u03B9\"],[120697,1,\"\u03BA\"],[120698,1,\"\u03BB\"],[120699,1,\"\u03BC\"],[120700,1,\"\u03BD\"],[120701,1,\"\u03BE\"],[120702,1,\"\u03BF\"],[120703,1,\"\u03C0\"],[120704,1,\"\u03C1\"],[[120705,120706],1,\"\u03C3\"],[120707,1,\"\u03C4\"],[120708,1,\"\u03C5\"],[120709,1,\"\u03C6\"],[120710,1,\"\u03C7\"],[120711,1,\"\u03C8\"],[120712,1,\"\u03C9\"],[120713,1,\"\u2202\"],[120714,1,\"\u03B5\"],[120715,1,\"\u03B8\"],[120716,1,\"\u03BA\"],[120717,1,\"\u03C6\"],[120718,1,\"\u03C1\"],[120719,1,\"\u03C0\"],[120720,1,\"\u03B1\"],[120721,1,\"\u03B2\"],[120722,1,\"\u03B3\"],[120723,1,\"\u03B4\"],[120724,1,\"\u03B5\"],[120725,1,\"\u03B6\"],[120726,1,\"\u03B7\"],[120727,1,\"\u03B8\"],[120728,1,\"\u03B9\"],[120729,1,\"\u03BA\"],[120730,1,\"\u03BB\"],[120731,1,\"\u03BC\"],[120732,1,\"\u03BD\"],[120733,1,\"\u03BE\"],[120734,1,\"\u03BF\"],[120735,1,\"\u03C0\"],[120736,1,\"\u03C1\"],[120737,1,\"\u03B8\"],[120738,1,\"\u03C3\"],[120739,1,\"\u03C4\"],[120740,1,\"\u03C5\"],[120741,1,\"\u03C6\"],[120742,1,\"\u03C7\"],[120743,1,\"\u03C8\"],[120744,1,\"\u03C9\"],[120745,1,\"\u2207\"],[120746,1,\"\u03B1\"],[120747,1,\"\u03B2\"],[120748,1,\"\u03B3\"],[120749,1,\"\u03B4\"],[120750,1,\"\u03B5\"],[120751,1,\"\u03B6\"],[120752,1,\"\u03B7\"],[120753,1,\"\u03B8\"],[120754,1,\"\u03B9\"],[120755,1,\"\u03BA\"],[120756,1,\"\u03BB\"],[120757,1,\"\u03BC\"],[120758,1,\"\u03BD\"],[120759,1,\"\u03BE\"],[120760,1,\"\u03BF\"],[120761,1,\"\u03C0\"],[120762,1,\"\u03C1\"],[[120763,120764],1,\"\u03C3\"],[120765,1,\"\u03C4\"],[120766,1,\"\u03C5\"],[120767,1,\"\u03C6\"],[120768,1,\"\u03C7\"],[120769,1,\"\u03C8\"],[120770,1,\"\u03C9\"],[120771,1,\"\u2202\"],[120772,1,\"\u03B5\"],[120773,1,\"\u03B8\"],[120774,1,\"\u03BA\"],[120775,1,\"\u03C6\"],[120776,1,\"\u03C1\"],[120777,1,\"\u03C0\"],[[120778,120779],1,\"\u03DD\"],[[120780,120781],3],[120782,1,\"0\"],[120783,1,\"1\"],[120784,1,\"2\"],[120785,1,\"3\"],[120786,1,\"4\"],[120787,1,\"5\"],[120788,1,\"6\"],[120789,1,\"7\"],[120790,1,\"8\"],[120791,1,\"9\"],[120792,1,\"0\"],[120793,1,\"1\"],[120794,1,\"2\"],[120795,1,\"3\"],[120796,1,\"4\"],[120797,1,\"5\"],[120798,1,\"6\"],[120799,1,\"7\"],[120800,1,\"8\"],[120801,1,\"9\"],[120802,1,\"0\"],[120803,1,\"1\"],[120804,1,\"2\"],[120805,1,\"3\"],[120806,1,\"4\"],[120807,1,\"5\"],[120808,1,\"6\"],[120809,1,\"7\"],[120810,1,\"8\"],[120811,1,\"9\"],[120812,1,\"0\"],[120813,1,\"1\"],[120814,1,\"2\"],[120815,1,\"3\"],[120816,1,\"4\"],[120817,1,\"5\"],[120818,1,\"6\"],[120819,1,\"7\"],[120820,1,\"8\"],[120821,1,\"9\"],[120822,1,\"0\"],[120823,1,\"1\"],[120824,1,\"2\"],[120825,1,\"3\"],[120826,1,\"4\"],[120827,1,\"5\"],[120828,1,\"6\"],[120829,1,\"7\"],[120830,1,\"8\"],[120831,1,\"9\"],[[120832,121343],2],[[121344,121398],2],[[121399,121402],2],[[121403,121452],2],[[121453,121460],2],[121461,2],[[121462,121475],2],[121476,2],[[121477,121483],2],[[121484,121498],3],[[121499,121503],2],[121504,3],[[121505,121519],2],[[121520,122623],3],[[122624,122654],2],[[122655,122879],3],[[122880,122886],2],[122887,3],[[122888,122904],2],[[122905,122906],3],[[122907,122913],2],[122914,3],[[122915,122916],2],[122917,3],[[122918,122922],2],[[122923,123135],3],[[123136,123180],2],[[123181,123183],3],[[123184,123197],2],[[123198,123199],3],[[123200,123209],2],[[123210,123213],3],[123214,2],[123215,2],[[123216,123535],3],[[123536,123566],2],[[123567,123583],3],[[123584,123641],2],[[123642,123646],3],[123647,2],[[123648,124895],3],[[124896,124902],2],[124903,3],[[124904,124907],2],[124908,3],[[124909,124910],2],[124911,3],[[124912,124926],2],[124927,3],[[124928,125124],2],[[125125,125126],3],[[125127,125135],2],[[125136,125142],2],[[125143,125183],3],[125184,1,\"\uD83A\uDD22\"],[125185,1,\"\uD83A\uDD23\"],[125186,1,\"\uD83A\uDD24\"],[125187,1,\"\uD83A\uDD25\"],[125188,1,\"\uD83A\uDD26\"],[125189,1,\"\uD83A\uDD27\"],[125190,1,\"\uD83A\uDD28\"],[125191,1,\"\uD83A\uDD29\"],[125192,1,\"\uD83A\uDD2A\"],[125193,1,\"\uD83A\uDD2B\"],[125194,1,\"\uD83A\uDD2C\"],[125195,1,\"\uD83A\uDD2D\"],[125196,1,\"\uD83A\uDD2E\"],[125197,1,\"\uD83A\uDD2F\"],[125198,1,\"\uD83A\uDD30\"],[125199,1,\"\uD83A\uDD31\"],[125200,1,\"\uD83A\uDD32\"],[125201,1,\"\uD83A\uDD33\"],[125202,1,\"\uD83A\uDD34\"],[125203,1,\"\uD83A\uDD35\"],[125204,1,\"\uD83A\uDD36\"],[125205,1,\"\uD83A\uDD37\"],[125206,1,\"\uD83A\uDD38\"],[125207,1,\"\uD83A\uDD39\"],[125208,1,\"\uD83A\uDD3A\"],[125209,1,\"\uD83A\uDD3B\"],[125210,1,\"\uD83A\uDD3C\"],[125211,1,\"\uD83A\uDD3D\"],[125212,1,\"\uD83A\uDD3E\"],[125213,1,\"\uD83A\uDD3F\"],[125214,1,\"\uD83A\uDD40\"],[125215,1,\"\uD83A\uDD41\"],[125216,1,\"\uD83A\uDD42\"],[125217,1,\"\uD83A\uDD43\"],[[125218,125258],2],[125259,2],[[125260,125263],3],[[125264,125273],2],[[125274,125277],3],[[125278,125279],2],[[125280,126064],3],[[126065,126132],2],[[126133,126208],3],[[126209,126269],2],[[126270,126463],3],[126464,1,\"\u0627\"],[126465,1,\"\u0628\"],[126466,1,\"\u062C\"],[126467,1,\"\u062F\"],[126468,3],[126469,1,\"\u0648\"],[126470,1,\"\u0632\"],[126471,1,\"\u062D\"],[126472,1,\"\u0637\"],[126473,1,\"\u064A\"],[126474,1,\"\u0643\"],[126475,1,\"\u0644\"],[126476,1,\"\u0645\"],[126477,1,\"\u0646\"],[126478,1,\"\u0633\"],[126479,1,\"\u0639\"],[126480,1,\"\u0641\"],[126481,1,\"\u0635\"],[126482,1,\"\u0642\"],[126483,1,\"\u0631\"],[126484,1,\"\u0634\"],[126485,1,\"\u062A\"],[126486,1,\"\u062B\"],[126487,1,\"\u062E\"],[126488,1,\"\u0630\"],[126489,1,\"\u0636\"],[126490,1,\"\u0638\"],[126491,1,\"\u063A\"],[126492,1,\"\u066E\"],[126493,1,\"\u06BA\"],[126494,1,\"\u06A1\"],[126495,1,\"\u066F\"],[126496,3],[126497,1,\"\u0628\"],[126498,1,\"\u062C\"],[126499,3],[126500,1,\"\u0647\"],[[126501,126502],3],[126503,1,\"\u062D\"],[126504,3],[126505,1,\"\u064A\"],[126506,1,\"\u0643\"],[126507,1,\"\u0644\"],[126508,1,\"\u0645\"],[126509,1,\"\u0646\"],[126510,1,\"\u0633\"],[126511,1,\"\u0639\"],[126512,1,\"\u0641\"],[126513,1,\"\u0635\"],[126514,1,\"\u0642\"],[126515,3],[126516,1,\"\u0634\"],[126517,1,\"\u062A\"],[126518,1,\"\u062B\"],[126519,1,\"\u062E\"],[126520,3],[126521,1,\"\u0636\"],[126522,3],[126523,1,\"\u063A\"],[[126524,126529],3],[126530,1,\"\u062C\"],[[126531,126534],3],[126535,1,\"\u062D\"],[126536,3],[126537,1,\"\u064A\"],[126538,3],[126539,1,\"\u0644\"],[126540,3],[126541,1,\"\u0646\"],[126542,1,\"\u0633\"],[126543,1,\"\u0639\"],[126544,3],[126545,1,\"\u0635\"],[126546,1,\"\u0642\"],[126547,3],[126548,1,\"\u0634\"],[[126549,126550],3],[126551,1,\"\u062E\"],[126552,3],[126553,1,\"\u0636\"],[126554,3],[126555,1,\"\u063A\"],[126556,3],[126557,1,\"\u06BA\"],[126558,3],[126559,1,\"\u066F\"],[126560,3],[126561,1,\"\u0628\"],[126562,1,\"\u062C\"],[126563,3],[126564,1,\"\u0647\"],[[126565,126566],3],[126567,1,\"\u062D\"],[126568,1,\"\u0637\"],[126569,1,\"\u064A\"],[126570,1,\"\u0643\"],[126571,3],[126572,1,\"\u0645\"],[126573,1,\"\u0646\"],[126574,1,\"\u0633\"],[126575,1,\"\u0639\"],[126576,1,\"\u0641\"],[126577,1,\"\u0635\"],[126578,1,\"\u0642\"],[126579,3],[126580,1,\"\u0634\"],[126581,1,\"\u062A\"],[126582,1,\"\u062B\"],[126583,1,\"\u062E\"],[126584,3],[126585,1,\"\u0636\"],[126586,1,\"\u0638\"],[126587,1,\"\u063A\"],[126588,1,\"\u066E\"],[126589,3],[126590,1,\"\u06A1\"],[126591,3],[126592,1,\"\u0627\"],[126593,1,\"\u0628\"],[126594,1,\"\u062C\"],[126595,1,\"\u062F\"],[126596,1,\"\u0647\"],[126597,1,\"\u0648\"],[126598,1,\"\u0632\"],[126599,1,\"\u062D\"],[126600,1,\"\u0637\"],[126601,1,\"\u064A\"],[126602,3],[126603,1,\"\u0644\"],[126604,1,\"\u0645\"],[126605,1,\"\u0646\"],[126606,1,\"\u0633\"],[126607,1,\"\u0639\"],[126608,1,\"\u0641\"],[126609,1,\"\u0635\"],[126610,1,\"\u0642\"],[126611,1,\"\u0631\"],[126612,1,\"\u0634\"],[126613,1,\"\u062A\"],[126614,1,\"\u062B\"],[126615,1,\"\u062E\"],[126616,1,\"\u0630\"],[126617,1,\"\u0636\"],[126618,1,\"\u0638\"],[126619,1,\"\u063A\"],[[126620,126624],3],[126625,1,\"\u0628\"],[126626,1,\"\u062C\"],[126627,1,\"\u062F\"],[126628,3],[126629,1,\"\u0648\"],[126630,1,\"\u0632\"],[126631,1,\"\u062D\"],[126632,1,\"\u0637\"],[126633,1,\"\u064A\"],[126634,3],[126635,1,\"\u0644\"],[126636,1,\"\u0645\"],[126637,1,\"\u0646\"],[126638,1,\"\u0633\"],[126639,1,\"\u0639\"],[126640,1,\"\u0641\"],[126641,1,\"\u0635\"],[126642,1,\"\u0642\"],[126643,1,\"\u0631\"],[126644,1,\"\u0634\"],[126645,1,\"\u062A\"],[126646,1,\"\u062B\"],[126647,1,\"\u062E\"],[126648,1,\"\u0630\"],[126649,1,\"\u0636\"],[126650,1,\"\u0638\"],[126651,1,\"\u063A\"],[[126652,126703],3],[[126704,126705],2],[[126706,126975],3],[[126976,127019],2],[[127020,127023],3],[[127024,127123],2],[[127124,127135],3],[[127136,127150],2],[[127151,127152],3],[[127153,127166],2],[127167,2],[127168,3],[[127169,127183],2],[127184,3],[[127185,127199],2],[[127200,127221],2],[[127222,127231],3],[127232,3],[127233,5,\"0,\"],[127234,5,\"1,\"],[127235,5,\"2,\"],[127236,5,\"3,\"],[127237,5,\"4,\"],[127238,5,\"5,\"],[127239,5,\"6,\"],[127240,5,\"7,\"],[127241,5,\"8,\"],[127242,5,\"9,\"],[[127243,127244],2],[[127245,127247],2],[127248,5,\"(a)\"],[127249,5,\"(b)\"],[127250,5,\"(c)\"],[127251,5,\"(d)\"],[127252,5,\"(e)\"],[127253,5,\"(f)\"],[127254,5,\"(g)\"],[127255,5,\"(h)\"],[127256,5,\"(i)\"],[127257,5,\"(j)\"],[127258,5,\"(k)\"],[127259,5,\"(l)\"],[127260,5,\"(m)\"],[127261,5,\"(n)\"],[127262,5,\"(o)\"],[127263,5,\"(p)\"],[127264,5,\"(q)\"],[127265,5,\"(r)\"],[127266,5,\"(s)\"],[127267,5,\"(t)\"],[127268,5,\"(u)\"],[127269,5,\"(v)\"],[127270,5,\"(w)\"],[127271,5,\"(x)\"],[127272,5,\"(y)\"],[127273,5,\"(z)\"],[127274,1,\"\u3014s\u3015\"],[127275,1,\"c\"],[127276,1,\"r\"],[127277,1,\"cd\"],[127278,1,\"wz\"],[127279,2],[127280,1,\"a\"],[127281,1,\"b\"],[127282,1,\"c\"],[127283,1,\"d\"],[127284,1,\"e\"],[127285,1,\"f\"],[127286,1,\"g\"],[127287,1,\"h\"],[127288,1,\"i\"],[127289,1,\"j\"],[127290,1,\"k\"],[127291,1,\"l\"],[127292,1,\"m\"],[127293,1,\"n\"],[127294,1,\"o\"],[127295,1,\"p\"],[127296,1,\"q\"],[127297,1,\"r\"],[127298,1,\"s\"],[127299,1,\"t\"],[127300,1,\"u\"],[127301,1,\"v\"],[127302,1,\"w\"],[127303,1,\"x\"],[127304,1,\"y\"],[127305,1,\"z\"],[127306,1,\"hv\"],[127307,1,\"mv\"],[127308,1,\"sd\"],[127309,1,\"ss\"],[127310,1,\"ppv\"],[127311,1,\"wc\"],[[127312,127318],2],[127319,2],[[127320,127326],2],[127327,2],[[127328,127337],2],[127338,1,\"mc\"],[127339,1,\"md\"],[127340,1,\"mr\"],[[127341,127343],2],[[127344,127352],2],[127353,2],[127354,2],[[127355,127356],2],[[127357,127358],2],[127359,2],[[127360,127369],2],[[127370,127373],2],[[127374,127375],2],[127376,1,\"dj\"],[[127377,127386],2],[[127387,127404],2],[127405,2],[[127406,127461],3],[[127462,127487],2],[127488,1,\"\u307B\u304B\"],[127489,1,\"\u30B3\u30B3\"],[127490,1,\"\u30B5\"],[[127491,127503],3],[127504,1,\"\u624B\"],[127505,1,\"\u5B57\"],[127506,1,\"\u53CC\"],[127507,1,\"\u30C7\"],[127508,1,\"\u4E8C\"],[127509,1,\"\u591A\"],[127510,1,\"\u89E3\"],[127511,1,\"\u5929\"],[127512,1,\"\u4EA4\"],[127513,1,\"\u6620\"],[127514,1,\"\u7121\"],[127515,1,\"\u6599\"],[127516,1,\"\u524D\"],[127517,1,\"\u5F8C\"],[127518,1,\"\u518D\"],[127519,1,\"\u65B0\"],[127520,1,\"\u521D\"],[127521,1,\"\u7D42\"],[127522,1,\"\u751F\"],[127523,1,\"\u8CA9\"],[127524,1,\"\u58F0\"],[127525,1,\"\u5439\"],[127526,1,\"\u6F14\"],[127527,1,\"\u6295\"],[127528,1,\"\u6355\"],[127529,1,\"\u4E00\"],[127530,1,\"\u4E09\"],[127531,1,\"\u904A\"],[127532,1,\"\u5DE6\"],[127533,1,\"\u4E2D\"],[127534,1,\"\u53F3\"],[127535,1,\"\u6307\"],[127536,1,\"\u8D70\"],[127537,1,\"\u6253\"],[127538,1,\"\u7981\"],[127539,1,\"\u7A7A\"],[127540,1,\"\u5408\"],[127541,1,\"\u6E80\"],[127542,1,\"\u6709\"],[127543,1,\"\u6708\"],[127544,1,\"\u7533\"],[127545,1,\"\u5272\"],[127546,1,\"\u55B6\"],[127547,1,\"\u914D\"],[[127548,127551],3],[127552,1,\"\u3014\u672C\u3015\"],[127553,1,\"\u3014\u4E09\u3015\"],[127554,1,\"\u3014\u4E8C\u3015\"],[127555,1,\"\u3014\u5B89\u3015\"],[127556,1,\"\u3014\u70B9\u3015\"],[127557,1,\"\u3014\u6253\u3015\"],[127558,1,\"\u3014\u76D7\u3015\"],[127559,1,\"\u3014\u52DD\u3015\"],[127560,1,\"\u3014\u6557\u3015\"],[[127561,127567],3],[127568,1,\"\u5F97\"],[127569,1,\"\u53EF\"],[[127570,127583],3],[[127584,127589],2],[[127590,127743],3],[[127744,127776],2],[[127777,127788],2],[[127789,127791],2],[[127792,127797],2],[127798,2],[[127799,127868],2],[127869,2],[[127870,127871],2],[[127872,127891],2],[[127892,127903],2],[[127904,127940],2],[127941,2],[[127942,127946],2],[[127947,127950],2],[[127951,127955],2],[[127956,127967],2],[[127968,127984],2],[[127985,127991],2],[[127992,127999],2],[[128000,128062],2],[128063,2],[128064,2],[128065,2],[[128066,128247],2],[128248,2],[[128249,128252],2],[[128253,128254],2],[128255,2],[[128256,128317],2],[[128318,128319],2],[[128320,128323],2],[[128324,128330],2],[[128331,128335],2],[[128336,128359],2],[[128360,128377],2],[128378,2],[[128379,128419],2],[128420,2],[[128421,128506],2],[[128507,128511],2],[128512,2],[[128513,128528],2],[128529,2],[[128530,128532],2],[128533,2],[128534,2],[128535,2],[128536,2],[128537,2],[128538,2],[128539,2],[[128540,128542],2],[128543,2],[[128544,128549],2],[[128550,128551],2],[[128552,128555],2],[128556,2],[128557,2],[[128558,128559],2],[[128560,128563],2],[128564,2],[[128565,128576],2],[[128577,128578],2],[[128579,128580],2],[[128581,128591],2],[[128592,128639],2],[[128640,128709],2],[[128710,128719],2],[128720,2],[[128721,128722],2],[[128723,128724],2],[128725,2],[[128726,128727],2],[[128728,128732],3],[[128733,128735],2],[[128736,128748],2],[[128749,128751],3],[[128752,128755],2],[[128756,128758],2],[[128759,128760],2],[128761,2],[128762,2],[[128763,128764],2],[[128765,128767],3],[[128768,128883],2],[[128884,128895],3],[[128896,128980],2],[[128981,128984],2],[[128985,128991],3],[[128992,129003],2],[[129004,129007],3],[129008,2],[[129009,129023],3],[[129024,129035],2],[[129036,129039],3],[[129040,129095],2],[[129096,129103],3],[[129104,129113],2],[[129114,129119],3],[[129120,129159],2],[[129160,129167],3],[[129168,129197],2],[[129198,129199],3],[[129200,129201],2],[[129202,129279],3],[[129280,129291],2],[129292,2],[[129293,129295],2],[[129296,129304],2],[[129305,129310],2],[129311,2],[[129312,129319],2],[[129320,129327],2],[129328,2],[[129329,129330],2],[[129331,129342],2],[129343,2],[[129344,129355],2],[129356,2],[[129357,129359],2],[[129360,129374],2],[[129375,129387],2],[[129388,129392],2],[129393,2],[129394,2],[[129395,129398],2],[[129399,129400],2],[129401,2],[129402,2],[129403,2],[[129404,129407],2],[[129408,129412],2],[[129413,129425],2],[[129426,129431],2],[[129432,129442],2],[[129443,129444],2],[[129445,129450],2],[[129451,129453],2],[[129454,129455],2],[[129456,129465],2],[[129466,129471],2],[129472,2],[[129473,129474],2],[[129475,129482],2],[129483,2],[129484,2],[[129485,129487],2],[[129488,129510],2],[[129511,129535],2],[[129536,129619],2],[[129620,129631],3],[[129632,129645],2],[[129646,129647],3],[[129648,129651],2],[129652,2],[[129653,129655],3],[[129656,129658],2],[[129659,129660],2],[[129661,129663],3],[[129664,129666],2],[[129667,129670],2],[[129671,129679],3],[[129680,129685],2],[[129686,129704],2],[[129705,129708],2],[[129709,129711],3],[[129712,129718],2],[[129719,129722],2],[[129723,129727],3],[[129728,129730],2],[[129731,129733],2],[[129734,129743],3],[[129744,129750],2],[[129751,129753],2],[[129754,129759],3],[[129760,129767],2],[[129768,129775],3],[[129776,129782],2],[[129783,129791],3],[[129792,129938],2],[129939,3],[[129940,129994],2],[[129995,130031],3],[130032,1,\"0\"],[130033,1,\"1\"],[130034,1,\"2\"],[130035,1,\"3\"],[130036,1,\"4\"],[130037,1,\"5\"],[130038,1,\"6\"],[130039,1,\"7\"],[130040,1,\"8\"],[130041,1,\"9\"],[[130042,131069],3],[[131070,131071],3],[[131072,173782],2],[[173783,173789],2],[[173790,173791],2],[[173792,173823],3],[[173824,177972],2],[[177973,177976],2],[[177977,177983],3],[[177984,178205],2],[[178206,178207],3],[[178208,183969],2],[[183970,183983],3],[[183984,191456],2],[[191457,194559],3],[194560,1,\"\u4E3D\"],[194561,1,\"\u4E38\"],[194562,1,\"\u4E41\"],[194563,1,\"\uD840\uDD22\"],[194564,1,\"\u4F60\"],[194565,1,\"\u4FAE\"],[194566,1,\"\u4FBB\"],[194567,1,\"\u5002\"],[194568,1,\"\u507A\"],[194569,1,\"\u5099\"],[194570,1,\"\u50E7\"],[194571,1,\"\u50CF\"],[194572,1,\"\u349E\"],[194573,1,\"\uD841\uDE3A\"],[194574,1,\"\u514D\"],[194575,1,\"\u5154\"],[194576,1,\"\u5164\"],[194577,1,\"\u5177\"],[194578,1,\"\uD841\uDD1C\"],[194579,1,\"\u34B9\"],[194580,1,\"\u5167\"],[194581,1,\"\u518D\"],[194582,1,\"\uD841\uDD4B\"],[194583,1,\"\u5197\"],[194584,1,\"\u51A4\"],[194585,1,\"\u4ECC\"],[194586,1,\"\u51AC\"],[194587,1,\"\u51B5\"],[194588,1,\"\uD864\uDDDF\"],[194589,1,\"\u51F5\"],[194590,1,\"\u5203\"],[194591,1,\"\u34DF\"],[194592,1,\"\u523B\"],[194593,1,\"\u5246\"],[194594,1,\"\u5272\"],[194595,1,\"\u5277\"],[194596,1,\"\u3515\"],[194597,1,\"\u52C7\"],[194598,1,\"\u52C9\"],[194599,1,\"\u52E4\"],[194600,1,\"\u52FA\"],[194601,1,\"\u5305\"],[194602,1,\"\u5306\"],[194603,1,\"\u5317\"],[194604,1,\"\u5349\"],[194605,1,\"\u5351\"],[194606,1,\"\u535A\"],[194607,1,\"\u5373\"],[194608,1,\"\u537D\"],[[194609,194611],1,\"\u537F\"],[194612,1,\"\uD842\uDE2C\"],[194613,1,\"\u7070\"],[194614,1,\"\u53CA\"],[194615,1,\"\u53DF\"],[194616,1,\"\uD842\uDF63\"],[194617,1,\"\u53EB\"],[194618,1,\"\u53F1\"],[194619,1,\"\u5406\"],[194620,1,\"\u549E\"],[194621,1,\"\u5438\"],[194622,1,\"\u5448\"],[194623,1,\"\u5468\"],[194624,1,\"\u54A2\"],[194625,1,\"\u54F6\"],[194626,1,\"\u5510\"],[194627,1,\"\u5553\"],[194628,1,\"\u5563\"],[[194629,194630],1,\"\u5584\"],[194631,1,\"\u5599\"],[194632,1,\"\u55AB\"],[194633,1,\"\u55B3\"],[194634,1,\"\u55C2\"],[194635,1,\"\u5716\"],[194636,1,\"\u5606\"],[194637,1,\"\u5717\"],[194638,1,\"\u5651\"],[194639,1,\"\u5674\"],[194640,1,\"\u5207\"],[194641,1,\"\u58EE\"],[194642,1,\"\u57CE\"],[194643,1,\"\u57F4\"],[194644,1,\"\u580D\"],[194645,1,\"\u578B\"],[194646,1,\"\u5832\"],[194647,1,\"\u5831\"],[194648,1,\"\u58AC\"],[194649,1,\"\uD845\uDCE4\"],[194650,1,\"\u58F2\"],[194651,1,\"\u58F7\"],[194652,1,\"\u5906\"],[194653,1,\"\u591A\"],[194654,1,\"\u5922\"],[194655,1,\"\u5962\"],[194656,1,\"\uD845\uDEA8\"],[194657,1,\"\uD845\uDEEA\"],[194658,1,\"\u59EC\"],[194659,1,\"\u5A1B\"],[194660,1,\"\u5A27\"],[194661,1,\"\u59D8\"],[194662,1,\"\u5A66\"],[194663,1,\"\u36EE\"],[194664,3],[194665,1,\"\u5B08\"],[[194666,194667],1,\"\u5B3E\"],[194668,1,\"\uD846\uDDC8\"],[194669,1,\"\u5BC3\"],[194670,1,\"\u5BD8\"],[194671,1,\"\u5BE7\"],[194672,1,\"\u5BF3\"],[194673,1,\"\uD846\uDF18\"],[194674,1,\"\u5BFF\"],[194675,1,\"\u5C06\"],[194676,3],[194677,1,\"\u5C22\"],[194678,1,\"\u3781\"],[194679,1,\"\u5C60\"],[194680,1,\"\u5C6E\"],[194681,1,\"\u5CC0\"],[194682,1,\"\u5C8D\"],[194683,1,\"\uD847\uDDE4\"],[194684,1,\"\u5D43\"],[194685,1,\"\uD847\uDDE6\"],[194686,1,\"\u5D6E\"],[194687,1,\"\u5D6B\"],[194688,1,\"\u5D7C\"],[194689,1,\"\u5DE1\"],[194690,1,\"\u5DE2\"],[194691,1,\"\u382F\"],[194692,1,\"\u5DFD\"],[194693,1,\"\u5E28\"],[194694,1,\"\u5E3D\"],[194695,1,\"\u5E69\"],[194696,1,\"\u3862\"],[194697,1,\"\uD848\uDD83\"],[194698,1,\"\u387C\"],[194699,1,\"\u5EB0\"],[194700,1,\"\u5EB3\"],[194701,1,\"\u5EB6\"],[194702,1,\"\u5ECA\"],[194703,1,\"\uD868\uDF92\"],[194704,1,\"\u5EFE\"],[[194705,194706],1,\"\uD848\uDF31\"],[194707,1,\"\u8201\"],[[194708,194709],1,\"\u5F22\"],[194710,1,\"\u38C7\"],[194711,1,\"\uD84C\uDEB8\"],[194712,1,\"\uD858\uDDDA\"],[194713,1,\"\u5F62\"],[194714,1,\"\u5F6B\"],[194715,1,\"\u38E3\"],[194716,1,\"\u5F9A\"],[194717,1,\"\u5FCD\"],[194718,1,\"\u5FD7\"],[194719,1,\"\u5FF9\"],[194720,1,\"\u6081\"],[194721,1,\"\u393A\"],[194722,1,\"\u391C\"],[194723,1,\"\u6094\"],[194724,1,\"\uD849\uDED4\"],[194725,1,\"\u60C7\"],[194726,1,\"\u6148\"],[194727,1,\"\u614C\"],[194728,1,\"\u614E\"],[194729,1,\"\u614C\"],[194730,1,\"\u617A\"],[194731,1,\"\u618E\"],[194732,1,\"\u61B2\"],[194733,1,\"\u61A4\"],[194734,1,\"\u61AF\"],[194735,1,\"\u61DE\"],[194736,1,\"\u61F2\"],[194737,1,\"\u61F6\"],[194738,1,\"\u6210\"],[194739,1,\"\u621B\"],[194740,1,\"\u625D\"],[194741,1,\"\u62B1\"],[194742,1,\"\u62D4\"],[194743,1,\"\u6350\"],[194744,1,\"\uD84A\uDF0C\"],[194745,1,\"\u633D\"],[194746,1,\"\u62FC\"],[194747,1,\"\u6368\"],[194748,1,\"\u6383\"],[194749,1,\"\u63E4\"],[194750,1,\"\uD84A\uDFF1\"],[194751,1,\"\u6422\"],[194752,1,\"\u63C5\"],[194753,1,\"\u63A9\"],[194754,1,\"\u3A2E\"],[194755,1,\"\u6469\"],[194756,1,\"\u647E\"],[194757,1,\"\u649D\"],[194758,1,\"\u6477\"],[194759,1,\"\u3A6C\"],[194760,1,\"\u654F\"],[194761,1,\"\u656C\"],[194762,1,\"\uD84C\uDC0A\"],[194763,1,\"\u65E3\"],[194764,1,\"\u66F8\"],[194765,1,\"\u6649\"],[194766,1,\"\u3B19\"],[194767,1,\"\u6691\"],[194768,1,\"\u3B08\"],[194769,1,\"\u3AE4\"],[194770,1,\"\u5192\"],[194771,1,\"\u5195\"],[194772,1,\"\u6700\"],[194773,1,\"\u669C\"],[194774,1,\"\u80AD\"],[194775,1,\"\u43D9\"],[194776,1,\"\u6717\"],[194777,1,\"\u671B\"],[194778,1,\"\u6721\"],[194779,1,\"\u675E\"],[194780,1,\"\u6753\"],[194781,1,\"\uD84C\uDFC3\"],[194782,1,\"\u3B49\"],[194783,1,\"\u67FA\"],[194784,1,\"\u6785\"],[194785,1,\"\u6852\"],[194786,1,\"\u6885\"],[194787,1,\"\uD84D\uDC6D\"],[194788,1,\"\u688E\"],[194789,1,\"\u681F\"],[194790,1,\"\u6914\"],[194791,1,\"\u3B9D\"],[194792,1,\"\u6942\"],[194793,1,\"\u69A3\"],[194794,1,\"\u69EA\"],[194795,1,\"\u6AA8\"],[194796,1,\"\uD84D\uDEA3\"],[194797,1,\"\u6ADB\"],[194798,1,\"\u3C18\"],[194799,1,\"\u6B21\"],[194800,1,\"\uD84E\uDCA7\"],[194801,1,\"\u6B54\"],[194802,1,\"\u3C4E\"],[194803,1,\"\u6B72\"],[194804,1,\"\u6B9F\"],[194805,1,\"\u6BBA\"],[194806,1,\"\u6BBB\"],[194807,1,\"\uD84E\uDE8D\"],[194808,1,\"\uD847\uDD0B\"],[194809,1,\"\uD84E\uDEFA\"],[194810,1,\"\u6C4E\"],[194811,1,\"\uD84F\uDCBC\"],[194812,1,\"\u6CBF\"],[194813,1,\"\u6CCD\"],[194814,1,\"\u6C67\"],[194815,1,\"\u6D16\"],[194816,1,\"\u6D3E\"],[194817,1,\"\u6D77\"],[194818,1,\"\u6D41\"],[194819,1,\"\u6D69\"],[194820,1,\"\u6D78\"],[194821,1,\"\u6D85\"],[194822,1,\"\uD84F\uDD1E\"],[194823,1,\"\u6D34\"],[194824,1,\"\u6E2F\"],[194825,1,\"\u6E6E\"],[194826,1,\"\u3D33\"],[194827,1,\"\u6ECB\"],[194828,1,\"\u6EC7\"],[194829,1,\"\uD84F\uDED1\"],[194830,1,\"\u6DF9\"],[194831,1,\"\u6F6E\"],[194832,1,\"\uD84F\uDF5E\"],[194833,1,\"\uD84F\uDF8E\"],[194834,1,\"\u6FC6\"],[194835,1,\"\u7039\"],[194836,1,\"\u701E\"],[194837,1,\"\u701B\"],[194838,1,\"\u3D96\"],[194839,1,\"\u704A\"],[194840,1,\"\u707D\"],[194841,1,\"\u7077\"],[194842,1,\"\u70AD\"],[194843,1,\"\uD841\uDD25\"],[194844,1,\"\u7145\"],[194845,1,\"\uD850\uDE63\"],[194846,1,\"\u719C\"],[194847,3],[194848,1,\"\u7228\"],[194849,1,\"\u7235\"],[194850,1,\"\u7250\"],[194851,1,\"\uD851\uDE08\"],[194852,1,\"\u7280\"],[194853,1,\"\u7295\"],[194854,1,\"\uD851\uDF35\"],[194855,1,\"\uD852\uDC14\"],[194856,1,\"\u737A\"],[194857,1,\"\u738B\"],[194858,1,\"\u3EAC\"],[194859,1,\"\u73A5\"],[[194860,194861],1,\"\u3EB8\"],[194862,1,\"\u7447\"],[194863,1,\"\u745C\"],[194864,1,\"\u7471\"],[194865,1,\"\u7485\"],[194866,1,\"\u74CA\"],[194867,1,\"\u3F1B\"],[194868,1,\"\u7524\"],[194869,1,\"\uD853\uDC36\"],[194870,1,\"\u753E\"],[194871,1,\"\uD853\uDC92\"],[194872,1,\"\u7570\"],[194873,1,\"\uD848\uDD9F\"],[194874,1,\"\u7610\"],[194875,1,\"\uD853\uDFA1\"],[194876,1,\"\uD853\uDFB8\"],[194877,1,\"\uD854\uDC44\"],[194878,1,\"\u3FFC\"],[194879,1,\"\u4008\"],[194880,1,\"\u76F4\"],[194881,1,\"\uD854\uDCF3\"],[194882,1,\"\uD854\uDCF2\"],[194883,1,\"\uD854\uDD19\"],[194884,1,\"\uD854\uDD33\"],[194885,1,\"\u771E\"],[[194886,194887],1,\"\u771F\"],[194888,1,\"\u774A\"],[194889,1,\"\u4039\"],[194890,1,\"\u778B\"],[194891,1,\"\u4046\"],[194892,1,\"\u4096\"],[194893,1,\"\uD855\uDC1D\"],[194894,1,\"\u784E\"],[194895,1,\"\u788C\"],[194896,1,\"\u78CC\"],[194897,1,\"\u40E3\"],[194898,1,\"\uD855\uDE26\"],[194899,1,\"\u7956\"],[194900,1,\"\uD855\uDE9A\"],[194901,1,\"\uD855\uDEC5\"],[194902,1,\"\u798F\"],[194903,1,\"\u79EB\"],[194904,1,\"\u412F\"],[194905,1,\"\u7A40\"],[194906,1,\"\u7A4A\"],[194907,1,\"\u7A4F\"],[194908,1,\"\uD856\uDD7C\"],[[194909,194910],1,\"\uD856\uDEA7\"],[194911,3],[194912,1,\"\u4202\"],[194913,1,\"\uD856\uDFAB\"],[194914,1,\"\u7BC6\"],[194915,1,\"\u7BC9\"],[194916,1,\"\u4227\"],[194917,1,\"\uD857\uDC80\"],[194918,1,\"\u7CD2\"],[194919,1,\"\u42A0\"],[194920,1,\"\u7CE8\"],[194921,1,\"\u7CE3\"],[194922,1,\"\u7D00\"],[194923,1,\"\uD857\uDF86\"],[194924,1,\"\u7D63\"],[194925,1,\"\u4301\"],[194926,1,\"\u7DC7\"],[194927,1,\"\u7E02\"],[194928,1,\"\u7E45\"],[194929,1,\"\u4334\"],[194930,1,\"\uD858\uDE28\"],[194931,1,\"\uD858\uDE47\"],[194932,1,\"\u4359\"],[194933,1,\"\uD858\uDED9\"],[194934,1,\"\u7F7A\"],[194935,1,\"\uD858\uDF3E\"],[194936,1,\"\u7F95\"],[194937,1,\"\u7FFA\"],[194938,1,\"\u8005\"],[194939,1,\"\uD859\uDCDA\"],[194940,1,\"\uD859\uDD23\"],[194941,1,\"\u8060\"],[194942,1,\"\uD859\uDDA8\"],[194943,1,\"\u8070\"],[194944,1,\"\uD84C\uDF5F\"],[194945,1,\"\u43D5\"],[194946,1,\"\u80B2\"],[194947,1,\"\u8103\"],[194948,1,\"\u440B\"],[194949,1,\"\u813E\"],[194950,1,\"\u5AB5\"],[194951,1,\"\uD859\uDFA7\"],[194952,1,\"\uD859\uDFB5\"],[194953,1,\"\uD84C\uDF93\"],[194954,1,\"\uD84C\uDF9C\"],[194955,1,\"\u8201\"],[194956,1,\"\u8204\"],[194957,1,\"\u8F9E\"],[194958,1,\"\u446B\"],[194959,1,\"\u8291\"],[194960,1,\"\u828B\"],[194961,1,\"\u829D\"],[194962,1,\"\u52B3\"],[194963,1,\"\u82B1\"],[194964,1,\"\u82B3\"],[194965,1,\"\u82BD\"],[194966,1,\"\u82E6\"],[194967,1,\"\uD85A\uDF3C\"],[194968,1,\"\u82E5\"],[194969,1,\"\u831D\"],[194970,1,\"\u8363\"],[194971,1,\"\u83AD\"],[194972,1,\"\u8323\"],[194973,1,\"\u83BD\"],[194974,1,\"\u83E7\"],[194975,1,\"\u8457\"],[194976,1,\"\u8353\"],[194977,1,\"\u83CA\"],[194978,1,\"\u83CC\"],[194979,1,\"\u83DC\"],[194980,1,\"\uD85B\uDC36\"],[194981,1,\"\uD85B\uDD6B\"],[194982,1,\"\uD85B\uDCD5\"],[194983,1,\"\u452B\"],[194984,1,\"\u84F1\"],[194985,1,\"\u84F3\"],[194986,1,\"\u8516\"],[194987,1,\"\uD85C\uDFCA\"],[194988,1,\"\u8564\"],[194989,1,\"\uD85B\uDF2C\"],[194990,1,\"\u455D\"],[194991,1,\"\u4561\"],[194992,1,\"\uD85B\uDFB1\"],[194993,1,\"\uD85C\uDCD2\"],[194994,1,\"\u456B\"],[194995,1,\"\u8650\"],[194996,1,\"\u865C\"],[194997,1,\"\u8667\"],[194998,1,\"\u8669\"],[194999,1,\"\u86A9\"],[195000,1,\"\u8688\"],[195001,1,\"\u870E\"],[195002,1,\"\u86E2\"],[195003,1,\"\u8779\"],[195004,1,\"\u8728\"],[195005,1,\"\u876B\"],[195006,1,\"\u8786\"],[195007,3],[195008,1,\"\u87E1\"],[195009,1,\"\u8801\"],[195010,1,\"\u45F9\"],[195011,1,\"\u8860\"],[195012,1,\"\u8863\"],[195013,1,\"\uD85D\uDE67\"],[195014,1,\"\u88D7\"],[195015,1,\"\u88DE\"],[195016,1,\"\u4635\"],[195017,1,\"\u88FA\"],[195018,1,\"\u34BB\"],[195019,1,\"\uD85E\uDCAE\"],[195020,1,\"\uD85E\uDD66\"],[195021,1,\"\u46BE\"],[195022,1,\"\u46C7\"],[195023,1,\"\u8AA0\"],[195024,1,\"\u8AED\"],[195025,1,\"\u8B8A\"],[195026,1,\"\u8C55\"],[195027,1,\"\uD85F\uDCA8\"],[195028,1,\"\u8CAB\"],[195029,1,\"\u8CC1\"],[195030,1,\"\u8D1B\"],[195031,1,\"\u8D77\"],[195032,1,\"\uD85F\uDF2F\"],[195033,1,\"\uD842\uDC04\"],[195034,1,\"\u8DCB\"],[195035,1,\"\u8DBC\"],[195036,1,\"\u8DF0\"],[195037,1,\"\uD842\uDCDE\"],[195038,1,\"\u8ED4\"],[195039,1,\"\u8F38\"],[195040,1,\"\uD861\uDDD2\"],[195041,1,\"\uD861\uDDED\"],[195042,1,\"\u9094\"],[195043,1,\"\u90F1\"],[195044,1,\"\u9111\"],[195045,1,\"\uD861\uDF2E\"],[195046,1,\"\u911B\"],[195047,1,\"\u9238\"],[195048,1,\"\u92D7\"],[195049,1,\"\u92D8\"],[195050,1,\"\u927C\"],[195051,1,\"\u93F9\"],[195052,1,\"\u9415\"],[195053,1,\"\uD862\uDFFA\"],[195054,1,\"\u958B\"],[195055,1,\"\u4995\"],[195056,1,\"\u95B7\"],[195057,1,\"\uD863\uDD77\"],[195058,1,\"\u49E6\"],[195059,1,\"\u96C3\"],[195060,1,\"\u5DB2\"],[195061,1,\"\u9723\"],[195062,1,\"\uD864\uDD45\"],[195063,1,\"\uD864\uDE1A\"],[195064,1,\"\u4A6E\"],[195065,1,\"\u4A76\"],[195066,1,\"\u97E0\"],[195067,1,\"\uD865\uDC0A\"],[195068,1,\"\u4AB2\"],[195069,1,\"\uD865\uDC96\"],[[195070,195071],1,\"\u980B\"],[195072,1,\"\u9829\"],[195073,1,\"\uD865\uDDB6\"],[195074,1,\"\u98E2\"],[195075,1,\"\u4B33\"],[195076,1,\"\u9929\"],[195077,1,\"\u99A7\"],[195078,1,\"\u99C2\"],[195079,1,\"\u99FE\"],[195080,1,\"\u4BCE\"],[195081,1,\"\uD866\uDF30\"],[195082,1,\"\u9B12\"],[195083,1,\"\u9C40\"],[195084,1,\"\u9CFD\"],[195085,1,\"\u4CCE\"],[195086,1,\"\u4CED\"],[195087,1,\"\u9D67\"],[195088,1,\"\uD868\uDCCE\"],[195089,1,\"\u4CF8\"],[195090,1,\"\uD868\uDD05\"],[195091,1,\"\uD868\uDE0E\"],[195092,1,\"\uD868\uDE91\"],[195093,1,\"\u9EBB\"],[195094,1,\"\u4D56\"],[195095,1,\"\u9EF9\"],[195096,1,\"\u9EFE\"],[195097,1,\"\u9F05\"],[195098,1,\"\u9F0F\"],[195099,1,\"\u9F16\"],[195100,1,\"\u9F3B\"],[195101,1,\"\uD869\uDE00\"],[[195102,196605],3],[[196606,196607],3],[[196608,201546],2],[[201547,262141],3],[[262142,262143],3],[[262144,327677],3],[[327678,327679],3],[[327680,393213],3],[[393214,393215],3],[[393216,458749],3],[[458750,458751],3],[[458752,524285],3],[[524286,524287],3],[[524288,589821],3],[[589822,589823],3],[[589824,655357],3],[[655358,655359],3],[[655360,720893],3],[[720894,720895],3],[[720896,786429],3],[[786430,786431],3],[[786432,851965],3],[[851966,851967],3],[[851968,917501],3],[[917502,917503],3],[917504,3],[917505,3],[[917506,917535],3],[[917536,917631],3],[[917632,917759],3],[[917760,917999],7],[[918000,983037],3],[[983038,983039],3],[[983040,1048573],3],[[1048574,1048575],3],[[1048576,1114109],3],[[1114110,1114111],3]]", "\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n", "\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n", "\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n", "\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n", "\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n", "\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || hasAnOpaquePath(url) || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(serializePath(url)));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n", "\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n", "\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n", "\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n", "\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n", null, null, "{\n  \"name\": \"mongodb\",\n  \"version\": \"5.7.0\",\n  \"description\": \"The official MongoDB driver for Node.js\",\n  \"main\": \"lib/index.js\",\n  \"files\": [\n    \"lib\",\n    \"src\",\n    \"etc/prepare.js\",\n    \"mongodb.d.ts\",\n    \"tsconfig.json\"\n  ],\n  \"types\": \"mongodb.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:mongodb/node-mongodb-native.git\"\n  },\n  \"keywords\": [\n    \"mongodb\",\n    \"driver\",\n    \"official\"\n  ],\n  \"author\": {\n    \"name\": \"The MongoDB NodeJS Team\",\n    \"email\": \"dbx-node@mongodb.com\"\n  },\n  \"dependencies\": {\n    \"bson\": \"^5.4.0\",\n    \"mongodb-connection-string-url\": \"^2.6.0\",\n    \"socks\": \"^2.7.1\"\n  },\n  \"optionalDependencies\": {\n    \"saslprep\": \"^1.0.3\"\n  },\n  \"peerDependencies\": {\n    \"@aws-sdk/credential-providers\": \"^3.201.0\",\n    \"@mongodb-js/zstd\": \"^1.1.0\",\n    \"kerberos\": \"^2.0.1\",\n    \"mongodb-client-encryption\": \">=2.3.0 <3\",\n    \"snappy\": \"^7.2.2\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@aws-sdk/credential-providers\": {\n      \"optional\": true\n    },\n    \"@mongodb-js/zstd\": {\n      \"optional\": true\n    },\n    \"kerberos\": {\n      \"optional\": true\n    },\n    \"snappy\": {\n      \"optional\": true\n    },\n    \"mongodb-client-encryption\": {\n      \"optional\": true\n    }\n  },\n  \"devDependencies\": {\n    \"@iarna/toml\": \"^2.2.5\",\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.2\",\n    \"@microsoft/api-extractor\": \"^7.35.1\",\n    \"@microsoft/tsdoc-config\": \"^0.16.2\",\n    \"@mongodb-js/zstd\": \"^1.1.0\",\n    \"@octokit/core\": \"^4.2.1\",\n    \"@types/chai\": \"^4.3.5\",\n    \"@types/chai-subset\": \"^1.3.3\",\n    \"@types/express\": \"^4.17.17\",\n    \"@types/kerberos\": \"^1.1.2\",\n    \"@types/mocha\": \"^10.0.1\",\n    \"@types/node\": \"^20.1.0\",\n    \"@types/saslprep\": \"^1.0.1\",\n    \"@types/semver\": \"^7.5.0\",\n    \"@types/sinon\": \"^10.0.14\",\n    \"@types/sinon-chai\": \"^3.2.9\",\n    \"@types/whatwg-url\": \"^11.0.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.59.5\",\n    \"@typescript-eslint/parser\": \"^5.59.5\",\n    \"chai\": \"^4.3.7\",\n    \"chai-subset\": \"^1.6.0\",\n    \"chalk\": \"^4.1.2\",\n    \"eslint\": \"^8.40.0\",\n    \"eslint-config-prettier\": \"^8.8.0\",\n    \"eslint-plugin-import\": \"^2.27.5\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"eslint-plugin-simple-import-sort\": \"^10.0.0\",\n    \"eslint-plugin-tsdoc\": \"^0.2.17\",\n    \"express\": \"^4.18.2\",\n    \"js-yaml\": \"^4.1.0\",\n    \"mocha\": \"^10.2.0\",\n    \"mocha-sinon\": \"^2.1.2\",\n    \"mongodb-legacy\": \"^5.0.0\",\n    \"nyc\": \"^15.1.0\",\n    \"prettier\": \"^2.8.8\",\n    \"semver\": \"^7.5.0\",\n    \"sinon\": \"^15.0.4\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"snappy\": \"^7.2.2\",\n    \"source-map-support\": \"^0.5.21\",\n    \"ts-node\": \"^10.9.1\",\n    \"tsd\": \"^0.28.1\",\n    \"typescript\": \"^5.0.4\",\n    \"typescript-cached-transpile\": \"^0.0.6\",\n    \"v8-heapsnapshot\": \"^1.2.0\",\n    \"yargs\": \"^17.7.2\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=14.20.1\"\n  },\n  \"bugs\": {\n    \"url\": \"https://jira.mongodb.org/projects/NODE/issues/\"\n  },\n  \"homepage\": \"https://github.com/mongodb/node-mongodb-native\",\n  \"scripts\": {\n    \"build:evergreen\": \"node .evergreen/generate_evergreen_tasks.js\",\n    \"build:ts\": \"node ./node_modules/typescript/bin/tsc\",\n    \"build:dts\": \"npm run build:ts && api-extractor run && node etc/clean_definition_files.cjs\",\n    \"build:docs\": \"./etc/docs/build.ts\",\n    \"build:typedoc\": \"typedoc\",\n    \"build:nightly\": \"node ./.github/scripts/nightly.mjs\",\n    \"check:bench\": \"node test/benchmarks/driverBench\",\n    \"check:coverage\": \"nyc npm run test:all\",\n    \"check:integration-coverage\": \"nyc npm run check:test\",\n    \"check:lambda\": \"mocha --config test/mocha_lambda.json test/integration/node-specific/examples/handler.test.js\",\n    \"check:lambda:aws\": \"mocha --config test/mocha_lambda.json test/integration/node-specific/examples/aws_handler.test.js\",\n    \"check:lint\": \"npm run build:dts && npm run check:dts && npm run check:eslint && npm run check:tsd\",\n    \"check:eslint\": \"eslint -v && eslint --max-warnings=0 --ext '.js,.ts' src test\",\n    \"check:tsd\": \"tsd --version && tsd\",\n    \"check:dependencies\": \"mocha test/action/dependency.test.ts\",\n    \"check:dts\": \"node ./node_modules/typescript/bin/tsc --noEmit mongodb.d.ts && tsd\",\n    \"check:search-indexes\": \"nyc mocha --config test/mocha_mongodb.json test/manual/search-index-management.spec.test.ts\",\n    \"check:test\": \"mocha --config test/mocha_mongodb.json test/integration\",\n    \"check:unit\": \"mocha test/unit\",\n    \"check:ts\": \"node ./node_modules/typescript/bin/tsc -v && node ./node_modules/typescript/bin/tsc --noEmit\",\n    \"check:atlas\": \"mocha --config test/manual/mocharc.json test/manual/atlas_connectivity.test.js\",\n    \"check:adl\": \"mocha --config test/mocha_mongodb.json test/manual/atlas-data-lake-testing\",\n    \"check:aws\": \"nyc mocha --config test/mocha_mongodb.json test/integration/auth/mongodb_aws.test.ts\",\n    \"check:oidc\": \"mocha --config test/mocha_mongodb.json test/manual/mongodb_oidc.prose.test.ts\",\n    \"check:oidc-azure\": \"mocha --config test/mocha_mongodb.json test/integration/auth/mongodb_oidc_azure.prose.test.ts\",\n    \"check:ocsp\": \"mocha --config test/manual/mocharc.json test/manual/ocsp_support.test.js\",\n    \"check:kerberos\": \"nyc mocha --config test/manual/mocharc.json test/manual/kerberos.test.ts\",\n    \"check:tls\": \"mocha --config test/manual/mocharc.json test/manual/tls_support.test.js\",\n    \"check:ldap\": \"nyc mocha --config test/manual/mocharc.json test/manual/ldap.test.js\",\n    \"check:socks5\": \"mocha --config test/manual/mocharc.json test/manual/socks5.test.ts\",\n    \"check:csfle\": \"mocha --config test/mocha_mongodb.json test/integration/client-side-encryption\",\n    \"check:snappy\": \"mocha test/unit/assorted/snappy.test.js\",\n    \"fix:eslint\": \"npm run check:eslint -- --fix\",\n    \"prepare\": \"node etc/prepare.js\",\n    \"preview:docs\": \"ts-node etc/docs/preview.ts\",\n    \"test\": \"npm run check:lint && npm run test:all\",\n    \"test:all\": \"npm run check:unit && npm run check:test\",\n    \"update:docs\": \"npm run build:docs -- --yes\"\n  },\n  \"tsd\": {\n    \"directory\": \"test/types\",\n    \"compilerOptions\": {\n      \"strict\": true,\n      \"target\": \"esnext\",\n      \"module\": \"commonjs\",\n      \"moduleResolution\": \"node\"\n    }\n  }\n}\n", "import * as os from 'os';\nimport * as process from 'process';\n\nimport { BSON, Int32 } from '../../bson';\nimport { MongoInvalidArgumentError } from '../../error';\nimport type { MongoOptions } from '../../mongo_client';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst NODE_DRIVER_VERSION = require('../../../package.json').version;\n\n/**\n * @public\n * @see https://github.com/mongodb/specifications/blob/master/source/mongodb-handshake/handshake.rst#hello-command\n */\nexport interface ClientMetadata {\n  driver: {\n    name: string;\n    version: string;\n  };\n  os: {\n    type: string;\n    name?: NodeJS.Platform;\n    architecture?: string;\n    version?: string;\n  };\n  platform: string;\n  application?: {\n    name: string;\n  };\n  /** FaaS environment information */\n  env?: {\n    name: 'aws.lambda' | 'gcp.func' | 'azure.func' | 'vercel';\n    timeout_sec?: Int32;\n    memory_mb?: Int32;\n    region?: string;\n    url?: string;\n  };\n}\n\n/** @public */\nexport interface ClientMetadataOptions {\n  driverInfo?: {\n    name?: string;\n    version?: string;\n    platform?: string;\n  };\n  appName?: string;\n}\n\n/** @internal */\nexport class LimitedSizeDocument {\n  private document = new Map();\n  /** BSON overhead: Int32 + Null byte */\n  private documentSize = 5;\n  constructor(private maxSize: number) {}\n\n  /** Only adds key/value if the bsonByteLength is less than MAX_SIZE */\n  public ifItFitsItSits(key: string, value: Record<string, any> | string): boolean {\n    // The BSON byteLength of the new element is the same as serializing it to its own document\n    // subtracting the document size int32 and the null terminator.\n    const newElementSize = BSON.serialize(new Map().set(key, value)).byteLength - 5;\n\n    if (newElementSize + this.documentSize > this.maxSize) {\n      return false;\n    }\n\n    this.documentSize += newElementSize;\n\n    this.document.set(key, value);\n\n    return true;\n  }\n\n  toObject(): ClientMetadata {\n    return BSON.deserialize(BSON.serialize(this.document), {\n      promoteLongs: false,\n      promoteBuffers: false,\n      promoteValues: false,\n      useBigInt64: false\n    }) as ClientMetadata;\n  }\n}\n\ntype MakeClientMetadataOptions = Pick<MongoOptions, 'appName' | 'driverInfo'>;\n/**\n * From the specs:\n * Implementors SHOULD cumulatively update fields in the following order until the document is under the size limit:\n * 1. Omit fields from `env` except `env.name`.\n * 2. Omit fields from `os` except `os.type`.\n * 3. Omit the `env` document entirely.\n * 4. Truncate `platform`. -- special we do not truncate this field\n */\nexport function makeClientMetadata(options: MakeClientMetadataOptions): ClientMetadata {\n  const metadataDocument = new LimitedSizeDocument(512);\n\n  const { appName = '' } = options;\n  // Add app name first, it must be sent\n  if (appName.length > 0) {\n    const name =\n      Buffer.byteLength(appName, 'utf8') <= 128\n        ? options.appName\n        : Buffer.from(appName, 'utf8').subarray(0, 128).toString('utf8');\n    metadataDocument.ifItFitsItSits('application', { name });\n  }\n\n  const { name = '', version = '', platform = '' } = options.driverInfo;\n\n  const driverInfo = {\n    name: name.length > 0 ? `nodejs|${name}` : 'nodejs',\n    version: version.length > 0 ? `${NODE_DRIVER_VERSION}|${version}` : NODE_DRIVER_VERSION\n  };\n\n  if (!metadataDocument.ifItFitsItSits('driver', driverInfo)) {\n    throw new MongoInvalidArgumentError(\n      'Unable to include driverInfo name and version, metadata cannot exceed 512 bytes'\n    );\n  }\n\n  let runtimeInfo = getRuntimeInfo();\n  if (platform.length > 0) {\n    runtimeInfo = `${runtimeInfo}|${platform}`;\n  }\n\n  if (!metadataDocument.ifItFitsItSits('platform', runtimeInfo)) {\n    throw new MongoInvalidArgumentError(\n      'Unable to include driverInfo platform, metadata cannot exceed 512 bytes'\n    );\n  }\n\n  // Note: order matters, os.type is last so it will be removed last if we're at maxSize\n  const osInfo = new Map()\n    .set('name', process.platform)\n    .set('architecture', process.arch)\n    .set('version', os.release())\n    .set('type', os.type());\n\n  if (!metadataDocument.ifItFitsItSits('os', osInfo)) {\n    for (const key of osInfo.keys()) {\n      osInfo.delete(key);\n      if (osInfo.size === 0) break;\n      if (metadataDocument.ifItFitsItSits('os', osInfo)) break;\n    }\n  }\n\n  const faasEnv = getFAASEnv();\n  if (faasEnv != null) {\n    if (!metadataDocument.ifItFitsItSits('env', faasEnv)) {\n      for (const key of faasEnv.keys()) {\n        faasEnv.delete(key);\n        if (faasEnv.size === 0) break;\n        if (metadataDocument.ifItFitsItSits('env', faasEnv)) break;\n      }\n    }\n  }\n\n  return metadataDocument.toObject();\n}\n\n/**\n * Collects FaaS metadata.\n * - `name` MUST be the last key in the Map returned.\n */\nexport function getFAASEnv(): Map<string, string | Int32> | null {\n  const {\n    AWS_EXECUTION_ENV = '',\n    AWS_LAMBDA_RUNTIME_API = '',\n    FUNCTIONS_WORKER_RUNTIME = '',\n    K_SERVICE = '',\n    FUNCTION_NAME = '',\n    VERCEL = '',\n    AWS_LAMBDA_FUNCTION_MEMORY_SIZE = '',\n    AWS_REGION = '',\n    FUNCTION_MEMORY_MB = '',\n    FUNCTION_REGION = '',\n    FUNCTION_TIMEOUT_SEC = '',\n    VERCEL_REGION = ''\n  } = process.env;\n\n  const isAWSFaaS =\n    AWS_EXECUTION_ENV.startsWith('AWS_Lambda_') || AWS_LAMBDA_RUNTIME_API.length > 0;\n  const isAzureFaaS = FUNCTIONS_WORKER_RUNTIME.length > 0;\n  const isGCPFaaS = K_SERVICE.length > 0 || FUNCTION_NAME.length > 0;\n  const isVercelFaaS = VERCEL.length > 0;\n\n  // Note: order matters, name must always be the last key\n  const faasEnv = new Map();\n\n  // When isVercelFaaS is true so is isAWSFaaS; Vercel inherits the AWS env\n  if (isVercelFaaS && !(isAzureFaaS || isGCPFaaS)) {\n    if (VERCEL_REGION.length > 0) {\n      faasEnv.set('region', VERCEL_REGION);\n    }\n\n    faasEnv.set('name', 'vercel');\n    return faasEnv;\n  }\n\n  if (isAWSFaaS && !(isAzureFaaS || isGCPFaaS || isVercelFaaS)) {\n    if (AWS_REGION.length > 0) {\n      faasEnv.set('region', AWS_REGION);\n    }\n\n    if (\n      AWS_LAMBDA_FUNCTION_MEMORY_SIZE.length > 0 &&\n      Number.isInteger(+AWS_LAMBDA_FUNCTION_MEMORY_SIZE)\n    ) {\n      faasEnv.set('memory_mb', new Int32(AWS_LAMBDA_FUNCTION_MEMORY_SIZE));\n    }\n\n    faasEnv.set('name', 'aws.lambda');\n    return faasEnv;\n  }\n\n  if (isAzureFaaS && !(isGCPFaaS || isAWSFaaS || isVercelFaaS)) {\n    faasEnv.set('name', 'azure.func');\n    return faasEnv;\n  }\n\n  if (isGCPFaaS && !(isAzureFaaS || isAWSFaaS || isVercelFaaS)) {\n    if (FUNCTION_REGION.length > 0) {\n      faasEnv.set('region', FUNCTION_REGION);\n    }\n\n    if (FUNCTION_MEMORY_MB.length > 0 && Number.isInteger(+FUNCTION_MEMORY_MB)) {\n      faasEnv.set('memory_mb', new Int32(FUNCTION_MEMORY_MB));\n    }\n\n    if (FUNCTION_TIMEOUT_SEC.length > 0 && Number.isInteger(+FUNCTION_TIMEOUT_SEC)) {\n      faasEnv.set('timeout_sec', new Int32(FUNCTION_TIMEOUT_SEC));\n    }\n\n    faasEnv.set('name', 'gcp.func');\n    return faasEnv;\n  }\n\n  return null;\n}\n\n/**\n * @internal\n * This type represents the global Deno object and the minimal type contract we expect it to satisfy.\n */\ndeclare const Deno: { version?: { deno?: string } } | undefined;\n\n/**\n * @internal\n * This type represents the global Bun object and the minimal type contract we expect it to satisfy.\n */\ndeclare const Bun: { (): void; version?: string } | undefined;\n\n/**\n * @internal\n * Get current JavaScript runtime platform\n *\n * NOTE: The version information fetching is intentionally written defensively\n * to avoid having a released driver version that becomes incompatible\n * with a future change to these global objects.\n */\nfunction getRuntimeInfo(): string {\n  if ('Deno' in globalThis) {\n    const version = typeof Deno?.version?.deno === 'string' ? Deno?.version?.deno : '0.0.0-unknown';\n\n    return `Deno v${version}, ${os.endianness()}`;\n  }\n\n  if ('Bun' in globalThis) {\n    const version = typeof Bun?.version === 'string' ? Bun?.version : '0.0.0-unknown';\n\n    return `Bun v${version}, ${os.endianness()}`;\n  }\n\n  return `Node.js ${process.version}, ${os.endianness()}`;\n}\n", "import { promisify } from 'util';\nimport * as zlib from 'zlib';\n\nimport { LEGACY_HELLO_COMMAND } from '../../constants';\nimport { getSnappy, getZstdLibrary, type SnappyLib, type ZStandard } from '../../deps';\nimport { MongoDecompressionError, MongoInvalidArgumentError } from '../../error';\n\n/** @public */\nexport const Compressor = Object.freeze({\n  none: 0,\n  snappy: 1,\n  zlib: 2,\n  zstd: 3\n} as const);\n\n/** @public */\nexport type Compressor = (typeof Compressor)[CompressorName];\n\n/** @public */\nexport type CompressorName = keyof typeof Compressor;\n\nexport const uncompressibleCommands = new Set([\n  LEGACY_HELLO_COMMAND,\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n]);\n\nconst ZSTD_COMPRESSION_LEVEL = 3;\n\nconst zlibInflate = promisify(zlib.inflate.bind(zlib));\nconst zlibDeflate = promisify(zlib.deflate.bind(zlib));\n\nlet zstd: typeof ZStandard;\nlet Snappy: SnappyLib | null = null;\nfunction loadSnappy() {\n  if (Snappy == null) {\n    const snappyImport = getSnappy();\n    if ('kModuleError' in snappyImport) {\n      throw snappyImport.kModuleError;\n    }\n    Snappy = snappyImport;\n  }\n  return Snappy;\n}\n\n// Facilitate compressing a message using an agreed compressor\nexport async function compress(\n  options: { zlibCompressionLevel: number; agreedCompressor: CompressorName },\n  dataToBeCompressed: Buffer\n): Promise<Buffer> {\n  const zlibOptions = {} as zlib.ZlibOptions;\n  switch (options.agreedCompressor) {\n    case 'snappy': {\n      Snappy ??= loadSnappy();\n      return Snappy.compress(dataToBeCompressed);\n    }\n    case 'zstd': {\n      loadZstd();\n      if ('kModuleError' in zstd) {\n        throw zstd['kModuleError'];\n      }\n      return zstd.compress(dataToBeCompressed, ZSTD_COMPRESSION_LEVEL);\n    }\n    case 'zlib': {\n      if (options.zlibCompressionLevel) {\n        zlibOptions.level = options.zlibCompressionLevel;\n      }\n      return zlibDeflate(dataToBeCompressed, zlibOptions);\n    }\n    default: {\n      throw new MongoInvalidArgumentError(\n        `Unknown compressor ${options.agreedCompressor} failed to compress`\n      );\n    }\n  }\n}\n\n// Decompress a message using the given compressor\nexport async function decompress(compressorID: number, compressedData: Buffer): Promise<Buffer> {\n  if (\n    compressorID !== Compressor.snappy &&\n    compressorID !== Compressor.zstd &&\n    compressorID !== Compressor.zlib &&\n    compressorID !== Compressor.none\n  ) {\n    throw new MongoDecompressionError(\n      `Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`\n    );\n  }\n\n  switch (compressorID) {\n    case Compressor.snappy: {\n      Snappy ??= loadSnappy();\n      return Snappy.uncompress(compressedData, { asBuffer: true });\n    }\n    case Compressor.zstd: {\n      loadZstd();\n      if ('kModuleError' in zstd) {\n        throw zstd['kModuleError'];\n      }\n      return zstd.decompress(compressedData);\n    }\n    case Compressor.zlib: {\n      return zlibInflate(compressedData);\n    }\n    default: {\n      return compressedData;\n    }\n  }\n}\n\n/**\n * Load ZStandard if it is not already set.\n */\nfunction loadZstd() {\n  if (!zstd) {\n    zstd = getZstdLibrary();\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport { MONGO_CLIENT_EVENTS } from './constants';\nimport type { AutoEncrypter, AutoEncryptionOptions } from './deps';\nimport { MongoInvalidArgumentError, MongoMissingDependencyError } from './error';\nimport { MongoClient, type MongoClientOptions } from './mongo_client';\nimport { type Callback, getMongoDBClientEncryption } from './utils';\n\nlet AutoEncrypterClass: { new (...args: ConstructorParameters<AutoEncrypter>): AutoEncrypter };\n\n/** @internal */\nconst kInternalClient = Symbol('internalClient');\n\n/** @internal */\nexport interface EncrypterOptions {\n  autoEncryption: AutoEncryptionOptions;\n  maxPoolSize?: number;\n}\n\n/** @internal */\nexport class Encrypter {\n  [kInternalClient]: MongoClient | null;\n  bypassAutoEncryption: boolean;\n  needsConnecting: boolean;\n  autoEncrypter: AutoEncrypter;\n\n  constructor(client: MongoClient, uri: string, options: MongoClientOptions) {\n    if (typeof options.autoEncryption !== 'object') {\n      throw new MongoInvalidArgumentError('Option \"autoEncryption\" must be specified');\n    }\n    // initialize to null, if we call getInternalClient, we may set this it is important to not overwrite those function calls.\n    this[kInternalClient] = null;\n\n    this.bypassAutoEncryption = !!options.autoEncryption.bypassAutoEncryption;\n    this.needsConnecting = false;\n\n    if (options.maxPoolSize === 0 && options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = client;\n    } else if (options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = this.getInternalClient(client, uri, options);\n    }\n\n    if (this.bypassAutoEncryption) {\n      options.autoEncryption.metadataClient = undefined;\n    } else if (options.maxPoolSize === 0) {\n      options.autoEncryption.metadataClient = client;\n    } else {\n      options.autoEncryption.metadataClient = this.getInternalClient(client, uri, options);\n    }\n\n    if (options.proxyHost) {\n      options.autoEncryption.proxyOptions = {\n        proxyHost: options.proxyHost,\n        proxyPort: options.proxyPort,\n        proxyUsername: options.proxyUsername,\n        proxyPassword: options.proxyPassword\n      };\n    }\n\n    this.autoEncrypter = new AutoEncrypterClass(client, options.autoEncryption);\n  }\n\n  getInternalClient(client: MongoClient, uri: string, options: MongoClientOptions): MongoClient {\n    // TODO(NODE-4144): Remove new variable for type narrowing\n    let internalClient = this[kInternalClient];\n    if (internalClient == null) {\n      const clonedOptions: MongoClientOptions = {};\n\n      for (const key of [\n        ...Object.getOwnPropertyNames(options),\n        ...Object.getOwnPropertySymbols(options)\n      ] as string[]) {\n        if (['autoEncryption', 'minPoolSize', 'servers', 'caseTranslate', 'dbName'].includes(key))\n          continue;\n        Reflect.set(clonedOptions, key, Reflect.get(options, key));\n      }\n\n      clonedOptions.minPoolSize = 0;\n\n      internalClient = new MongoClient(uri, clonedOptions);\n      this[kInternalClient] = internalClient;\n\n      for (const eventName of MONGO_CLIENT_EVENTS) {\n        for (const listener of client.listeners(eventName)) {\n          internalClient.on(eventName, listener);\n        }\n      }\n\n      client.on('newListener', (eventName, listener) => {\n        internalClient?.on(eventName, listener);\n      });\n\n      this.needsConnecting = true;\n    }\n    return internalClient;\n  }\n\n  async connectInternalClient(): Promise<void> {\n    // TODO(NODE-4144): Remove new variable for type narrowing\n    const internalClient = this[kInternalClient];\n    if (this.needsConnecting && internalClient != null) {\n      this.needsConnecting = false;\n      await internalClient.connect();\n    }\n  }\n\n  close(client: MongoClient, force: boolean, callback: Callback): void {\n    this.autoEncrypter.teardown(!!force, e => {\n      const internalClient = this[kInternalClient];\n      if (internalClient != null && client !== internalClient) {\n        internalClient.close(force).then(\n          () => callback(),\n          error => callback(error)\n        );\n        return;\n      }\n      callback(e);\n    });\n  }\n\n  static checkForMongoCrypt(): void {\n    const mongodbClientEncryption = getMongoDBClientEncryption();\n    if (mongodbClientEncryption == null) {\n      throw new MongoMissingDependencyError(\n        'Auto-encryption requested, but the module is not installed. ' +\n          'Please add `mongodb-client-encryption` as a dependency of your project'\n      );\n    }\n    AutoEncrypterClass = mongodbClientEncryption.extension(require('../lib/index')).AutoEncrypter;\n  }\n}\n", "import { EJSON } from 'bson';\nimport type { Writable } from 'stream';\nimport { inspect } from 'util';\n\nimport type {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './cmap/command_monitoring_events';\nimport type {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nimport {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY\n} from './constants';\nimport { HostAddress, parseUnsignedInteger } from './utils';\n\n/** @internal */\nexport const SeverityLevel = Object.freeze({\n  EMERGENCY: 'emergency',\n  ALERT: 'alert',\n  CRITICAL: 'critical',\n  ERROR: 'error',\n  WARNING: 'warn',\n  NOTICE: 'notice',\n  INFORMATIONAL: 'info',\n  DEBUG: 'debug',\n  TRACE: 'trace',\n  OFF: 'off'\n} as const);\n\n/** @internal */\nexport const DEFAULT_MAX_DOCUMENT_LENGTH = 1000;\n/** @internal */\nexport type SeverityLevel = (typeof SeverityLevel)[keyof typeof SeverityLevel];\n\n/** @internal */\nclass SeverityLevelMap extends Map<SeverityLevel | number, SeverityLevel | number> {\n  constructor(entries: [SeverityLevel | number, SeverityLevel | number][]) {\n    const newEntries: [number | SeverityLevel, SeverityLevel | number][] = [];\n    for (const [level, value] of entries) {\n      newEntries.push([value, level]);\n    }\n\n    newEntries.push(...entries);\n    super(newEntries);\n  }\n\n  getNumericSeverityLevel(severity: SeverityLevel): number {\n    return this.get(severity) as number;\n  }\n\n  getSeverityLevelName(level: number): SeverityLevel | undefined {\n    return this.get(level) as SeverityLevel | undefined;\n  }\n}\n\n/** @internal */\nexport const SEVERITY_LEVEL_MAP = new SeverityLevelMap([\n  [SeverityLevel.OFF, -Infinity],\n  [SeverityLevel.EMERGENCY, 0],\n  [SeverityLevel.ALERT, 1],\n  [SeverityLevel.CRITICAL, 2],\n  [SeverityLevel.ERROR, 3],\n  [SeverityLevel.WARNING, 4],\n  [SeverityLevel.NOTICE, 5],\n  [SeverityLevel.INFORMATIONAL, 6],\n  [SeverityLevel.DEBUG, 7],\n  [SeverityLevel.TRACE, 8]\n]);\n\n/** @internal */\nexport const MongoLoggableComponent = Object.freeze({\n  COMMAND: 'command',\n  TOPOLOGY: 'topology',\n  SERVER_SELECTION: 'serverSelection',\n  CONNECTION: 'connection'\n} as const);\n\n/** @internal */\nexport type MongoLoggableComponent =\n  (typeof MongoLoggableComponent)[keyof typeof MongoLoggableComponent];\n\n/** @internal */\nexport interface MongoLoggerEnvOptions {\n  /** Severity level for command component */\n  MONGODB_LOG_COMMAND?: string;\n  /** Severity level for topology component */\n  MONGODB_LOG_TOPOLOGY?: string;\n  /** Severity level for server selection component */\n  MONGODB_LOG_SERVER_SELECTION?: string;\n  /** Severity level for CMAP */\n  MONGODB_LOG_CONNECTION?: string;\n  /** Default severity level to be if any of the above are unset */\n  MONGODB_LOG_ALL?: string;\n  /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */\n  MONGODB_LOG_MAX_DOCUMENT_LENGTH?: string;\n  /** Destination for log messages. Must be 'stderr', 'stdout'. Defaults to 'stderr'. */\n  MONGODB_LOG_PATH?: string;\n}\n\n/** @internal */\nexport interface MongoLoggerMongoClientOptions {\n  /** Destination for log messages */\n  mongodbLogPath?: 'stdout' | 'stderr' | MongoDBLogWritable;\n}\n\n/** @internal */\nexport interface MongoLoggerOptions {\n  componentSeverities: {\n    /** Severity level for command component */\n    command: SeverityLevel;\n    /** Severity level for topology component */\n    topology: SeverityLevel;\n    /** Severity level for server selection component */\n    serverSelection: SeverityLevel;\n    /** Severity level for connection component */\n    connection: SeverityLevel;\n    /** Default severity level to be used if any of the above are unset */\n    default: SeverityLevel;\n  };\n\n  /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */\n  maxDocumentLength: number;\n  /** Destination for log messages. */\n  logDestination: Writable | MongoDBLogWritable;\n}\n\n/**\n * Parses a string as one of SeverityLevel\n *\n * @param s - the value to be parsed\n * @returns one of SeverityLevel if value can be parsed as such, otherwise null\n */\nfunction parseSeverityFromString(s?: string): SeverityLevel | null {\n  const validSeverities: string[] = Object.values(SeverityLevel);\n  const lowerSeverity = s?.toLowerCase();\n\n  if (lowerSeverity != null && validSeverities.includes(lowerSeverity)) {\n    return lowerSeverity as SeverityLevel;\n  }\n\n  return null;\n}\n\n/** @internal */\nexport function createStdioLogger(stream: {\n  write: NodeJS.WriteStream['write'];\n}): MongoDBLogWritable {\n  return {\n    write: (log: Log): unknown => {\n      stream.write(inspect(log, { compact: true, breakLength: Infinity }), 'utf-8');\n      return;\n    }\n  };\n}\n\n/**\n * resolves the MONGODB_LOG_PATH and mongodbLogPath options from the environment and the\n * mongo client options respectively. The mongodbLogPath can be either 'stdout', 'stderr', a NodeJS\n * Writable or an object which has a `write` method with the signature:\n * ```ts\n * write(log: Log): void\n * ```\n *\n * @returns the MongoDBLogWritable object to write logs to\n */\nfunction resolveLogPath(\n  { MONGODB_LOG_PATH }: MongoLoggerEnvOptions,\n  { mongodbLogPath }: { mongodbLogPath?: string | Writable | MongoDBLogWritable }\n): MongoDBLogWritable {\n  if (typeof mongodbLogPath === 'string' && /^stderr$/i.test(mongodbLogPath)) {\n    return createStdioLogger(process.stderr);\n  }\n  if (typeof mongodbLogPath === 'string' && /^stdout$/i.test(mongodbLogPath)) {\n    return createStdioLogger(process.stdout);\n  }\n\n  if (typeof mongodbLogPath === 'object' && typeof mongodbLogPath?.write === 'function') {\n    return mongodbLogPath;\n  }\n\n  if (MONGODB_LOG_PATH && /^stderr$/i.test(MONGODB_LOG_PATH)) {\n    return createStdioLogger(process.stderr);\n  }\n  if (MONGODB_LOG_PATH && /^stdout$/i.test(MONGODB_LOG_PATH)) {\n    return createStdioLogger(process.stdout);\n  }\n\n  return createStdioLogger(process.stderr);\n}\n\n/** @internal */\nexport interface Log extends Record<string, any> {\n  t: Date;\n  c: MongoLoggableComponent;\n  s: SeverityLevel;\n  message?: string;\n}\n\n/** @internal */\nexport interface MongoDBLogWritable {\n  write(log: Log): void;\n}\n\nfunction compareSeverity(s0: SeverityLevel, s1: SeverityLevel): 1 | 0 | -1 {\n  const s0Num = SEVERITY_LEVEL_MAP.getNumericSeverityLevel(s0);\n  const s1Num = SEVERITY_LEVEL_MAP.getNumericSeverityLevel(s1);\n\n  return s0Num < s1Num ? -1 : s0Num > s1Num ? 1 : 0;\n}\n\n/** @internal */\nexport type LoggableEvent =\n  | CommandStartedEvent\n  | CommandSucceededEvent\n  | CommandFailedEvent\n  | ConnectionPoolCreatedEvent\n  | ConnectionPoolReadyEvent\n  | ConnectionPoolClosedEvent\n  | ConnectionPoolClearedEvent\n  | ConnectionCreatedEvent\n  | ConnectionReadyEvent\n  | ConnectionClosedEvent\n  | ConnectionCheckedInEvent\n  | ConnectionCheckedOutEvent\n  | ConnectionCheckOutStartedEvent\n  | ConnectionCheckOutFailedEvent;\n\n/** @internal */\nexport interface LogConvertible extends Record<string, any> {\n  toLog(): Record<string, any>;\n}\n\n/** @internal */\nexport function stringifyWithMaxLen(value: any, maxDocumentLength: number): string {\n  const ejson = EJSON.stringify(value);\n\n  return maxDocumentLength !== 0 && ejson.length > maxDocumentLength\n    ? `${ejson.slice(0, maxDocumentLength)}...`\n    : ejson;\n}\n\n/** @internal */\nexport type Loggable = LoggableEvent | LogConvertible;\n\nfunction isLogConvertible(obj: Loggable): obj is LogConvertible {\n  const objAsLogConvertible = obj as LogConvertible;\n  // eslint-disable-next-line no-restricted-syntax\n  return objAsLogConvertible.toLog !== undefined && typeof objAsLogConvertible.toLog === 'function';\n}\n\nfunction attachCommandFields(\n  log: Record<string, any>,\n  commandEvent: CommandStartedEvent | CommandSucceededEvent | CommandFailedEvent\n) {\n  log.commandName = commandEvent.commandName;\n  log.requestId = commandEvent.requestId;\n  log.driverConnectionId = commandEvent?.connectionId;\n  const { host, port } = HostAddress.fromString(commandEvent.address).toHostPort();\n  log.serverHost = host;\n  log.serverPort = port;\n  if (commandEvent?.serviceId) {\n    log.serviceId = commandEvent.serviceId.toHexString();\n  }\n\n  return log;\n}\n\nfunction attachConnectionFields(\n  log: Record<string, any>,\n  connectionPoolEvent: ConnectionPoolMonitoringEvent\n) {\n  const { host, port } = HostAddress.fromString(connectionPoolEvent.address).toHostPort();\n  log.serverHost = host;\n  log.serverPort = port;\n\n  return log;\n}\n\nfunction defaultLogTransform(\n  logObject: LoggableEvent | Record<string, any>,\n  maxDocumentLength: number = DEFAULT_MAX_DOCUMENT_LENGTH\n): Omit<Log, 's' | 't' | 'c'> {\n  let log: Omit<Log, 's' | 't' | 'c'> = Object.create(null);\n\n  switch (logObject.name) {\n    case COMMAND_STARTED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command started';\n      log.command = stringifyWithMaxLen(logObject.command, maxDocumentLength);\n      log.databaseName = logObject.databaseName;\n      return log;\n    case COMMAND_SUCCEEDED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command succeeded';\n      log.durationMS = logObject.duration;\n      log.reply = stringifyWithMaxLen(logObject.reply, maxDocumentLength);\n      return log;\n    case COMMAND_FAILED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command failed';\n      log.durationMS = logObject.duration;\n      log.failure = logObject.failure;\n      return log;\n    case CONNECTION_POOL_CREATED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool created';\n      if (logObject.options) {\n        const { maxIdleTimeMS, minPoolSize, maxPoolSize, maxConnecting, waitQueueTimeoutMS } =\n          logObject.options;\n        log = {\n          ...log,\n          maxIdleTimeMS,\n          minPoolSize,\n          maxPoolSize,\n          maxConnecting,\n          waitQueueTimeoutMS\n        };\n      }\n      return log;\n    case CONNECTION_POOL_READY:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool ready';\n      return log;\n    case CONNECTION_POOL_CLEARED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool cleared';\n      if (logObject.serviceId?._bsontype === 'ObjectId') {\n        log.serviceId = logObject.serviceId.toHexString();\n      }\n      return log;\n    case CONNECTION_POOL_CLOSED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool closed';\n      return log;\n    case CONNECTION_CREATED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection created';\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    case CONNECTION_READY:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection ready';\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    case CONNECTION_CLOSED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection closed';\n      log.driverConnectionId = logObject.connectionId;\n      switch (logObject.reason) {\n        case 'stale':\n          log.reason = 'Connection became stale because the pool was cleared';\n          break;\n        case 'idle':\n          log.reason =\n            'Connection has been available but unused for longer than the configured max idle time';\n          break;\n        case 'error':\n          log.reason = 'An error occurred while using the connection';\n          if (logObject.error) {\n            log.error = logObject.error;\n          }\n          break;\n        case 'poolClosed':\n          log.reason = 'Connection pool was closed';\n          break;\n        default:\n          log.reason = `Unknown close reason: ${logObject.reason}`;\n      }\n      return log;\n    case CONNECTION_CHECK_OUT_STARTED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checkout started';\n      return log;\n    case CONNECTION_CHECK_OUT_FAILED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checkout failed';\n      switch (logObject.reason) {\n        case 'poolClosed':\n          log.reason = 'Connection pool was closed';\n          break;\n        case 'timeout':\n          log.reason = 'Wait queue timeout elapsed without a connection becoming available';\n          break;\n        case 'connectionError':\n          log.reason = 'An error occurred while trying to establish a new connection';\n          if (logObject.error) {\n            log.error = logObject.error;\n          }\n          break;\n        default:\n          log.reason = `Unknown close reason: ${logObject.reason}`;\n      }\n      return log;\n    case CONNECTION_CHECKED_OUT:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checked out';\n\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    case CONNECTION_CHECKED_IN:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checked in';\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    default:\n      for (const [key, value] of Object.entries(logObject)) {\n        if (value != null) log[key] = value;\n      }\n  }\n  return log;\n}\n\n/** @internal */\nexport class MongoLogger {\n  componentSeverities: Record<MongoLoggableComponent, SeverityLevel>;\n  maxDocumentLength: number;\n  logDestination: MongoDBLogWritable | Writable;\n\n  /**\n   * This method should be used when logging errors that do not have a public driver API for\n   * reporting errors.\n   */\n  error = this.log.bind(this, 'error');\n  /**\n   * This method should be used to log situations where undesirable application behaviour might\n   * occur. For example, failing to end sessions on `MongoClient.close`.\n   */\n  warn = this.log.bind(this, 'warn');\n  /**\n   * This method should be used to report high-level information about normal driver behaviour.\n   * For example, the creation of a `MongoClient`.\n   */\n  info = this.log.bind(this, 'info');\n  /**\n   * This method should be used to report information that would be helpful when debugging an\n   * application. For example, a command starting, succeeding or failing.\n   */\n  debug = this.log.bind(this, 'debug');\n  /**\n   * This method should be used to report fine-grained details related to logic flow. For example,\n   * entering and exiting a function body.\n   */\n  trace = this.log.bind(this, 'trace');\n\n  constructor(options: MongoLoggerOptions) {\n    this.componentSeverities = options.componentSeverities;\n    this.maxDocumentLength = options.maxDocumentLength;\n    this.logDestination = options.logDestination;\n  }\n\n  private log(\n    severity: SeverityLevel,\n    component: MongoLoggableComponent,\n    message: Loggable | string\n  ): void {\n    if (compareSeverity(severity, this.componentSeverities[component]) > 0) return;\n\n    let logMessage: Log = { t: new Date(), c: component, s: severity };\n    if (typeof message === 'string') {\n      logMessage.message = message;\n    } else if (typeof message === 'object') {\n      if (isLogConvertible(message)) {\n        logMessage = { ...logMessage, ...message.toLog() };\n      } else {\n        logMessage = { ...logMessage, ...defaultLogTransform(message, this.maxDocumentLength) };\n      }\n    }\n    this.logDestination.write(logMessage);\n  }\n\n  /**\n   * Merges options set through environment variables and the MongoClient, preferring environment\n   * variables when both are set, and substituting defaults for values not set. Options set in\n   * constructor take precedence over both environment variables and MongoClient options.\n   *\n   * @remarks\n   * When parsing component severity levels, invalid values are treated as unset and replaced with\n   * the default severity.\n   *\n   * @param envOptions - options set for the logger from the environment\n   * @param clientOptions - options set for the logger in the MongoClient options\n   * @returns a MongoLoggerOptions object to be used when instantiating a new MongoLogger\n   */\n  static resolveOptions(\n    envOptions: MongoLoggerEnvOptions,\n    clientOptions: MongoLoggerMongoClientOptions\n  ): MongoLoggerOptions {\n    // client options take precedence over env options\n    const combinedOptions = {\n      ...envOptions,\n      ...clientOptions,\n      mongodbLogPath: resolveLogPath(envOptions, clientOptions)\n    };\n    const defaultSeverity =\n      parseSeverityFromString(combinedOptions.MONGODB_LOG_ALL) ?? SeverityLevel.OFF;\n\n    return {\n      componentSeverities: {\n        command: parseSeverityFromString(combinedOptions.MONGODB_LOG_COMMAND) ?? defaultSeverity,\n        topology: parseSeverityFromString(combinedOptions.MONGODB_LOG_TOPOLOGY) ?? defaultSeverity,\n        serverSelection:\n          parseSeverityFromString(combinedOptions.MONGODB_LOG_SERVER_SELECTION) ?? defaultSeverity,\n        connection:\n          parseSeverityFromString(combinedOptions.MONGODB_LOG_CONNECTION) ?? defaultSeverity,\n        default: defaultSeverity\n      },\n      maxDocumentLength:\n        parseUnsignedInteger(combinedOptions.MONGODB_LOG_MAX_DOCUMENT_LENGTH) ?? 1000,\n      logDestination: combinedOptions.mongodbLogPath\n    };\n  }\n}\n", "import * as dns from 'dns';\nimport * as fs from 'fs';\nimport ConnectionString from 'mongodb-connection-string-url';\nimport { URLSearchParams } from 'url';\n\nimport type { Document } from './bson';\nimport { MongoCredentials } from './cmap/auth/mongo_credentials';\nimport { AUTH_MECHS_AUTH_SRC_EXTERNAL, AuthMechanism } from './cmap/auth/providers';\nimport { makeClientMetadata } from './cmap/handshake/client_metadata';\nimport { Compressor, type CompressorName } from './cmap/wire_protocol/compression';\nimport { Encrypter } from './encrypter';\nimport {\n  MongoAPIError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoParseError\n} from './error';\nimport {\n  MongoClient,\n  type MongoClientOptions,\n  type MongoOptions,\n  type PkFactory,\n  type ServerApi,\n  ServerApiVersion\n} from './mongo_client';\nimport {\n  MongoLogger,\n  type MongoLoggerEnvOptions,\n  type MongoLoggerMongoClientOptions\n} from './mongo_logger';\nimport { ReadConcern, type ReadConcernLevel } from './read_concern';\nimport { ReadPreference, type ReadPreferenceMode } from './read_preference';\nimport type { TagSet } from './sdam/server_description';\nimport {\n  DEFAULT_PK_FACTORY,\n  emitWarning,\n  emitWarningOnce,\n  HostAddress,\n  isRecord,\n  matchesParentDomain,\n  parseInteger,\n  setDifference\n} from './utils';\nimport { type W, WriteConcern } from './write_concern';\n\nconst VALID_TXT_RECORDS = ['authSource', 'replicaSet', 'loadBalanced'];\n\nconst LB_SINGLE_HOST_ERROR = 'loadBalanced option only supported with a single host in the URI';\nconst LB_REPLICA_SET_ERROR = 'loadBalanced option not supported with a replicaSet option';\nconst LB_DIRECT_CONNECTION_ERROR =\n  'loadBalanced option not supported when directConnection is provided';\n\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param uri - The connection string to parse\n * @param options - Optional user provided connection string options\n */\nexport async function resolveSRVRecord(options: MongoOptions): Promise<HostAddress[]> {\n  if (typeof options.srvHost !== 'string') {\n    throw new MongoAPIError('Option \"srvHost\" must not be empty');\n  }\n\n  if (options.srvHost.split('.').length < 3) {\n    // TODO(NODE-3484): Replace with MongoConnectionStringError\n    throw new MongoAPIError('URI must include hostname, domain name, and tld');\n  }\n\n  // Resolve the SRV record and use the result as the list of hosts to connect to.\n  const lookupAddress = options.srvHost;\n  const addresses = await dns.promises.resolveSrv(\n    `_${options.srvServiceName}._tcp.${lookupAddress}`\n  );\n\n  if (addresses.length === 0) {\n    throw new MongoAPIError('No addresses found at host');\n  }\n\n  for (const { name } of addresses) {\n    if (!matchesParentDomain(name, lookupAddress)) {\n      throw new MongoAPIError('Server record does not share hostname with parent URI');\n    }\n  }\n\n  const hostAddresses = addresses.map(r => HostAddress.fromString(`${r.name}:${r.port ?? 27017}`));\n\n  validateLoadBalancedOptions(hostAddresses, options, true);\n\n  // Resolve TXT record and add options from there if they exist.\n  let record;\n  try {\n    record = await dns.promises.resolveTxt(lookupAddress);\n  } catch (error) {\n    if (error.code !== 'ENODATA' && error.code !== 'ENOTFOUND') {\n      throw error;\n    }\n    return hostAddresses;\n  }\n\n  if (record.length > 1) {\n    throw new MongoParseError('Multiple text records not allowed');\n  }\n\n  const txtRecordOptions = new URLSearchParams(record[0].join(''));\n  const txtRecordOptionKeys = [...txtRecordOptions.keys()];\n  if (txtRecordOptionKeys.some(key => !VALID_TXT_RECORDS.includes(key))) {\n    throw new MongoParseError(`Text record may only set any of: ${VALID_TXT_RECORDS.join(', ')}`);\n  }\n\n  if (VALID_TXT_RECORDS.some(option => txtRecordOptions.get(option) === '')) {\n    throw new MongoParseError('Cannot have empty URI params in DNS TXT Record');\n  }\n\n  const source = txtRecordOptions.get('authSource') ?? undefined;\n  const replicaSet = txtRecordOptions.get('replicaSet') ?? undefined;\n  const loadBalanced = txtRecordOptions.get('loadBalanced') ?? undefined;\n\n  if (\n    !options.userSpecifiedAuthSource &&\n    source &&\n    options.credentials &&\n    !AUTH_MECHS_AUTH_SRC_EXTERNAL.has(options.credentials.mechanism)\n  ) {\n    options.credentials = MongoCredentials.merge(options.credentials, { source });\n  }\n\n  if (!options.userSpecifiedReplicaSet && replicaSet) {\n    options.replicaSet = replicaSet;\n  }\n\n  if (loadBalanced === 'true') {\n    options.loadBalanced = true;\n  }\n\n  if (options.replicaSet && options.srvMaxHosts > 0) {\n    throw new MongoParseError('Cannot combine replicaSet option with srvMaxHosts');\n  }\n\n  validateLoadBalancedOptions(hostAddresses, options, true);\n\n  return hostAddresses;\n}\n\n/**\n * Checks if TLS options are valid\n *\n * @param allOptions - All options provided by user or included in default options map\n * @throws MongoAPIError if TLS options are invalid\n */\nfunction checkTLSOptions(allOptions: CaseInsensitiveMap): void {\n  if (!allOptions) return;\n  const check = (a: string, b: string) => {\n    if (allOptions.has(a) && allOptions.has(b)) {\n      throw new MongoAPIError(`The '${a}' option cannot be used with the '${b}' option`);\n    }\n  };\n  check('tlsInsecure', 'tlsAllowInvalidCertificates');\n  check('tlsInsecure', 'tlsAllowInvalidHostnames');\n  check('tlsInsecure', 'tlsDisableCertificateRevocationCheck');\n  check('tlsInsecure', 'tlsDisableOCSPEndpointCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableCertificateRevocationCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableOCSPEndpointCheck');\n  check('tlsDisableCertificateRevocationCheck', 'tlsDisableOCSPEndpointCheck');\n}\n\nconst TRUTHS = new Set(['true', 't', '1', 'y', 'yes']);\nconst FALSEHOODS = new Set(['false', 'f', '0', 'n', 'no', '-1']);\nfunction getBoolean(name: string, value: unknown): boolean {\n  if (typeof value === 'boolean') return value;\n  const valueString = String(value).toLowerCase();\n  if (TRUTHS.has(valueString)) {\n    if (valueString !== 'true') {\n      emitWarningOnce(\n        `deprecated value for ${name} : ${valueString} - please update to ${name} : true instead`\n      );\n    }\n    return true;\n  }\n  if (FALSEHOODS.has(valueString)) {\n    if (valueString !== 'false') {\n      emitWarningOnce(\n        `deprecated value for ${name} : ${valueString} - please update to ${name} : false instead`\n      );\n    }\n    return false;\n  }\n  throw new MongoParseError(`Expected ${name} to be stringified boolean value, got: ${value}`);\n}\n\nfunction getIntFromOptions(name: string, value: unknown): number {\n  const parsedInt = parseInteger(value);\n  if (parsedInt != null) {\n    return parsedInt;\n  }\n  throw new MongoParseError(`Expected ${name} to be stringified int value, got: ${value}`);\n}\n\nfunction getUIntFromOptions(name: string, value: unknown): number {\n  const parsedValue = getIntFromOptions(name, value);\n  if (parsedValue < 0) {\n    throw new MongoParseError(`${name} can only be a positive int value, got: ${value}`);\n  }\n  return parsedValue;\n}\n\nfunction* entriesFromString(value: string): Generator<[string, string]> {\n  const keyValuePairs = value.split(',');\n  for (const keyValue of keyValuePairs) {\n    const [key, value] = keyValue.split(/:(.*)/);\n    if (value == null) {\n      throw new MongoParseError('Cannot have undefined values in key value pairs');\n    }\n\n    yield [key, value];\n  }\n}\n\nclass CaseInsensitiveMap<Value = any> extends Map<string, Value> {\n  constructor(entries: Array<[string, any]> = []) {\n    super(entries.map(([k, v]) => [k.toLowerCase(), v]));\n  }\n  override has(k: string) {\n    return super.has(k.toLowerCase());\n  }\n  override get(k: string) {\n    return super.get(k.toLowerCase());\n  }\n  override set(k: string, v: any) {\n    return super.set(k.toLowerCase(), v);\n  }\n  override delete(k: string): boolean {\n    return super.delete(k.toLowerCase());\n  }\n}\n\nexport function parseOptions(\n  uri: string,\n  mongoClient: MongoClient | MongoClientOptions | undefined = undefined,\n  options: MongoClientOptions = {}\n): MongoOptions {\n  if (mongoClient != null && !(mongoClient instanceof MongoClient)) {\n    options = mongoClient;\n    mongoClient = undefined;\n  }\n\n  // validate BSONOptions\n  if (options.useBigInt64 && typeof options.promoteLongs === 'boolean' && !options.promoteLongs) {\n    throw new MongoAPIError('Must request either bigint or Long for int64 deserialization');\n  }\n\n  if (options.useBigInt64 && typeof options.promoteValues === 'boolean' && !options.promoteValues) {\n    throw new MongoAPIError('Must request either bigint or Long for int64 deserialization');\n  }\n\n  const url = new ConnectionString(uri);\n  const { hosts, isSRV } = url;\n\n  const mongoOptions = Object.create(null);\n\n  // Feature flags\n  for (const flag of Object.getOwnPropertySymbols(options)) {\n    if (FEATURE_FLAGS.has(flag)) {\n      mongoOptions[flag] = options[flag];\n    }\n  }\n\n  mongoOptions.hosts = isSRV ? [] : hosts.map(HostAddress.fromString);\n\n  const urlOptions = new CaseInsensitiveMap<unknown[]>();\n\n  if (url.pathname !== '/' && url.pathname !== '') {\n    const dbName = decodeURIComponent(\n      url.pathname[0] === '/' ? url.pathname.slice(1) : url.pathname\n    );\n    if (dbName) {\n      urlOptions.set('dbName', [dbName]);\n    }\n  }\n\n  if (url.username !== '') {\n    const auth: Document = {\n      username: decodeURIComponent(url.username)\n    };\n\n    if (typeof url.password === 'string') {\n      auth.password = decodeURIComponent(url.password);\n    }\n\n    urlOptions.set('auth', [auth]);\n  }\n\n  for (const key of url.searchParams.keys()) {\n    const values = [...url.searchParams.getAll(key)];\n\n    if (values.includes('')) {\n      throw new MongoAPIError('URI cannot contain options with no value');\n    }\n\n    if (!urlOptions.has(key)) {\n      urlOptions.set(key, values);\n    }\n  }\n\n  const objectOptions = new CaseInsensitiveMap<unknown>(\n    Object.entries(options).filter(([, v]) => v != null)\n  );\n\n  // Validate options that can only be provided by one of uri or object\n\n  if (urlOptions.has('serverApi')) {\n    throw new MongoParseError(\n      'URI cannot contain `serverApi`, it can only be passed to the client'\n    );\n  }\n\n  const uriMechanismProperties = urlOptions.get('authMechanismProperties');\n  if (uriMechanismProperties) {\n    for (const property of uriMechanismProperties) {\n      if (/(^|,)ALLOWED_HOSTS:/.test(property as string)) {\n        throw new MongoParseError(\n          'Auth mechanism property ALLOWED_HOSTS is not allowed in the connection string.'\n        );\n      }\n    }\n  }\n\n  if (objectOptions.has('loadBalanced')) {\n    throw new MongoParseError('loadBalanced is only a valid option in the URI');\n  }\n\n  // All option collection\n\n  const allProvidedOptions = new CaseInsensitiveMap<unknown[]>();\n\n  const allProvidedKeys = new Set<string>([...urlOptions.keys(), ...objectOptions.keys()]);\n\n  for (const key of allProvidedKeys) {\n    const values = [];\n    const objectOptionValue = objectOptions.get(key);\n    if (objectOptionValue != null) {\n      values.push(objectOptionValue);\n    }\n\n    const urlValues = urlOptions.get(key) ?? [];\n    values.push(...urlValues);\n    allProvidedOptions.set(key, values);\n  }\n\n  if (\n    allProvidedOptions.has('tlsCertificateKeyFile') &&\n    !allProvidedOptions.has('tlsCertificateFile')\n  ) {\n    allProvidedOptions.set('tlsCertificateFile', allProvidedOptions.get('tlsCertificateKeyFile'));\n  }\n\n  if (allProvidedOptions.has('tls') || allProvidedOptions.has('ssl')) {\n    const tlsAndSslOpts = (allProvidedOptions.get('tls') || [])\n      .concat(allProvidedOptions.get('ssl') || [])\n      .map(getBoolean.bind(null, 'tls/ssl'));\n    if (new Set(tlsAndSslOpts).size !== 1) {\n      throw new MongoParseError('All values of tls/ssl must be the same.');\n    }\n  }\n\n  checkTLSOptions(allProvidedOptions);\n\n  const unsupportedOptions = setDifference(\n    allProvidedKeys,\n    Array.from(Object.keys(OPTIONS)).map(s => s.toLowerCase())\n  );\n  if (unsupportedOptions.size !== 0) {\n    const optionWord = unsupportedOptions.size > 1 ? 'options' : 'option';\n    const isOrAre = unsupportedOptions.size > 1 ? 'are' : 'is';\n    throw new MongoParseError(\n      `${optionWord} ${Array.from(unsupportedOptions).join(', ')} ${isOrAre} not supported`\n    );\n  }\n\n  // Option parsing and setting\n\n  for (const [key, descriptor] of Object.entries(OPTIONS)) {\n    const values = allProvidedOptions.get(key);\n    if (!values || values.length === 0) {\n      if (DEFAULT_OPTIONS.has(key)) {\n        setOption(mongoOptions, key, descriptor, [DEFAULT_OPTIONS.get(key)]);\n      }\n    } else {\n      const { deprecated } = descriptor;\n      if (deprecated) {\n        const deprecatedMsg = typeof deprecated === 'string' ? `: ${deprecated}` : '';\n        emitWarning(`${key} is a deprecated option${deprecatedMsg}`);\n      }\n\n      setOption(mongoOptions, key, descriptor, values);\n    }\n  }\n\n  if (mongoOptions.credentials) {\n    const isGssapi = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_GSSAPI;\n    const isX509 = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_X509;\n    const isAws = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_AWS;\n    const isOidc = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_OIDC;\n    if (\n      (isGssapi || isX509) &&\n      allProvidedOptions.has('authSource') &&\n      mongoOptions.credentials.source !== '$external'\n    ) {\n      // If authSource was explicitly given and its incorrect, we error\n      throw new MongoParseError(\n        `authMechanism ${mongoOptions.credentials.mechanism} requires an authSource of '$external'`\n      );\n    }\n\n    if (\n      !(isGssapi || isX509 || isAws || isOidc) &&\n      mongoOptions.dbName &&\n      !allProvidedOptions.has('authSource')\n    ) {\n      // inherit the dbName unless GSSAPI or X509, then silently ignore dbName\n      // and there was no specific authSource given\n      mongoOptions.credentials = MongoCredentials.merge(mongoOptions.credentials, {\n        source: mongoOptions.dbName\n      });\n    }\n\n    if (isAws && mongoOptions.credentials.username && !mongoOptions.credentials.password) {\n      throw new MongoMissingCredentialsError(\n        `When using ${mongoOptions.credentials.mechanism} password must be set when a username is specified`\n      );\n    }\n\n    mongoOptions.credentials.validate();\n\n    // Check if the only auth related option provided was authSource, if so we can remove credentials\n    if (\n      mongoOptions.credentials.password === '' &&\n      mongoOptions.credentials.username === '' &&\n      mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_DEFAULT &&\n      Object.keys(mongoOptions.credentials.mechanismProperties).length === 0\n    ) {\n      delete mongoOptions.credentials;\n    }\n  }\n\n  if (!mongoOptions.dbName) {\n    // dbName default is applied here because of the credential validation above\n    mongoOptions.dbName = 'test';\n  }\n\n  validateLoadBalancedOptions(hosts, mongoOptions, isSRV);\n\n  if (mongoClient && mongoOptions.autoEncryption) {\n    Encrypter.checkForMongoCrypt();\n    mongoOptions.encrypter = new Encrypter(mongoClient, uri, options);\n    mongoOptions.autoEncrypter = mongoOptions.encrypter.autoEncrypter;\n  }\n\n  // Potential SRV Overrides and SRV connection string validations\n\n  mongoOptions.userSpecifiedAuthSource =\n    objectOptions.has('authSource') || urlOptions.has('authSource');\n  mongoOptions.userSpecifiedReplicaSet =\n    objectOptions.has('replicaSet') || urlOptions.has('replicaSet');\n\n  if (isSRV) {\n    // SRV Record is resolved upon connecting\n    mongoOptions.srvHost = hosts[0];\n\n    if (mongoOptions.directConnection) {\n      throw new MongoAPIError('SRV URI does not support directConnection');\n    }\n\n    if (mongoOptions.srvMaxHosts > 0 && typeof mongoOptions.replicaSet === 'string') {\n      throw new MongoParseError('Cannot use srvMaxHosts option with replicaSet');\n    }\n\n    // SRV turns on TLS by default, but users can override and turn it off\n    const noUserSpecifiedTLS = !objectOptions.has('tls') && !urlOptions.has('tls');\n    const noUserSpecifiedSSL = !objectOptions.has('ssl') && !urlOptions.has('ssl');\n    if (noUserSpecifiedTLS && noUserSpecifiedSSL) {\n      mongoOptions.tls = true;\n    }\n  } else {\n    const userSpecifiedSrvOptions =\n      urlOptions.has('srvMaxHosts') ||\n      objectOptions.has('srvMaxHosts') ||\n      urlOptions.has('srvServiceName') ||\n      objectOptions.has('srvServiceName');\n\n    if (userSpecifiedSrvOptions) {\n      throw new MongoParseError(\n        'Cannot use srvMaxHosts or srvServiceName with a non-srv connection string'\n      );\n    }\n  }\n\n  if (mongoOptions.directConnection && mongoOptions.hosts.length !== 1) {\n    throw new MongoParseError('directConnection option requires exactly one host');\n  }\n\n  if (\n    !mongoOptions.proxyHost &&\n    (mongoOptions.proxyPort || mongoOptions.proxyUsername || mongoOptions.proxyPassword)\n  ) {\n    throw new MongoParseError('Must specify proxyHost if other proxy options are passed');\n  }\n\n  if (\n    (mongoOptions.proxyUsername && !mongoOptions.proxyPassword) ||\n    (!mongoOptions.proxyUsername && mongoOptions.proxyPassword)\n  ) {\n    throw new MongoParseError('Can only specify both of proxy username/password or neither');\n  }\n\n  const proxyOptions = ['proxyHost', 'proxyPort', 'proxyUsername', 'proxyPassword'].map(\n    key => urlOptions.get(key) ?? []\n  );\n\n  if (proxyOptions.some(options => options.length > 1)) {\n    throw new MongoParseError(\n      'Proxy options cannot be specified multiple times in the connection string'\n    );\n  }\n\n  const loggerFeatureFlag = Symbol.for('@@mdb.enableMongoLogger');\n  mongoOptions[loggerFeatureFlag] = mongoOptions[loggerFeatureFlag] ?? false;\n\n  let loggerEnvOptions: MongoLoggerEnvOptions = {};\n  let loggerClientOptions: MongoLoggerMongoClientOptions = {};\n  if (mongoOptions[loggerFeatureFlag]) {\n    loggerEnvOptions = {\n      MONGODB_LOG_COMMAND: process.env.MONGODB_LOG_COMMAND,\n      MONGODB_LOG_TOPOLOGY: process.env.MONGODB_LOG_TOPOLOGY,\n      MONGODB_LOG_SERVER_SELECTION: process.env.MONGODB_LOG_SERVER_SELECTION,\n      MONGODB_LOG_CONNECTION: process.env.MONGODB_LOG_CONNECTION,\n      MONGODB_LOG_ALL: process.env.MONGODB_LOG_ALL,\n      MONGODB_LOG_MAX_DOCUMENT_LENGTH: process.env.MONGODB_LOG_MAX_DOCUMENT_LENGTH,\n      MONGODB_LOG_PATH: process.env.MONGODB_LOG_PATH,\n      ...mongoOptions[Symbol.for('@@mdb.internalLoggerConfig')]\n    };\n    loggerClientOptions = {\n      mongodbLogPath: mongoOptions.mongodbLogPath\n    };\n  }\n  mongoOptions.mongoLoggerOptions = MongoLogger.resolveOptions(\n    loggerEnvOptions,\n    loggerClientOptions\n  );\n\n  mongoOptions.metadata = makeClientMetadata(mongoOptions);\n\n  return mongoOptions;\n}\n\n/**\n * #### Throws if LB mode is true:\n * - hosts contains more than one host\n * - there is a replicaSet name set\n * - directConnection is set\n * - if srvMaxHosts is used when an srv connection string is passed in\n *\n * @throws MongoParseError\n */\nfunction validateLoadBalancedOptions(\n  hosts: HostAddress[] | string[],\n  mongoOptions: MongoOptions,\n  isSrv: boolean\n): void {\n  if (mongoOptions.loadBalanced) {\n    if (hosts.length > 1) {\n      throw new MongoParseError(LB_SINGLE_HOST_ERROR);\n    }\n    if (mongoOptions.replicaSet) {\n      throw new MongoParseError(LB_REPLICA_SET_ERROR);\n    }\n    if (mongoOptions.directConnection) {\n      throw new MongoParseError(LB_DIRECT_CONNECTION_ERROR);\n    }\n\n    if (isSrv && mongoOptions.srvMaxHosts > 0) {\n      throw new MongoParseError('Cannot limit srv hosts with loadBalanced enabled');\n    }\n  }\n  return;\n}\n\nfunction setOption(\n  mongoOptions: any,\n  key: string,\n  descriptor: OptionDescriptor,\n  values: unknown[]\n) {\n  const { target, type, transform } = descriptor;\n  const name = target ?? key;\n\n  switch (type) {\n    case 'boolean':\n      mongoOptions[name] = getBoolean(name, values[0]);\n      break;\n    case 'int':\n      mongoOptions[name] = getIntFromOptions(name, values[0]);\n      break;\n    case 'uint':\n      mongoOptions[name] = getUIntFromOptions(name, values[0]);\n      break;\n    case 'string':\n      if (values[0] == null) {\n        break;\n      }\n      mongoOptions[name] = String(values[0]);\n      break;\n    case 'record':\n      if (!isRecord(values[0])) {\n        throw new MongoParseError(`${name} must be an object`);\n      }\n      mongoOptions[name] = values[0];\n      break;\n    case 'any':\n      mongoOptions[name] = values[0];\n      break;\n    default: {\n      if (!transform) {\n        throw new MongoParseError('Descriptors missing a type must define a transform');\n      }\n      const transformValue = transform({ name, options: mongoOptions, values });\n      mongoOptions[name] = transformValue;\n      break;\n    }\n  }\n}\n\ninterface OptionDescriptor {\n  target?: string;\n  type?: 'boolean' | 'int' | 'uint' | 'record' | 'string' | 'any';\n  default?: any;\n\n  deprecated?: boolean | string;\n  /**\n   * @param name - the original option name\n   * @param options - the options so far for resolution\n   * @param values - the possible values in precedence order\n   */\n  transform?: (args: { name: string; options: MongoOptions; values: unknown[] }) => unknown;\n}\n\nexport const OPTIONS = {\n  appName: {\n    type: 'string'\n  },\n  auth: {\n    target: 'credentials',\n    transform({ name, options, values: [value] }): MongoCredentials {\n      if (!isRecord(value, ['username', 'password'] as const)) {\n        throw new MongoParseError(\n          `${name} must be an object with 'username' and 'password' properties`\n        );\n      }\n      return MongoCredentials.merge(options.credentials, {\n        username: value.username,\n        password: value.password\n      });\n    }\n  },\n  authMechanism: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const mechanisms = Object.values(AuthMechanism);\n      const [mechanism] = mechanisms.filter(m => m.match(RegExp(String.raw`\\b${value}\\b`, 'i')));\n      if (!mechanism) {\n        throw new MongoParseError(`authMechanism one of ${mechanisms}, got ${value}`);\n      }\n      let source = options.credentials?.source;\n      if (\n        mechanism === AuthMechanism.MONGODB_PLAIN ||\n        AUTH_MECHS_AUTH_SRC_EXTERNAL.has(mechanism)\n      ) {\n        // some mechanisms have '$external' as the Auth Source\n        source = '$external';\n      }\n\n      let password = options.credentials?.password;\n      if (mechanism === AuthMechanism.MONGODB_X509 && password === '') {\n        password = undefined;\n      }\n      return MongoCredentials.merge(options.credentials, {\n        mechanism,\n        source,\n        password\n      });\n    }\n  },\n  authMechanismProperties: {\n    target: 'credentials',\n    transform({ options, values }): MongoCredentials {\n      // We can have a combination of options passed in the URI and options passed\n      // as an object to the MongoClient. So we must transform the string options\n      // as well as merge them together with a potentially provided object.\n      let mechanismProperties = Object.create(null);\n\n      for (const optionValue of values) {\n        if (typeof optionValue === 'string') {\n          for (const [key, value] of entriesFromString(optionValue)) {\n            try {\n              mechanismProperties[key] = getBoolean(key, value);\n            } catch {\n              mechanismProperties[key] = value;\n            }\n          }\n        } else {\n          if (!isRecord(optionValue)) {\n            throw new MongoParseError('AuthMechanismProperties must be an object');\n          }\n          mechanismProperties = { ...optionValue };\n        }\n      }\n      return MongoCredentials.merge(options.credentials, {\n        mechanismProperties\n      });\n    }\n  },\n  authSource: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const source = String(value);\n      return MongoCredentials.merge(options.credentials, { source });\n    }\n  },\n  autoEncryption: {\n    type: 'record'\n  },\n  bsonRegExp: {\n    type: 'boolean'\n  },\n  serverApi: {\n    target: 'serverApi',\n    transform({ values: [version] }): ServerApi {\n      const serverApiToValidate =\n        typeof version === 'string' ? ({ version } as ServerApi) : (version as ServerApi);\n      const versionToValidate = serverApiToValidate && serverApiToValidate.version;\n      if (!versionToValidate) {\n        throw new MongoParseError(\n          `Invalid \\`serverApi\\` property; must specify a version from the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      if (!Object.values(ServerApiVersion).some(v => v === versionToValidate)) {\n        throw new MongoParseError(\n          `Invalid server API version=${versionToValidate}; must be in the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      return serverApiToValidate;\n    }\n  },\n  checkKeys: {\n    type: 'boolean'\n  },\n  compressors: {\n    default: 'none',\n    target: 'compressors',\n    transform({ values }) {\n      const compressionList = new Set();\n      for (const compVal of values as (CompressorName[] | string)[]) {\n        const compValArray = typeof compVal === 'string' ? compVal.split(',') : compVal;\n        if (!Array.isArray(compValArray)) {\n          throw new MongoInvalidArgumentError(\n            'compressors must be an array or a comma-delimited list of strings'\n          );\n        }\n        for (const c of compValArray) {\n          if (Object.keys(Compressor).includes(String(c))) {\n            compressionList.add(String(c));\n          } else {\n            throw new MongoInvalidArgumentError(\n              `${c} is not a valid compression mechanism. Must be one of: ${Object.keys(\n                Compressor\n              )}.`\n            );\n          }\n        }\n      }\n      return [...compressionList];\n    }\n  },\n  connectTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  dbName: {\n    type: 'string'\n  },\n  directConnection: {\n    default: false,\n    type: 'boolean'\n  },\n  driverInfo: {\n    default: {},\n    type: 'record'\n  },\n  enableUtf8Validation: { type: 'boolean', default: true },\n  family: {\n    transform({ name, values: [value] }): 4 | 6 {\n      const transformValue = getIntFromOptions(name, value);\n      if (transformValue === 4 || transformValue === 6) {\n        return transformValue;\n      }\n      throw new MongoParseError(`Option 'family' must be 4 or 6 got ${transformValue}.`);\n    }\n  },\n  fieldsAsRaw: {\n    type: 'record'\n  },\n  forceServerObjectId: {\n    default: false,\n    type: 'boolean'\n  },\n  fsync: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          fsync: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from fsync=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  heartbeatFrequencyMS: {\n    default: 10000,\n    type: 'uint'\n  },\n  ignoreUndefined: {\n    type: 'boolean'\n  },\n  j: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  journal: {\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  },\n  keepAlive: {\n    default: true,\n    type: 'boolean',\n    deprecated: 'Will not be able to turn off in the future.'\n  },\n  keepAliveInitialDelay: {\n    default: 120000,\n    type: 'uint',\n    deprecated: 'Will not be configurable in the future.'\n  },\n  loadBalanced: {\n    default: false,\n    type: 'boolean'\n  },\n  localThresholdMS: {\n    default: 15,\n    type: 'uint'\n  },\n  maxConnecting: {\n    default: 2,\n    transform({ name, values: [value] }): number {\n      const maxConnecting = getUIntFromOptions(name, value);\n      if (maxConnecting === 0) {\n        throw new MongoInvalidArgumentError('maxConnecting must be > 0 if specified');\n      }\n      return maxConnecting;\n    }\n  },\n  maxIdleTimeMS: {\n    default: 0,\n    type: 'uint'\n  },\n  maxPoolSize: {\n    default: 100,\n    type: 'uint'\n  },\n  maxStalenessSeconds: {\n    target: 'readPreference',\n    transform({ name, options, values: [value] }) {\n      const maxStalenessSeconds = getUIntFromOptions(name, value);\n      if (options.readPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, maxStalenessSeconds }\n        });\n      } else {\n        return new ReadPreference('secondary', undefined, { maxStalenessSeconds });\n      }\n    }\n  },\n  minInternalBufferSize: {\n    type: 'uint'\n  },\n  minPoolSize: {\n    default: 0,\n    type: 'uint'\n  },\n  minHeartbeatFrequencyMS: {\n    default: 500,\n    type: 'uint'\n  },\n  monitorCommands: {\n    default: false,\n    type: 'boolean'\n  },\n  name: {\n    target: 'driverInfo',\n    transform({ values: [value], options }) {\n      return { ...options.driverInfo, name: String(value) };\n    }\n  } as OptionDescriptor,\n  noDelay: {\n    default: true,\n    type: 'boolean'\n  },\n  pkFactory: {\n    default: DEFAULT_PK_FACTORY,\n    transform({ values: [value] }): PkFactory {\n      if (isRecord(value, ['createPk'] as const) && typeof value.createPk === 'function') {\n        return value as PkFactory;\n      }\n      throw new MongoParseError(\n        `Option pkFactory must be an object with a createPk function, got ${value}`\n      );\n    }\n  },\n  promoteBuffers: {\n    type: 'boolean'\n  },\n  promoteLongs: {\n    type: 'boolean'\n  },\n  promoteValues: {\n    type: 'boolean'\n  },\n  useBigInt64: {\n    type: 'boolean'\n  },\n  proxyHost: {\n    type: 'string'\n  },\n  proxyPassword: {\n    type: 'string'\n  },\n  proxyPort: {\n    type: 'uint'\n  },\n  proxyUsername: {\n    type: 'string'\n  },\n  raw: {\n    default: false,\n    type: 'boolean'\n  },\n  readConcern: {\n    transform({ values: [value], options }) {\n      if (value instanceof ReadConcern || isRecord(value, ['level'] as const)) {\n        return ReadConcern.fromOptions({ ...options.readConcern, ...value } as any);\n      }\n      throw new MongoParseError(`ReadConcern must be an object, got ${JSON.stringify(value)}`);\n    }\n  },\n  readConcernLevel: {\n    target: 'readConcern',\n    transform({ values: [level], options }) {\n      return ReadConcern.fromOptions({\n        ...options.readConcern,\n        level: level as ReadConcernLevel\n      });\n    }\n  },\n  readPreference: {\n    default: ReadPreference.primary,\n    transform({ values: [value], options }) {\n      if (value instanceof ReadPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n      }\n      if (isRecord(value, ['mode'] as const)) {\n        const rp = ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n        if (rp) return rp;\n        else throw new MongoParseError(`Cannot make read preference from ${JSON.stringify(value)}`);\n      }\n      if (typeof value === 'string') {\n        const rpOpts = {\n          hedge: options.readPreference?.hedge,\n          maxStalenessSeconds: options.readPreference?.maxStalenessSeconds\n        };\n        return new ReadPreference(\n          value as ReadPreferenceMode,\n          options.readPreference?.tags,\n          rpOpts\n        );\n      }\n      throw new MongoParseError(`Unknown ReadPreference value: ${value}`);\n    }\n  },\n  readPreferenceTags: {\n    target: 'readPreference',\n    transform({\n      values,\n      options\n    }: {\n      values: Array<string | Record<string, string>[]>;\n      options: MongoClientOptions;\n    }) {\n      const tags: Array<string | Record<string, string>> = Array.isArray(values[0])\n        ? values[0]\n        : (values as Array<string>);\n      const readPreferenceTags = [];\n      for (const tag of tags) {\n        const readPreferenceTag: TagSet = Object.create(null);\n        if (typeof tag === 'string') {\n          for (const [k, v] of entriesFromString(tag)) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        if (isRecord(tag)) {\n          for (const [k, v] of Object.entries(tag)) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        readPreferenceTags.push(readPreferenceTag);\n      }\n      return ReadPreference.fromOptions({\n        readPreference: options.readPreference,\n        readPreferenceTags\n      });\n    }\n  },\n  replicaSet: {\n    type: 'string'\n  },\n  retryReads: {\n    default: true,\n    type: 'boolean'\n  },\n  retryWrites: {\n    default: true,\n    type: 'boolean'\n  },\n  serializeFunctions: {\n    type: 'boolean'\n  },\n  serverSelectionTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  servername: {\n    type: 'string'\n  },\n  socketTimeoutMS: {\n    default: 0,\n    type: 'uint'\n  },\n  srvMaxHosts: {\n    type: 'uint',\n    default: 0\n  },\n  srvServiceName: {\n    type: 'string',\n    default: 'mongodb'\n  },\n  ssl: {\n    target: 'tls',\n    type: 'boolean'\n  },\n  sslCA: {\n    deprecated:\n      'sslCA is deprecated and will be removed in the next major version. Please use tlsCAFile instead.',\n    target: 'ca',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslCRL: {\n    deprecated:\n      'sslCRL is deprecated and will be removed in the next major version. Please use tlsCertificateKeyFile instead.',\n    target: 'crl',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslCert: {\n    deprecated:\n      'sslCert is deprecated and will be removed in the next major version. Please use tlsCertificateKeyFile instead.',\n    target: 'cert',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslKey: {\n    deprecated:\n      'sslKey is deprecated and will be removed in the next major version. Please use tlsCertificateKeyFile instead.',\n    target: 'key',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslPass: {\n    deprecated:\n      'sslPass is deprecated and will be removed in the next major version. Please use tlsCertificateKeyFilePassword instead.',\n    target: 'passphrase',\n    type: 'string'\n  },\n  sslValidate: {\n    deprecated:\n      'sslValidate is deprecated and will be removed in the next major version. Please use tlsAllowInvalidCertificates instead.',\n    target: 'rejectUnauthorized',\n    type: 'boolean'\n  },\n  tls: {\n    type: 'boolean'\n  },\n  tlsAllowInvalidCertificates: {\n    target: 'rejectUnauthorized',\n    transform({ name, values: [value] }) {\n      // allowInvalidCertificates is the inverse of rejectUnauthorized\n      return !getBoolean(name, value);\n    }\n  },\n  tlsAllowInvalidHostnames: {\n    target: 'checkServerIdentity',\n    transform({ name, values: [value] }) {\n      // tlsAllowInvalidHostnames means setting the checkServerIdentity function to a noop\n      return getBoolean(name, value) ? () => undefined : undefined;\n    }\n  },\n  tlsCAFile: {\n    target: 'ca',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateFile: {\n    deprecated:\n      'tlsCertificateFile is deprecated and will be removed in the next major version. Please use tlsCertificateKeyFile instead.',\n    target: 'cert',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateKeyFile: {\n    target: 'key',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateKeyFilePassword: {\n    target: 'passphrase',\n    type: 'any'\n  },\n  tlsInsecure: {\n    transform({ name, options, values: [value] }) {\n      const tlsInsecure = getBoolean(name, value);\n      if (tlsInsecure) {\n        options.checkServerIdentity = () => undefined;\n        options.rejectUnauthorized = false;\n      } else {\n        options.checkServerIdentity = options.tlsAllowInvalidHostnames\n          ? () => undefined\n          : undefined;\n        options.rejectUnauthorized = options.tlsAllowInvalidCertificates ? false : true;\n      }\n      return tlsInsecure;\n    }\n  },\n  w: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      return WriteConcern.fromOptions({ writeConcern: { ...options.writeConcern, w: value as W } });\n    }\n  },\n  waitQueueTimeoutMS: {\n    default: 0,\n    type: 'uint'\n  },\n  writeConcern: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      if (isRecord(value) || value instanceof WriteConcern) {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            ...value\n          }\n        });\n      } else if (value === 'majority' || typeof value === 'number') {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            w: value\n          }\n        });\n      }\n\n      throw new MongoParseError(`Invalid WriteConcern cannot parse: ${JSON.stringify(value)}`);\n    }\n  },\n  wtimeout: {\n    deprecated: 'Please use wtimeoutMS instead',\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeout: getUIntFromOptions('wtimeout', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  } as OptionDescriptor,\n  wtimeoutMS: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeoutMS: getUIntFromOptions('wtimeoutMS', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  },\n  zlibCompressionLevel: {\n    default: 0,\n    type: 'int'\n  },\n  // Custom types for modifying core behavior\n  connectionType: { type: 'any' },\n  srvPoller: { type: 'any' },\n  // Accepted NodeJS Options\n  minDHSize: { type: 'any' },\n  pskCallback: { type: 'any' },\n  secureContext: { type: 'any' },\n  enableTrace: { type: 'any' },\n  requestCert: { type: 'any' },\n  rejectUnauthorized: { type: 'any' },\n  checkServerIdentity: { type: 'any' },\n  ALPNProtocols: { type: 'any' },\n  SNICallback: { type: 'any' },\n  session: { type: 'any' },\n  requestOCSP: { type: 'any' },\n  localAddress: { type: 'any' },\n  localPort: { type: 'any' },\n  hints: { type: 'any' },\n  lookup: { type: 'any' },\n  ca: { type: 'any' },\n  cert: { type: 'any' },\n  ciphers: { type: 'any' },\n  crl: { type: 'any' },\n  ecdhCurve: { type: 'any' },\n  key: { type: 'any' },\n  passphrase: { type: 'any' },\n  pfx: { type: 'any' },\n  secureProtocol: { type: 'any' },\n  index: { type: 'any' },\n  // Legacy Options, these are unused but left here to avoid errors with CSFLE lib\n  useNewUrlParser: { type: 'boolean' } as OptionDescriptor,\n  useUnifiedTopology: { type: 'boolean' } as OptionDescriptor,\n  // MongoLogger\n  // TODO(NODE-4849): Tighten the type of mongodbLogPath\n  mongodbLogPath: { type: 'any' }\n} as Record<keyof MongoClientOptions, OptionDescriptor>;\n\nexport const DEFAULT_OPTIONS = new CaseInsensitiveMap(\n  Object.entries(OPTIONS)\n    .filter(([, descriptor]) => descriptor.default != null)\n    .map(([k, d]) => [k, d.default])\n);\n\n/**\n * Set of permitted feature flags\n * @internal\n */\nexport const FEATURE_FLAGS = new Set([\n  Symbol.for('@@mdb.skipPingOnConnect'),\n  Symbol.for('@@mdb.enableMongoLogger'),\n  Symbol.for('@@mdb.internalLoggerConfig')\n]);\n", "import type { Document } from '../bson';\nimport type { ServerDescription } from './server_description';\nimport type { TopologyDescription } from './topology_description';\n\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nexport class ServerDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n  /** The previous server description */\n  previousDescription: ServerDescription;\n  /** The new server description */\n  newDescription: ServerDescription;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    address: string,\n    previousDescription: ServerDescription,\n    newDescription: ServerDescription\n  ) {\n    this.topologyId = topologyId;\n    this.address = address;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nexport class ServerOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nexport class ServerClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nexport class TopologyDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The old topology description */\n  previousDescription: TopologyDescription;\n  /** The new topology description */\n  newDescription: TopologyDescription;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    previousDescription: TopologyDescription,\n    newDescription: TopologyDescription\n  ) {\n    this.topologyId = topologyId;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nexport class TopologyOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nexport class TopologyClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello command is started - immediately before\n * the hello command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nexport class ServerHeartbeatStartedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n\n  /** @internal */\n  constructor(connectionId: string) {\n    this.connectionId = connectionId;\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello succeeds.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatSucceededEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command reply */\n  reply: Document;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, reply: Document | null) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.reply = reply ?? {};\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello fails, either with an \u201Cok: 0\u201D or a socket exception.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatFailedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command failure */\n  failure: Error;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, failure: Error) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.failure = failure;\n  }\n}\n", "import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport * as BSON from '../bson';\nimport { MongoInvalidArgumentError, MongoRuntimeError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { databaseNamespace } from '../utils';\nimport type { CommandOptions } from './connection';\nimport { OP_MSG, OP_QUERY } from './wire_protocol/constants';\n\n// Incrementing request id\nlet _requestId = 0;\n\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SECONDARY = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n\n/** @internal */\nexport type WriteProtocolMessageType = Query | Msg;\n\n/** @internal */\nexport interface OpQueryOptions extends CommandOptions {\n  socketTimeoutMS?: number;\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  numberToSkip?: number;\n  numberToReturn?: number;\n  returnFieldSelector?: Document;\n  pre32Limit?: number;\n  serializeFunctions?: boolean;\n  ignoreUndefined?: boolean;\n  maxBsonSize?: number;\n  checkKeys?: boolean;\n  secondaryOk?: boolean;\n\n  requestId?: number;\n  moreToCome?: boolean;\n  exhaustAllowed?: boolean;\n  readPreference?: ReadPreference;\n}\n\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nexport class Query {\n  ns: string;\n  query: Document;\n  numberToSkip: number;\n  numberToReturn: number;\n  returnFieldSelector?: Document;\n  requestId: number;\n  pre32Limit?: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  maxBsonSize: number;\n  checkKeys: boolean;\n  batchSize: number;\n  tailable: boolean;\n  secondaryOk: boolean;\n  oplogReplay: boolean;\n  noCursorTimeout: boolean;\n  awaitData: boolean;\n  exhaust: boolean;\n  partial: boolean;\n  documentsReturnedIn?: string;\n\n  constructor(ns: string, query: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new MongoRuntimeError('Namespace must be specified for query');\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (query == null) throw new MongoRuntimeError('A query document must be specified for query');\n\n    // Validate that we are not passing 0x00 in the collection name\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new MongoRuntimeError('Namespace cannot contain a null character');\n    }\n\n    // Basic options\n    this.ns = ns;\n    this.query = query;\n\n    // Additional options\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId();\n\n    // special case for pre-3.2 find commands, delete ASAP\n    this.pre32Limit = options.pre32Limit;\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn;\n\n    // Flags\n    this.tailable = false;\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n\n  /** Assign next request Id. */\n  incRequestId(): void {\n    this.requestId = _requestId++;\n  }\n\n  /** Peek next request Id. */\n  nextRequestId(): number {\n    return _requestId + 1;\n  }\n\n  /** Increment then return next request Id. */\n  static getRequestId(): number {\n    return ++_requestId;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Uint8Array[] {\n    const buffers = [];\n    let projection = null;\n\n    // Set up the flags\n    let flags = 0;\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.secondaryOk) {\n      flags |= OPTS_SECONDARY;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    }\n\n    // If batchSize is different to this.numberToReturn\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\n\n    // Allocate write protocol header buffer\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 + // Flags\n        Buffer.byteLength(this.ns) +\n        1 + // namespace\n        4 + // numberToSkip\n        4 // numberToReturn\n    );\n\n    // Add header to buffers\n    buffers.push(header);\n\n    // Serialize the query\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n\n    // Add query document\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n      // Add projection document\n      buffers.push(projection);\n    }\n\n    // Total message size\n    const totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n    // Set up the index\n    let index = 4;\n\n    // Write total document length\n    header[3] = (totalLength >> 24) & 0xff;\n    header[2] = (totalLength >> 16) & 0xff;\n    header[1] = (totalLength >> 8) & 0xff;\n    header[0] = totalLength & 0xff;\n\n    // Write header information requestId\n    header[index + 3] = (this.requestId >> 24) & 0xff;\n    header[index + 2] = (this.requestId >> 16) & 0xff;\n    header[index + 1] = (this.requestId >> 8) & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // Write header information responseTo\n    header[index + 3] = (0 >> 24) & 0xff;\n    header[index + 2] = (0 >> 16) & 0xff;\n    header[index + 1] = (0 >> 8) & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write header information OP_QUERY\n    header[index + 3] = (OP_QUERY >> 24) & 0xff;\n    header[index + 2] = (OP_QUERY >> 16) & 0xff;\n    header[index + 1] = (OP_QUERY >> 8) & 0xff;\n    header[index] = OP_QUERY & 0xff;\n    index = index + 4;\n\n    // Write header information flags\n    header[index + 3] = (flags >> 24) & 0xff;\n    header[index + 2] = (flags >> 16) & 0xff;\n    header[index + 1] = (flags >> 8) & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4;\n\n    // Write collection name\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0;\n\n    // Write header information flags numberToSkip\n    header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n    header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n    header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4;\n\n    // Write header information flags numberToReturn\n    header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n    header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n    header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4;\n\n    // Return the buffers\n    return buffers;\n  }\n}\n\n/** @internal */\nexport interface MessageHeader {\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n}\n\n/** @internal */\nexport interface OpResponseOptions extends BSONSerializeOptions {\n  documentsReturnedIn?: string | null;\n}\n\n/** @internal */\nexport class Response {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags?: number;\n  cursorId?: Long;\n  startingFrom?: number;\n  numberReturned?: number;\n  documents: (Document | Buffer)[] = new Array(0);\n  cursorNotFound?: boolean;\n  queryFailure?: boolean;\n  shardConfigStale?: boolean;\n  awaitCapable?: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp?: boolean;\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Flag values\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n    let bsonSize;\n\n    // Set up the options\n    const _options: BSONSerializeOptions = {\n      useBigInt64,\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    // Position within OP_REPLY at which documents start\n    // (See https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n    this.index = 20;\n\n    // Read the message body\n    this.responseFlags = this.data.readInt32LE(0);\n    this.cursorId = new BSON.Long(this.data.readInt32LE(4), this.data.readInt32LE(8));\n    this.startingFrom = this.data.readInt32LE(12);\n    this.numberReturned = this.data.readInt32LE(16);\n\n    // Preallocate document array\n    this.documents = new Array(this.numberReturned);\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n\n    // Parse Body\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize =\n        this.data[this.index] |\n        (this.data[this.index + 1] << 8) |\n        (this.data[this.index + 2] << 16) |\n        (this.data[this.index + 3] << 24);\n\n      // If we have raw results specified slice the return document\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(\n          this.data.slice(this.index, this.index + bsonSize),\n          _options\n        );\n      }\n\n      // Adjust the index\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n\n      const doc = BSON.deserialize(this.documents[0] as Buffer, _options);\n      this.documents = [doc];\n    }\n\n    // Set parsed\n    this.parsed = true;\n  }\n}\n\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n\n/** @internal */\nexport interface OpMsgOptions {\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  readPreference: ReadPreference;\n}\n\n/** @internal */\nexport class Msg {\n  ns: string;\n  command: Document;\n  options: OpQueryOptions;\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n\n  constructor(ns: string, command: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    if (command == null)\n      throw new MongoInvalidArgumentError('Query document must be specified for query');\n\n    // Basic options\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    }\n\n    // Ensure empty options\n    this.options = options ?? {};\n\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed =\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin(): Buffer[] {\n    const buffers: Buffer[] = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 // Flags\n    );\n\n    buffers.push(header);\n\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n\n    header.writeInt32LE(totalLength, 0); // messageLength\n    header.writeInt32LE(this.requestId, 4); // requestID\n    header.writeInt32LE(0, 8); // responseTo\n    header.writeInt32LE(OP_MSG, 12); // opCode\n    header.writeUInt32LE(flags, 16); // flags\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers: Uint8Array[], document: Document): number {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document: Document): Uint8Array {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId(): number {\n    _requestId = (_requestId + 1) & 0x7fffffff;\n    return _requestId;\n  }\n}\n\n/** @internal */\nexport class BinMsg {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp: boolean;\n  documents: (Document | Buffer)[];\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n\n    this.documents = [];\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    this.index = 4;\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n    const validation = this.parseBsonSerializationOptions(options);\n\n    // Set up the options\n    const bsonOptions: BSONSerializeOptions = {\n      useBigInt64,\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp,\n      validation\n      // Due to the strictness of the BSON libraries validation option we need this cast\n    } as BSONSerializeOptions & { validation: { utf8: { writeErrors: boolean } } };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      bsonOptions.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0] as Buffer, bsonOptions);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n\n  parseBsonSerializationOptions({ enableUtf8Validation }: BSONSerializeOptions): {\n    utf8: { writeErrors: false } | false;\n  } {\n    if (enableUtf8Validation === false) {\n      return { utf8: false };\n    }\n\n    return { utf8: { writeErrors: false } };\n  }\n}\n", "import type { Document, ObjectId } from '../bson';\nimport {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  LEGACY_HELLO_COMMAND,\n  LEGACY_HELLO_COMMAND_CAMEL_CASE\n} from '../constants';\nimport { calculateDurationInMs, deepCopy } from '../utils';\nimport { Msg, type WriteProtocolMessageType } from './commands';\nimport type { Connection } from './connection';\n\n/**\n * An event indicating the start of a given\n * @public\n * @category Event\n */\nexport class CommandStartedEvent {\n  commandObj?: Document;\n  requestId: number;\n  databaseName: string;\n  commandName: string;\n  command: Document;\n  address: string;\n  connectionId?: string | number;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_STARTED;\n\n  /**\n   * Create a started event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   */\n  constructor(connection: Connection, command: WriteProtocolMessageType) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    // TODO: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.databaseName = databaseName(command);\n    this.commandName = commandName;\n    this.command = maybeRedact(commandName, cmd, cmd);\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the success of a given command\n * @public\n * @category Event\n */\nexport class CommandSucceededEvent {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  reply: unknown;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_SUCCEEDED;\n\n  /**\n   * Create a succeeded event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param reply - the reply for this command from the server\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    reply: Document | undefined,\n    started: number\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.reply = maybeRedact(commandName, cmd, extractReply(command, reply));\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the failure of a given command\n * @public\n * @category Event\n */\nexport class CommandFailedEvent {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  failure: Error;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_FAILED;\n\n  /**\n   * Create a failure event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param error - the generated error or a server error response\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    error: Error | Document,\n    started: number\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.failure = maybeRedact(commandName, cmd, error) as Error;\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * Commands that we want to redact because of the sensitive nature of their contents\n * @internal\n */\nexport const SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\nconst HELLO_COMMANDS = new Set(['hello', LEGACY_HELLO_COMMAND, LEGACY_HELLO_COMMAND_CAMEL_CASE]);\n\n// helper methods\nconst extractCommandName = (commandDoc: Document) => Object.keys(commandDoc)[0];\nconst namespace = (command: WriteProtocolMessageType) => command.ns;\nconst databaseName = (command: WriteProtocolMessageType) => command.ns.split('.')[0];\nconst collectionName = (command: WriteProtocolMessageType) => command.ns.split('.')[1];\nconst maybeRedact = (commandName: string, commandDoc: Document, result: Error | Document) =>\n  SENSITIVE_COMMANDS.has(commandName) ||\n  (HELLO_COMMANDS.has(commandName) && commandDoc.speculativeAuthenticate)\n    ? {}\n    : result;\n\nconst LEGACY_FIND_QUERY_MAP: { [key: string]: string } = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldSelector: 'projection'\n} as const;\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n] as const;\n\n/** Extract the actual command from the query, possibly up-converting if it's a legacy format */\nfunction extractCommand(command: WriteProtocolMessageType): Document {\n  if (command instanceof Msg) {\n    return deepCopy(command.command);\n  }\n\n  if (command.query?.$query) {\n    let result: Document;\n    if (command.ns === 'admin.$cmd') {\n      // up-convert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // up-convert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (command.query[key] != null) {\n          result[LEGACY_FIND_QUERY_MAP[key]] = deepCopy(command.query[key]);\n        }\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      const legacyKey = key as keyof typeof LEGACY_FIND_OPTIONS_MAP;\n      if (command[legacyKey] != null) {\n        result[LEGACY_FIND_OPTIONS_MAP[legacyKey]] = deepCopy(command[legacyKey]);\n      }\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      if (command[key]) {\n        result[key] = command[key];\n      }\n    });\n\n    if (command.pre32Limit != null) {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n    return result;\n  }\n\n  const clonedQuery: Record<string, unknown> = {};\n  const clonedCommand: Record<string, unknown> = {};\n  if (command.query) {\n    for (const k in command.query) {\n      clonedQuery[k] = deepCopy(command.query[k]);\n    }\n    clonedCommand.query = clonedQuery;\n  }\n\n  for (const k in command) {\n    if (k === 'query') continue;\n    clonedCommand[k] = deepCopy((command as unknown as Record<string, unknown>)[k]);\n  }\n  return command.query ? clonedQuery : clonedCommand;\n}\n\nfunction extractReply(command: WriteProtocolMessageType, reply?: Document) {\n  if (!reply) {\n    return reply;\n  }\n\n  if (command instanceof Msg) {\n    return deepCopy(reply.result ? reply.result : reply);\n  }\n\n  // is this a legacy find command?\n  if (command.query && command.query.$query != null) {\n    return {\n      ok: 1,\n      cursor: {\n        id: deepCopy(reply.cursorId),\n        ns: namespace(command),\n        firstBatch: deepCopy(reply.documents)\n      }\n    };\n  }\n\n  return deepCopy(reply.result ? reply.result : reply);\n}\n\nfunction extractConnectionDetails(connection: Connection) {\n  let connectionId;\n  if ('id' in connection) {\n    connectionId = connection.id;\n  }\n  return {\n    address: connection.address,\n    serviceId: connection.serviceId,\n    connectionId\n  };\n}\n", "import { Duplex, type DuplexOptions } from 'stream';\n\nimport type { BSONSerializeOptions, Document } from '../bson';\nimport { MongoDecompressionError, MongoParseError } from '../error';\nimport type { ClientSession } from '../sessions';\nimport { BufferPool, type Callback } from '../utils';\nimport {\n  BinMsg,\n  type MessageHeader,\n  Msg,\n  Response,\n  type WriteProtocolMessageType\n} from './commands';\nimport {\n  compress,\n  Compressor,\n  type CompressorName,\n  decompress,\n  uncompressibleCommands\n} from './wire_protocol/compression';\nimport { OP_COMPRESSED, OP_MSG } from './wire_protocol/constants';\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\nconst kDefaultMaxBsonMessageSize = 1024 * 1024 * 16 * 4;\n/** @internal */\nconst kBuffer = Symbol('buffer');\n\n/** @internal */\nexport interface MessageStreamOptions extends DuplexOptions {\n  maxBsonMessageSize?: number;\n}\n\n/** @internal */\nexport interface OperationDescription extends BSONSerializeOptions {\n  started: number;\n  cb: Callback<Document>;\n  documentsReturnedIn?: string;\n  noResponse: boolean;\n  raw: boolean;\n  requestId: number;\n  session?: ClientSession;\n  agreedCompressor?: CompressorName;\n  zlibCompressionLevel?: number;\n  $clusterTime?: Document;\n}\n\n/**\n * A duplex stream that is capable of reading and writing raw wire protocol messages, with\n * support for optional compression\n * @internal\n */\nexport class MessageStream extends Duplex {\n  /** @internal */\n  maxBsonMessageSize: number;\n  /** @internal */\n  [kBuffer]: BufferPool;\n  /** @internal */\n  isMonitoringConnection = false;\n\n  constructor(options: MessageStreamOptions = {}) {\n    super(options);\n    this.maxBsonMessageSize = options.maxBsonMessageSize || kDefaultMaxBsonMessageSize;\n    this[kBuffer] = new BufferPool();\n  }\n\n  get buffer(): BufferPool {\n    return this[kBuffer];\n  }\n\n  override _write(chunk: Buffer, _: unknown, callback: Callback<Buffer>): void {\n    this[kBuffer].append(chunk);\n    processIncomingData(this, callback);\n  }\n\n  override _read(/* size */): void {\n    // NOTE: This implementation is empty because we explicitly push data to be read\n    //       when `writeMessage` is called.\n    return;\n  }\n\n  writeCommand(\n    command: WriteProtocolMessageType,\n    operationDescription: OperationDescription\n  ): void {\n    const agreedCompressor = operationDescription.agreedCompressor ?? 'none';\n    if (agreedCompressor === 'none' || !canCompress(command)) {\n      const data = command.toBin();\n      this.push(Array.isArray(data) ? Buffer.concat(data) : data);\n      return;\n    }\n    // otherwise, compress the message\n    const concatenatedOriginalCommandBuffer = Buffer.concat(command.toBin());\n    const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    const options = {\n      agreedCompressor,\n      zlibCompressionLevel: operationDescription.zlibCompressionLevel ?? 0\n    };\n    // Compress the message body\n    compress(options, messageToBeCompressed).then(\n      compressedMessage => {\n        // Create the msgHeader of OP_COMPRESSED\n        const msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n        msgHeader.writeInt32LE(\n          MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length,\n          0\n        ); // messageLength\n        msgHeader.writeInt32LE(command.requestId, 4); // requestID\n        msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n        msgHeader.writeInt32LE(OP_COMPRESSED, 12); // opCode\n\n        // Create the compression details of OP_COMPRESSED\n        const compressionDetails = Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n        compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n        compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n        compressionDetails.writeUInt8(Compressor[agreedCompressor], 8); // compressorID\n        this.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n      },\n      error => {\n        operationDescription.cb(error);\n      }\n    );\n  }\n}\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nfunction canCompress(command: WriteProtocolMessageType) {\n  const commandDoc = command instanceof Msg ? command.command : command.query;\n  const commandName = Object.keys(commandDoc)[0];\n  return !uncompressibleCommands.has(commandName);\n}\n\nfunction processIncomingData(stream: MessageStream, callback: Callback<Buffer>): void {\n  const buffer = stream[kBuffer];\n  const sizeOfMessage = buffer.getInt32();\n\n  if (sizeOfMessage == null) {\n    return callback();\n  }\n\n  if (sizeOfMessage < 0) {\n    return callback(new MongoParseError(`Invalid message size: ${sizeOfMessage}`));\n  }\n\n  if (sizeOfMessage > stream.maxBsonMessageSize) {\n    return callback(\n      new MongoParseError(\n        `Invalid message size: ${sizeOfMessage}, max allowed: ${stream.maxBsonMessageSize}`\n      )\n    );\n  }\n\n  if (sizeOfMessage > buffer.length) {\n    return callback();\n  }\n\n  const message = buffer.read(sizeOfMessage);\n  const messageHeader: MessageHeader = {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n\n  const monitorHasAnotherHello = () => {\n    if (stream.isMonitoringConnection) {\n      // Can we read the next message size?\n      const sizeOfMessage = buffer.getInt32();\n      if (sizeOfMessage != null && sizeOfMessage <= buffer.length) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  let ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n  if (messageHeader.opCode !== OP_COMPRESSED) {\n    const messageBody = message.subarray(MESSAGE_HEADER_SIZE);\n\n    // If we are a monitoring connection message stream and\n    // there is more in the buffer that can be read, skip processing since we\n    // want the last hello command response that is in the buffer.\n    if (monitorHasAnotherHello()) {\n      return processIncomingData(stream, callback);\n    }\n\n    stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n\n    if (buffer.length >= 4) {\n      return processIncomingData(stream, callback);\n    }\n    return callback();\n  }\n\n  messageHeader.fromCompressed = true;\n  messageHeader.opCode = message.readInt32LE(MESSAGE_HEADER_SIZE);\n  messageHeader.length = message.readInt32LE(MESSAGE_HEADER_SIZE + 4);\n  const compressorID = message[MESSAGE_HEADER_SIZE + 8];\n  const compressedBuffer = message.slice(MESSAGE_HEADER_SIZE + 9);\n\n  // recalculate based on wrapped opcode\n  ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n  decompress(compressorID, compressedBuffer).then(\n    messageBody => {\n      if (messageBody.length !== messageHeader.length) {\n        return callback(\n          new MongoDecompressionError('Message body and message header must be the same length')\n        );\n      }\n\n      // If we are a monitoring connection message stream and\n      // there is more in the buffer that can be read, skip processing since we\n      // want the last hello command response that is in the buffer.\n      if (monitorHasAnotherHello()) {\n        return processIncomingData(stream, callback);\n      }\n      stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n\n      if (buffer.length >= 4) {\n        return processIncomingData(stream, callback);\n      }\n      return callback();\n    },\n    error => {\n      return callback(error);\n    }\n  );\n}\n", "import type { Document } from '../bson';\nimport { ServerType } from '../sdam/common';\nimport { parseServerType } from '../sdam/server_description';\nimport type { CompressorName } from './wire_protocol/compression';\n\nconst RESPONSE_FIELDS = [\n  'minWireVersion',\n  'maxWireVersion',\n  'maxBsonObjectSize',\n  'maxMessageSizeBytes',\n  'maxWriteBatchSize',\n  'logicalSessionTimeoutMinutes'\n] as const;\n\n/** @public */\nexport interface StreamDescriptionOptions {\n  compressors?: CompressorName[];\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n}\n\n/** @public */\nexport class StreamDescription {\n  address: string;\n  type: string;\n  minWireVersion?: number;\n  maxWireVersion?: number;\n  maxBsonObjectSize: number;\n  maxMessageSizeBytes: number;\n  maxWriteBatchSize: number;\n  compressors: CompressorName[];\n  compressor?: CompressorName;\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n\n  __nodejs_mock_server__?: boolean;\n\n  zlibCompressionLevel?: number;\n\n  constructor(address: string, options?: StreamDescriptionOptions) {\n    this.address = address;\n    this.type = ServerType.Unknown;\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.logicalSessionTimeoutMinutes = options?.logicalSessionTimeoutMinutes;\n    this.loadBalanced = !!options?.loadBalanced;\n    this.compressors =\n      options && options.compressors && Array.isArray(options.compressors)\n        ? options.compressors\n        : [];\n  }\n\n  receiveResponse(response: Document | null): void {\n    if (response == null) {\n      return;\n    }\n    this.type = parseServerType(response);\n    for (const field of RESPONSE_FIELDS) {\n      if (response[field] != null) {\n        this[field] = response[field];\n      }\n\n      // testing case\n      if ('__nodejs_mock_server__' in response) {\n        this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n      }\n    }\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => response.compression?.includes(c))[0];\n    }\n  }\n}\n", "import { clearTimeout, setTimeout } from 'timers';\nimport { promisify } from 'util';\n\nimport type { BSONSerializeOptions, Document, ObjectId } from '../bson';\nimport {\n  CLOSE,\n  CLUSTER_TIME_RECEIVED,\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  MESSAGE,\n  PINNED,\n  UNPINNED\n} from '../constants';\nimport type { AutoEncrypter } from '../deps';\nimport {\n  MongoCompatibilityError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoWriteConcernError\n} from '../error';\nimport type { ServerApi, SupportedNodeConnectionOptions } from '../mongo_client';\nimport { type CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport { applySession, type ClientSession, updateSessionFromResponse } from '../sessions';\nimport {\n  calculateDurationInMs,\n  type Callback,\n  HostAddress,\n  maxWireVersion,\n  type MongoDBNamespace,\n  now,\n  uuidV4\n} from '../utils';\nimport type { WriteConcern } from '../write_concern';\nimport type { AuthContext } from './auth/auth_provider';\nimport type { MongoCredentials } from './auth/mongo_credentials';\nimport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './command_monitoring_events';\nimport { type BinMsg, Msg, Query, type Response, type WriteProtocolMessageType } from './commands';\nimport type { Stream } from './connect';\nimport type { ClientMetadata } from './handshake/client_metadata';\nimport { MessageStream, type OperationDescription } from './message_stream';\nimport { StreamDescription, type StreamDescriptionOptions } from './stream_description';\nimport { getReadPreference, isSharded } from './wire_protocol/shared';\n\n/** @internal */\nconst kStream = Symbol('stream');\n/** @internal */\nconst kQueue = Symbol('queue');\n/** @internal */\nconst kMessageStream = Symbol('messageStream');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kLastUseTime = Symbol('lastUseTime');\n/** @internal */\nconst kClusterTime = Symbol('clusterTime');\n/** @internal */\nconst kDescription = Symbol('description');\n/** @internal */\nconst kHello = Symbol('hello');\n/** @internal */\nconst kAutoEncrypter = Symbol('autoEncrypter');\n/** @internal */\nconst kDelayedTimeoutId = Symbol('delayedTimeoutId');\n\nconst INVALID_QUEUE_SIZE = 'Connection internal queue contains more than 1 operation description';\n\n/** @internal */\nexport interface CommandOptions extends BSONSerializeOptions {\n  secondaryOk?: boolean;\n  /** Specify read preference if command supports it */\n  readPreference?: ReadPreferenceLike;\n  monitoring?: boolean;\n  socketTimeoutMS?: number;\n  /** Session to use for the operation */\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  noResponse?: boolean;\n  omitReadPreference?: boolean;\n\n  // TODO(NODE-2802): Currently the CommandOptions take a property willRetryWrite which is a hint\n  // from executeOperation that the txnNum should be applied to this command.\n  // Applying a session to a command should happen as part of command construction,\n  // most likely in the CommandOperation#executeCommand method, where we have access to\n  // the details we need to determine if a txnNum should also be applied.\n  willRetryWrite?: boolean;\n\n  writeConcern?: WriteConcern;\n}\n\n/** @public */\nexport interface ProxyOptions {\n  proxyHost?: string;\n  proxyPort?: number;\n  proxyUsername?: string;\n  proxyPassword?: string;\n}\n\n/** @public */\nexport interface ConnectionOptions\n  extends SupportedNodeConnectionOptions,\n    StreamDescriptionOptions,\n    ProxyOptions {\n  // Internal creation info\n  id: number | '<monitor>';\n  generation: number;\n  hostAddress: HostAddress;\n  // Settings\n  autoEncrypter?: AutoEncrypter;\n  serverApi?: ServerApi;\n  monitorCommands: boolean;\n  /** @internal */\n  connectionType?: typeof Connection;\n  credentials?: MongoCredentials;\n  connectTimeoutMS?: number;\n  tls: boolean;\n  /** @deprecated - Will not be able to turn off in the future. */\n  keepAlive?: boolean;\n  /** @deprecated - Will not be configurable in the future. */\n  keepAliveInitialDelay?: number;\n  noDelay?: boolean;\n  socketTimeoutMS?: number;\n  cancellationToken?: CancellationToken;\n  metadata: ClientMetadata;\n}\n\n/** @internal */\nexport interface DestroyOptions {\n  /** Force the destruction. */\n  force: boolean;\n}\n\n/** @public */\nexport type ConnectionEvents = {\n  commandStarted(event: CommandStartedEvent): void;\n  commandSucceeded(event: CommandSucceededEvent): void;\n  commandFailed(event: CommandFailedEvent): void;\n  clusterTimeReceived(clusterTime: Document): void;\n  close(): void;\n  message(message: any): void;\n  pinned(pinType: string): void;\n  unpinned(pinType: string): void;\n};\n\n/** @internal */\nexport class Connection extends TypedEventEmitter<ConnectionEvents> {\n  id: number | '<monitor>';\n  address: string;\n  socketTimeoutMS: number;\n  monitorCommands: boolean;\n  /** Indicates that the connection (including underlying TCP socket) has been closed. */\n  closed: boolean;\n  lastHelloMS?: number;\n  serverApi?: ServerApi;\n  helloOk?: boolean;\n  commandAsync: (\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions | undefined\n  ) => Promise<Document>;\n  /** @internal */\n  authContext?: AuthContext;\n\n  /**@internal */\n  [kDelayedTimeoutId]: NodeJS.Timeout | null;\n  /** @internal */\n  [kDescription]: StreamDescription;\n  /** @internal */\n  [kGeneration]: number;\n  /** @internal */\n  [kLastUseTime]: number;\n  /** @internal */\n  [kQueue]: Map<number, OperationDescription>;\n  /** @internal */\n  [kMessageStream]: MessageStream;\n  /** @internal */\n  [kStream]: Stream;\n  /** @internal */\n  [kHello]: Document | null;\n  /** @internal */\n  [kClusterTime]: Document | null;\n\n  /** @event */\n  static readonly COMMAND_STARTED = COMMAND_STARTED;\n  /** @event */\n  static readonly COMMAND_SUCCEEDED = COMMAND_SUCCEEDED;\n  /** @event */\n  static readonly COMMAND_FAILED = COMMAND_FAILED;\n  /** @event */\n  static readonly CLUSTER_TIME_RECEIVED = CLUSTER_TIME_RECEIVED;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /** @event */\n  static readonly MESSAGE = MESSAGE;\n  /** @event */\n  static readonly PINNED = PINNED;\n  /** @event */\n  static readonly UNPINNED = UNPINNED;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super();\n\n    this.commandAsync = promisify(\n      (\n        ns: MongoDBNamespace,\n        cmd: Document,\n        options: CommandOptions | undefined,\n        callback: Callback\n      ) => this.command(ns, cmd, options, callback as any)\n    );\n\n    this.id = options.id;\n    this.address = streamIdentifier(stream, options);\n    this.socketTimeoutMS = options.socketTimeoutMS ?? 0;\n    this.monitorCommands = options.monitorCommands;\n    this.serverApi = options.serverApi;\n    this.closed = false;\n    this[kHello] = null;\n    this[kClusterTime] = null;\n\n    this[kDescription] = new StreamDescription(this.address, options);\n    this[kGeneration] = options.generation;\n    this[kLastUseTime] = now();\n\n    // setup parser stream and message handling\n    this[kQueue] = new Map();\n    this[kMessageStream] = new MessageStream({\n      ...options,\n      maxBsonMessageSize: this.hello?.maxBsonMessageSize\n    });\n    this[kStream] = stream;\n\n    this[kDelayedTimeoutId] = null;\n\n    this[kMessageStream].on('message', message => this.onMessage(message));\n    this[kMessageStream].on('error', error => this.onError(error));\n    this[kStream].on('close', () => this.onClose());\n    this[kStream].on('timeout', () => this.onTimeout());\n    this[kStream].on('error', () => {\n      /* ignore errors, listen to `close` instead */\n    });\n\n    // hook the message stream up to the passed in stream\n    this[kStream].pipe(this[kMessageStream]);\n    this[kMessageStream].pipe(this[kStream]);\n  }\n\n  get description(): StreamDescription {\n    return this[kDescription];\n  }\n\n  get hello(): Document | null {\n    return this[kHello];\n  }\n\n  // the `connect` method stores the result of the handshake hello on the connection\n  set hello(response: Document | null) {\n    this[kDescription].receiveResponse(response);\n    this[kDescription] = Object.freeze(this[kDescription]);\n\n    // TODO: remove this, and only use the `StreamDescription` in the future\n    this[kHello] = response;\n  }\n\n  // Set the whether the message stream is for a monitoring connection.\n  set isMonitoringConnection(value: boolean) {\n    this[kMessageStream].isMonitoringConnection = value;\n  }\n\n  get isMonitoringConnection(): boolean {\n    return this[kMessageStream].isMonitoringConnection;\n  }\n\n  get serviceId(): ObjectId | undefined {\n    return this.hello?.serviceId;\n  }\n\n  get loadBalanced(): boolean {\n    return this.description.loadBalanced;\n  }\n\n  get generation(): number {\n    return this[kGeneration] || 0;\n  }\n\n  set generation(generation: number) {\n    this[kGeneration] = generation;\n  }\n\n  get idleTime(): number {\n    return calculateDurationInMs(this[kLastUseTime]);\n  }\n\n  get clusterTime(): Document | null {\n    return this[kClusterTime];\n  }\n\n  get stream(): Stream {\n    return this[kStream];\n  }\n\n  markAvailable(): void {\n    this[kLastUseTime] = now();\n  }\n\n  onError(error: Error) {\n    this.cleanup(true, error);\n  }\n\n  onClose() {\n    const message = `connection ${this.id} to ${this.address} closed`;\n    this.cleanup(true, new MongoNetworkError(message));\n  }\n\n  onTimeout() {\n    this[kDelayedTimeoutId] = setTimeout(() => {\n      const message = `connection ${this.id} to ${this.address} timed out`;\n      const beforeHandshake = this.hello == null;\n      this.cleanup(true, new MongoNetworkTimeoutError(message, { beforeHandshake }));\n    }, 1).unref(); // No need for this timer to hold the event loop open\n  }\n\n  onMessage(message: BinMsg | Response) {\n    const delayedTimeoutId = this[kDelayedTimeoutId];\n    if (delayedTimeoutId != null) {\n      clearTimeout(delayedTimeoutId);\n      this[kDelayedTimeoutId] = null;\n    }\n\n    const socketTimeoutMS = this[kStream].timeout ?? 0;\n    this[kStream].setTimeout(0);\n\n    // always emit the message, in case we are streaming\n    this.emit('message', message);\n    let operationDescription = this[kQueue].get(message.responseTo);\n\n    if (!operationDescription && this.isMonitoringConnection) {\n      // This is how we recover when the initial hello's requestId is not\n      // the responseTo when hello responses have been skipped:\n\n      // First check if the map is of invalid size\n      if (this[kQueue].size > 1) {\n        this.cleanup(true, new MongoRuntimeError(INVALID_QUEUE_SIZE));\n      } else {\n        // Get the first orphaned operation description.\n        const entry = this[kQueue].entries().next();\n        if (entry.value != null) {\n          const [requestId, orphaned]: [number, OperationDescription] = entry.value;\n          // If the orphaned operation description exists then set it.\n          operationDescription = orphaned;\n          // Remove the entry with the bad request id from the queue.\n          this[kQueue].delete(requestId);\n        }\n      }\n    }\n\n    if (!operationDescription) {\n      return;\n    }\n\n    const callback = operationDescription.cb;\n\n    // SERVER-45775: For exhaust responses we should be able to use the same requestId to\n    // track response, however the server currently synthetically produces remote requests\n    // making the `responseTo` change on each response\n    this[kQueue].delete(message.responseTo);\n    if ('moreToCome' in message && message.moreToCome) {\n      // If the operation description check above does find an orphaned\n      // description and sets the operationDescription then this line will put one\n      // back in the queue with the correct requestId and will resolve not being able\n      // to find the next one via the responseTo of the next streaming hello.\n      this[kQueue].set(message.requestId, operationDescription);\n      this[kStream].setTimeout(socketTimeoutMS);\n    }\n\n    try {\n      // Pass in the entire description because it has BSON parsing options\n      message.parse(operationDescription);\n    } catch (err) {\n      // If this error is generated by our own code, it will already have the correct class applied\n      // if it is not, then it is coming from a catastrophic data parse failure or the BSON library\n      // in either case, it should not be wrapped\n      callback(err);\n      return;\n    }\n\n    if (message.documents[0]) {\n      const document: Document = message.documents[0];\n      const session = operationDescription.session;\n      if (session) {\n        updateSessionFromResponse(session, document);\n      }\n\n      if (document.$clusterTime) {\n        this[kClusterTime] = document.$clusterTime;\n        this.emit(Connection.CLUSTER_TIME_RECEIVED, document.$clusterTime);\n      }\n\n      if (document.writeConcernError) {\n        callback(new MongoWriteConcernError(document.writeConcernError, document), document);\n        return;\n      }\n\n      if (document.ok === 0 || document.$err || document.errmsg || document.code) {\n        callback(new MongoServerError(document));\n        return;\n      }\n    }\n\n    callback(undefined, message.documents[0]);\n  }\n\n  destroy(options: DestroyOptions, callback?: Callback): void {\n    if (this.closed) {\n      process.nextTick(() => callback?.());\n      return;\n    }\n    if (typeof callback === 'function') {\n      this.once('close', () => process.nextTick(() => callback()));\n    }\n\n    // load balanced mode requires that these listeners remain on the connection\n    // after cleanup on timeouts, errors or close so we remove them before calling\n    // cleanup.\n    this.removeAllListeners(Connection.PINNED);\n    this.removeAllListeners(Connection.UNPINNED);\n    const message = `connection ${this.id} to ${this.address} closed`;\n    this.cleanup(options.force, new MongoNetworkError(message));\n  }\n\n  /**\n   * A method that cleans up the connection.  When `force` is true, this method\n   * forcibly destroys the socket.\n   *\n   * If an error is provided, any in-flight operations will be closed with the error.\n   *\n   * This method does nothing if the connection is already closed.\n   */\n  private cleanup(force: boolean, error?: Error): void {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const completeCleanup = () => {\n      for (const op of this[kQueue].values()) {\n        op.cb(error);\n      }\n\n      this[kQueue].clear();\n\n      this.emit(Connection.CLOSE);\n    };\n\n    this[kStream].removeAllListeners();\n    this[kMessageStream].removeAllListeners();\n\n    this[kMessageStream].destroy();\n\n    if (force) {\n      this[kStream].destroy();\n      completeCleanup();\n      return;\n    }\n\n    if (!this[kStream].writableEnded) {\n      this[kStream].end(() => {\n        this[kStream].destroy();\n        completeCleanup();\n      });\n    } else {\n      completeCleanup();\n    }\n  }\n\n  command(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions | undefined,\n    callback: Callback\n  ): void {\n    let cmd = { ...command };\n\n    const readPreference = getReadPreference(options);\n    const shouldUseOpMsg = supportsOpMsg(this);\n    const session = options?.session;\n\n    let clusterTime = this.clusterTime;\n\n    if (this.serverApi) {\n      const { version, strict, deprecationErrors } = this.serverApi;\n      cmd.apiVersion = version;\n      if (strict != null) cmd.apiStrict = strict;\n      if (deprecationErrors != null) cmd.apiDeprecationErrors = deprecationErrors;\n    }\n\n    if (hasSessionSupport(this) && session) {\n      if (\n        session.clusterTime &&\n        clusterTime &&\n        session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n      ) {\n        clusterTime = session.clusterTime;\n      }\n\n      const err = applySession(session, cmd, options);\n      if (err) {\n        return callback(err);\n      }\n    } else if (session?.explicit) {\n      return callback(new MongoCompatibilityError('Current topology does not support sessions'));\n    }\n\n    // if we have a known cluster time, gossip it\n    if (clusterTime) {\n      cmd.$clusterTime = clusterTime;\n    }\n\n    if (isSharded(this) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n      cmd = {\n        $query: cmd,\n        $readPreference: readPreference.toJSON()\n      };\n    }\n\n    const commandOptions: Document = Object.assign(\n      {\n        numberToSkip: 0,\n        numberToReturn: -1,\n        checkKeys: false,\n        // This value is not overridable\n        secondaryOk: readPreference.secondaryOk()\n      },\n      options\n    );\n\n    const cmdNs = `${ns.db}.$cmd`;\n    const message = shouldUseOpMsg\n      ? new Msg(cmdNs, cmd, commandOptions)\n      : new Query(cmdNs, cmd, commandOptions);\n\n    try {\n      write(this, message, commandOptions, callback);\n    } catch (err) {\n      callback(err);\n    }\n  }\n}\n\n/** @internal */\nexport class CryptoConnection extends Connection {\n  /** @internal */\n  [kAutoEncrypter]?: AutoEncrypter;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super(stream, options);\n    this[kAutoEncrypter] = options.autoEncrypter;\n  }\n\n  /** @internal @override */\n  override command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions,\n    callback: Callback\n  ): void {\n    const autoEncrypter = this[kAutoEncrypter];\n    if (!autoEncrypter) {\n      return callback(new MongoMissingDependencyError('No AutoEncrypter available for encryption'));\n    }\n\n    const serverWireVersion = maxWireVersion(this);\n    if (serverWireVersion === 0) {\n      // This means the initial handshake hasn't happened yet\n      return super.command(ns, cmd, options, callback);\n    }\n\n    if (serverWireVersion < 8) {\n      callback(\n        new MongoCompatibilityError('Auto-encryption requires a minimum MongoDB version of 4.2')\n      );\n      return;\n    }\n\n    // Save sort or indexKeys based on the command being run\n    // the encrypt API serializes our JS objects to BSON to pass to the native code layer\n    // and then deserializes the encrypted result, the protocol level components\n    // of the command (ex. sort) are then converted to JS objects potentially losing\n    // import key order information. These fields are never encrypted so we can save the values\n    // from before the encryption and replace them after encryption has been performed\n    const sort: Map<string, number> | null = cmd.find || cmd.findAndModify ? cmd.sort : null;\n    const indexKeys: Map<string, number>[] | null = cmd.createIndexes\n      ? cmd.indexes.map((index: { key: Map<string, number> }) => index.key)\n      : null;\n\n    autoEncrypter.encrypt(ns.toString(), cmd, options, (err, encrypted) => {\n      if (err || encrypted == null) {\n        callback(err, null);\n        return;\n      }\n\n      // Replace the saved values\n      if (sort != null && (cmd.find || cmd.findAndModify)) {\n        encrypted.sort = sort;\n      }\n      if (indexKeys != null && cmd.createIndexes) {\n        for (const [offset, index] of indexKeys.entries()) {\n          encrypted.indexes[offset].key = index;\n        }\n      }\n\n      super.command(ns, encrypted, options, (err, response) => {\n        if (err || response == null) {\n          callback(err, response);\n          return;\n        }\n\n        autoEncrypter.decrypt(response, options, callback);\n      });\n    });\n  }\n}\n\n/** @internal */\nexport function hasSessionSupport(conn: Connection): boolean {\n  const description = conn.description;\n  return description.logicalSessionTimeoutMinutes != null;\n}\n\nfunction supportsOpMsg(conn: Connection) {\n  const description = conn.description;\n  if (description == null) {\n    return false;\n  }\n\n  return maxWireVersion(conn) >= 6 && !description.__nodejs_mock_server__;\n}\n\nfunction streamIdentifier(stream: Stream, options: ConnectionOptions): string {\n  if (options.proxyHost) {\n    // If proxy options are specified, the properties of `stream` itself\n    // will not accurately reflect what endpoint this is connected to.\n    return options.hostAddress.toString();\n  }\n\n  const { remoteAddress, remotePort } = stream;\n  if (typeof remoteAddress === 'string' && typeof remotePort === 'number') {\n    return HostAddress.fromHostPort(remoteAddress, remotePort).toString();\n  }\n\n  return uuidV4().toString('hex');\n}\n\nfunction write(\n  conn: Connection,\n  command: WriteProtocolMessageType,\n  options: CommandOptions,\n  callback: Callback\n) {\n  options = options ?? {};\n  const operationDescription: OperationDescription = {\n    requestId: command.requestId,\n    cb: callback,\n    session: options.session,\n    noResponse: typeof options.noResponse === 'boolean' ? options.noResponse : false,\n    documentsReturnedIn: options.documentsReturnedIn,\n\n    // for BSON parsing\n    useBigInt64: typeof options.useBigInt64 === 'boolean' ? options.useBigInt64 : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    bsonRegExp: typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : false,\n    enableUtf8Validation:\n      typeof options.enableUtf8Validation === 'boolean' ? options.enableUtf8Validation : true,\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    started: 0\n  };\n\n  if (conn[kDescription] && conn[kDescription].compressor) {\n    operationDescription.agreedCompressor = conn[kDescription].compressor;\n\n    if (conn[kDescription].zlibCompressionLevel) {\n      operationDescription.zlibCompressionLevel = conn[kDescription].zlibCompressionLevel;\n    }\n  }\n\n  if (typeof options.socketTimeoutMS === 'number') {\n    conn[kStream].setTimeout(options.socketTimeoutMS);\n  } else if (conn.socketTimeoutMS !== 0) {\n    conn[kStream].setTimeout(conn.socketTimeoutMS);\n  }\n\n  // if command monitoring is enabled we need to modify the callback here\n  if (conn.monitorCommands) {\n    conn.emit(Connection.COMMAND_STARTED, new CommandStartedEvent(conn, command));\n\n    operationDescription.started = now();\n    operationDescription.cb = (err, reply) => {\n      // Command monitoring spec states that if ok is 1, then we must always emit\n      // a command succeeded event, even if there's an error. Write concern errors\n      // will have an ok: 1 in their reply.\n      if (err && reply?.ok !== 1) {\n        conn.emit(\n          Connection.COMMAND_FAILED,\n          new CommandFailedEvent(conn, command, err, operationDescription.started)\n        );\n      } else {\n        if (reply && (reply.ok === 0 || reply.$err)) {\n          conn.emit(\n            Connection.COMMAND_FAILED,\n            new CommandFailedEvent(conn, command, reply, operationDescription.started)\n          );\n        } else {\n          conn.emit(\n            Connection.COMMAND_SUCCEEDED,\n            new CommandSucceededEvent(conn, command, reply, operationDescription.started)\n          );\n        }\n      }\n\n      if (typeof callback === 'function') {\n        // Since we're passing through the reply with the write concern error now, we\n        // need it not to be provided to the original callback in this case so\n        // retryability does not get tricked into thinking the command actually\n        // succeeded.\n        callback(err, err instanceof MongoWriteConcernError ? undefined : reply);\n      }\n    };\n  }\n\n  if (!operationDescription.noResponse) {\n    conn[kQueue].set(operationDescription.requestId, operationDescription);\n  }\n\n  try {\n    conn[kMessageStream].writeCommand(command, operationDescription);\n  } catch (e) {\n    if (!operationDescription.noResponse) {\n      conn[kQueue].delete(operationDescription.requestId);\n      operationDescription.cb(e);\n      return;\n    }\n  }\n\n  if (operationDescription.noResponse) {\n    operationDescription.cb();\n  }\n}\n", "const ip = exports;\nconst { Buffer } = require('buffer');\nconst os = require('os');\n\nip.toBuffer = function (ip, buff, offset) {\n  offset = ~~offset;\n\n  let result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || Buffer.alloc(offset + 4);\n    ip.split(/\\./g).map((byte) => {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    const sections = ip.split(':', 8);\n\n    let i;\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = this.isV4Format(sections[i]);\n      let v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv = [i, 1];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice(...argv);\n    }\n\n    result = buff || Buffer.alloc(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error(`Invalid ip address: ${ip}`);\n  }\n\n  return result;\n};\n\nip.toString = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  let result = [];\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nconst ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nconst ipv6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function (ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function (ip) {\n  return ipv6Regex.test(ip);\n};\n\nfunction _normalizeFamily(family) {\n  if (family === 4) {\n    return 'ipv4';\n  }\n  if (family === 6) {\n    return 'ipv6';\n  }\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function (prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  let len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  const buff = Buffer.alloc(len);\n\n  for (let i = 0, n = buff.length; i < n; ++i) {\n    let bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function (addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  const result = Buffer.alloc(Math.max(addr.length, mask.length));\n\n  // Same protocol - do bitwise and\n  let i;\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4 + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i += 12;\n  }\n  for (; i < result.length; i++) {\n    result[i] = 0;\n  }\n\n  return ip.toString(result);\n};\n\nip.cidr = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function (addr, mask) {\n  const networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  const maskBuffer = ip.toBuffer(mask);\n  let maskLength = 0;\n\n  for (let i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      let octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  const numberOfAddresses = 2 ** (32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress)\n      : ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress + numberOfAddresses - 1)\n      : ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2\n      ? numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    },\n  };\n};\n\nip.cidrSubnet = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function (addr) {\n  const buff = ip.toBuffer(addr);\n  for (let i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  }\n  let buff = a;\n  let other = b;\n  if (b.length > a.length) {\n    buff = b;\n    other = a;\n  }\n\n  const offset = buff.length - other.length;\n  for (let i = offset; i < buff.length; ++i) {\n    buff[i] |= other[i - offset];\n  }\n\n  return ip.toString(buff);\n};\n\nip.isEqual = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    const t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (let i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  const word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (let i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function (addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n    .test(addr)\n    || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr)\n    || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^f[cd][0-9a-f]{2}:/i.test(addr)\n    || /^fe80:/i.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.isPublic = function (addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function (addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n    .test(addr)\n    || /^fe80::1$/.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.loopback = function (family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function (name, family) {\n  const interfaces = os.networkInterfaces();\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    const res = interfaces[name].filter((details) => {\n      const itemFamily = _normalizeFamily(details.family);\n      return itemFamily === family;\n    });\n    if (res.length === 0) {\n      return undefined;\n    }\n    return res[0].address;\n  }\n\n  const all = Object.keys(interfaces).map((nic) => {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    const addresses = interfaces[nic].filter((details) => {\n      details.family = _normalizeFamily(details.family);\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address)\n        : ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function (ip) {\n  let ipl = 0;\n  ip.split('.').forEach((octet) => {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return (ipl >>> 0);\n};\n\nip.fromLong = function (ipl) {\n  return (`${ipl >>> 24}.${\n    ipl >> 16 & 255}.${\n    ipl >> 8 & 255}.${\n    ipl & 255}`);\n};\n", null, null, null, null, null, null, null, null, "import * as crypto from 'crypto';\n\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\nexport class MongoCR extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    const { username, password, source } = credentials;\n\n    const { nonce } = await connection.commandAsync(\n      ns(`${source}.$cmd`),\n      { getnonce: 1 },\n      undefined\n    );\n\n    const hashPassword = crypto\n      .createHash('md5')\n      .update(`${username}:mongo:${password}`, 'utf8')\n      .digest('hex');\n\n    // Final key\n    const key = crypto\n      .createHash('md5')\n      .update(`${nonce}${username}${hashPassword}`, 'utf8')\n      .digest('hex');\n\n    const authenticateCommand = {\n      authenticate: 1,\n      user: username,\n      nonce,\n      key\n    };\n\n    await connection.commandAsync(ns(`${source}.$cmd`), authenticateCommand, undefined);\n  }\n}\n", "import * as crypto from 'crypto';\nimport { promisify } from 'util';\n\nimport type { Binary, BSONSerializeOptions } from '../../bson';\nimport * as BSON from '../../bson';\nimport { aws4, getAwsCredentialProvider } from '../../deps';\nimport {\n  MongoAWSError,\n  MongoCompatibilityError,\n  MongoMissingCredentialsError,\n  MongoRuntimeError\n} from '../../error';\nimport { ByteUtils, maxWireVersion, ns, request } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport { MongoCredentials } from './mongo_credentials';\nimport { AuthMechanism } from './providers';\n\nconst ASCII_N = 110;\nconst AWS_RELATIVE_URI = 'http://169.254.170.2';\nconst AWS_EC2_URI = 'http://169.254.169.254';\nconst AWS_EC2_PATH = '/latest/meta-data/iam/security-credentials';\nconst bsonOptions: BSONSerializeOptions = {\n  useBigInt64: false,\n  promoteLongs: true,\n  promoteValues: true,\n  promoteBuffers: false,\n  bsonRegExp: false\n};\n\ninterface AWSSaslContinuePayload {\n  a: string;\n  d: string;\n  t?: string;\n}\n\nexport class MongoDBAWS extends AuthProvider {\n  randomBytesAsync: (size: number) => Promise<Buffer>;\n\n  constructor() {\n    super();\n    this.randomBytesAsync = promisify(crypto.randomBytes);\n  }\n\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection } = authContext;\n    if (!authContext.credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    if ('kModuleError' in aws4) {\n      throw aws4['kModuleError'];\n    }\n    const { sign } = aws4;\n\n    if (maxWireVersion(connection) < 9) {\n      throw new MongoCompatibilityError(\n        'MONGODB-AWS authentication requires MongoDB version 4.4 or later'\n      );\n    }\n\n    if (!authContext.credentials.username) {\n      authContext.credentials = await makeTempCredentials(authContext.credentials);\n    }\n\n    const { credentials } = authContext;\n\n    const accessKeyId = credentials.username;\n    const secretAccessKey = credentials.password;\n    const sessionToken = credentials.mechanismProperties.AWS_SESSION_TOKEN;\n\n    // If all three defined, include sessionToken, else include username and pass, else no credentials\n    const awsCredentials =\n      accessKeyId && secretAccessKey && sessionToken\n        ? { accessKeyId, secretAccessKey, sessionToken }\n        : accessKeyId && secretAccessKey\n        ? { accessKeyId, secretAccessKey }\n        : undefined;\n\n    const db = credentials.source;\n    const nonce = await this.randomBytesAsync(32);\n\n    const saslStart = {\n      saslStart: 1,\n      mechanism: 'MONGODB-AWS',\n      payload: BSON.serialize({ r: nonce, p: ASCII_N }, bsonOptions)\n    };\n\n    const saslStartResponse = await connection.commandAsync(ns(`${db}.$cmd`), saslStart, undefined);\n\n    const serverResponse = BSON.deserialize(saslStartResponse.payload.buffer, bsonOptions) as {\n      s: Binary;\n      h: string;\n    };\n    const host = serverResponse.h;\n    const serverNonce = serverResponse.s.buffer;\n    if (serverNonce.length !== 64) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError(`Invalid server nonce length ${serverNonce.length}, expected 64`);\n    }\n\n    if (!ByteUtils.equals(serverNonce.subarray(0, nonce.byteLength), nonce)) {\n      // throw because the serverNonce's leading 32 bytes must equal the client nonce's 32 bytes\n      // https://github.com/mongodb/specifications/blob/875446db44aade414011731840831f38a6c668df/source/auth/auth.rst#id11\n\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('Server nonce does not begin with client nonce');\n    }\n\n    if (host.length < 1 || host.length > 255 || host.indexOf('..') !== -1) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError(`Server returned an invalid host: \"${host}\"`);\n    }\n\n    const body = 'Action=GetCallerIdentity&Version=2011-06-15';\n    const options = sign(\n      {\n        method: 'POST',\n        host,\n        region: deriveRegion(serverResponse.h),\n        service: 'sts',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': body.length,\n          'X-MongoDB-Server-Nonce': ByteUtils.toBase64(serverNonce),\n          'X-MongoDB-GS2-CB-Flag': 'n'\n        },\n        path: '/',\n        body\n      },\n      awsCredentials\n    );\n\n    const payload: AWSSaslContinuePayload = {\n      a: options.headers.Authorization,\n      d: options.headers['X-Amz-Date']\n    };\n\n    if (sessionToken) {\n      payload.t = sessionToken;\n    }\n\n    const saslContinue = {\n      saslContinue: 1,\n      conversationId: 1,\n      payload: BSON.serialize(payload, bsonOptions)\n    };\n\n    await connection.commandAsync(ns(`${db}.$cmd`), saslContinue, undefined);\n  }\n}\n\ninterface AWSTempCredentials {\n  AccessKeyId?: string;\n  SecretAccessKey?: string;\n  Token?: string;\n  RoleArn?: string;\n  Expiration?: Date;\n}\n\n/* @internal */\nexport interface AWSCredentials {\n  accessKeyId?: string;\n  secretAccessKey?: string;\n  sessionToken?: string;\n  expiration?: Date;\n}\n\nasync function makeTempCredentials(credentials: MongoCredentials): Promise<MongoCredentials> {\n  function makeMongoCredentialsFromAWSTemp(creds: AWSTempCredentials) {\n    if (!creds.AccessKeyId || !creds.SecretAccessKey || !creds.Token) {\n      throw new MongoMissingCredentialsError('Could not obtain temporary MONGODB-AWS credentials');\n    }\n\n    return new MongoCredentials({\n      username: creds.AccessKeyId,\n      password: creds.SecretAccessKey,\n      source: credentials.source,\n      mechanism: AuthMechanism.MONGODB_AWS,\n      mechanismProperties: {\n        AWS_SESSION_TOKEN: creds.Token\n      }\n    });\n  }\n\n  const credentialProvider = getAwsCredentialProvider();\n\n  // Check if the AWS credential provider from the SDK is present. If not,\n  // use the old method.\n  if ('kModuleError' in credentialProvider) {\n    // If the environment variable AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n    // is set then drivers MUST assume that it was set by an AWS ECS agent\n    if (process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) {\n      return makeMongoCredentialsFromAWSTemp(\n        await request(`${AWS_RELATIVE_URI}${process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}`)\n      );\n    }\n\n    // Otherwise assume we are on an EC2 instance\n\n    // get a token\n    const token = await request(`${AWS_EC2_URI}/latest/api/token`, {\n      method: 'PUT',\n      json: false,\n      headers: { 'X-aws-ec2-metadata-token-ttl-seconds': 30 }\n    });\n\n    // get role name\n    const roleName = await request(`${AWS_EC2_URI}/${AWS_EC2_PATH}`, {\n      json: false,\n      headers: { 'X-aws-ec2-metadata-token': token }\n    });\n\n    // get temp credentials\n    const creds = await request(`${AWS_EC2_URI}/${AWS_EC2_PATH}/${roleName}`, {\n      headers: { 'X-aws-ec2-metadata-token': token }\n    });\n\n    return makeMongoCredentialsFromAWSTemp(creds);\n  } else {\n    /*\n     * Creates a credential provider that will attempt to find credentials from the\n     * following sources (listed in order of precedence):\n     *\n     * - Environment variables exposed via process.env\n     * - SSO credentials from token cache\n     * - Web identity token credentials\n     * - Shared credentials and config ini files\n     * - The EC2/ECS Instance Metadata Service\n     */\n    const { fromNodeProviderChain } = credentialProvider;\n    const provider = fromNodeProviderChain();\n    try {\n      const creds = await provider();\n      return makeMongoCredentialsFromAWSTemp({\n        AccessKeyId: creds.accessKeyId,\n        SecretAccessKey: creds.secretAccessKey,\n        Token: creds.sessionToken,\n        Expiration: creds.expiration\n      });\n    } catch (error) {\n      throw new MongoAWSError(error.message);\n    }\n  }\n}\n\nfunction deriveRegion(host: string) {\n  const parts = host.split('.');\n  if (parts.length === 1 || parts[1] === 'amazonaws') {\n    return 'us-east-1';\n  }\n\n  return parts[1];\n}\n", "import { BSON, type Document } from 'bson';\n\nimport { ns } from '../../../utils';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport type { Workflow } from '../mongodb_oidc';\nimport { AuthMechanism } from '../providers';\n\n/**\n * Common behaviour for OIDC device workflows.\n * @internal\n */\nexport abstract class ServiceWorkflow implements Workflow {\n  /**\n   * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\n   * and then attempts to read the token from that path.\n   */\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<Document> {\n    const token = await this.getToken(credentials);\n    const command = commandDocument(token);\n    return connection.commandAsync(ns(credentials.source), command, undefined);\n  }\n\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  async speculativeAuth(credentials: MongoCredentials): Promise<Document> {\n    const token = await this.getToken(credentials);\n    const document = commandDocument(token);\n    document.db = credentials.source;\n    return { speculativeAuthenticate: document };\n  }\n\n  /**\n   * Get the token from the environment or endpoint.\n   */\n  abstract getToken(credentials: MongoCredentials): Promise<string>;\n}\n\n/**\n * Create the saslStart command document.\n */\nexport function commandDocument(token: string): Document {\n  return {\n    saslStart: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: BSON.serialize({ jwt: token })\n  };\n}\n", "import * as fs from 'fs';\n\nimport { MongoAWSError } from '../../../error';\nimport { ServiceWorkflow } from './service_workflow';\n\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.';\n\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nexport class AwsServiceWorkflow extends ServiceWorkflow {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<string> {\n    const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    return fs.promises.readFile(tokenFile, 'utf8');\n  }\n}\n", "/* 5 minutes in milliseconds */\nconst EXPIRATION_BUFFER_MS = 300000;\n\n/**\n * An entry in a cache that can expire in a certain amount of time.\n */\nexport abstract class ExpiringCacheEntry {\n  expiration: number;\n\n  /**\n   * Create a new expiring token entry.\n   */\n  constructor(expiration: number) {\n    this.expiration = this.expirationTime(expiration);\n  }\n  /**\n   * The entry is still valid if the expiration is more than\n   * 5 minutes from the expiration time.\n   */\n  isValid() {\n    return this.expiration - Date.now() > EXPIRATION_BUFFER_MS;\n  }\n\n  /**\n   * Get an expiration time in milliseconds past epoch.\n   */\n  private expirationTime(expiresInSeconds: number): number {\n    return Date.now() + expiresInSeconds * 1000;\n  }\n}\n\n/**\n * Base class for OIDC caches.\n */\nexport abstract class Cache<T> {\n  entries: Map<string, T>;\n\n  /**\n   * Create a new cache.\n   */\n  constructor() {\n    this.entries = new Map<string, T>();\n  }\n\n  /**\n   * Clear the cache.\n   */\n  clear() {\n    this.entries.clear();\n  }\n\n  /**\n   * Implement the cache key for the token.\n   */\n  abstract cacheKey(address: string, username: string, callbackHash: string): string;\n\n  /**\n   * Create a cache key from the address and username.\n   */\n  hashedCacheKey(address: string, username: string, callbackHash: string): string {\n    return JSON.stringify([address, username, callbackHash]);\n  }\n}\n", "import type { AzureAccessToken } from './azure_service_workflow';\nimport { Cache, ExpiringCacheEntry } from './cache';\n\n/** @internal */\nexport class AzureTokenEntry extends ExpiringCacheEntry {\n  token: string;\n\n  /**\n   * Instantiate the entry.\n   */\n  constructor(token: string, expiration: number) {\n    super(expiration);\n    this.token = token;\n  }\n}\n\n/**\n * A cache of access tokens from Azure.\n * @internal\n */\nexport class AzureTokenCache extends Cache<AzureTokenEntry> {\n  /**\n   * Add an entry to the cache.\n   */\n  addEntry(tokenAudience: string, token: AzureAccessToken): AzureTokenEntry {\n    const entry = new AzureTokenEntry(token.access_token, token.expires_in);\n    this.entries.set(tokenAudience, entry);\n    return entry;\n  }\n\n  /**\n   * Create a cache key.\n   */\n  cacheKey(tokenAudience: string): string {\n    return tokenAudience;\n  }\n\n  /**\n   * Delete an entry from the cache.\n   */\n  deleteEntry(tokenAudience: string): void {\n    this.entries.delete(tokenAudience);\n  }\n\n  /**\n   * Get an Azure token entry from the cache.\n   */\n  getEntry(tokenAudience: string): AzureTokenEntry | undefined {\n    return this.entries.get(tokenAudience);\n  }\n}\n", "import { MongoAzureError } from '../../../error';\nimport { request } from '../../../utils';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport { AzureTokenCache } from './azure_token_cache';\nimport { ServiceWorkflow } from './service_workflow';\n\n/** Base URL for getting Azure tokens. */\nconst AZURE_BASE_URL =\n  'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01';\n\n/** Azure request headers. */\nconst AZURE_HEADERS = Object.freeze({ Metadata: 'true', Accept: 'application/json' });\n\n/** Invalid endpoint result error. */\nconst ENDPOINT_RESULT_ERROR =\n  'Azure endpoint did not return a value with only access_token and expires_in properties';\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_AUDIENCE_MISSING_ERROR =\n  'TOKEN_AUDIENCE must be set in the auth mechanism properties when PROVIDER_NAME is azure.';\n\n/**\n * The Azure access token format.\n * @internal\n */\nexport interface AzureAccessToken {\n  access_token: string;\n  expires_in: number;\n}\n\n/**\n * Device workflow implementation for Azure.\n *\n * @internal\n */\nexport class AzureServiceWorkflow extends ServiceWorkflow {\n  cache = new AzureTokenCache();\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(credentials?: MongoCredentials): Promise<string> {\n    const tokenAudience = credentials?.mechanismProperties.TOKEN_AUDIENCE;\n    if (!tokenAudience) {\n      throw new MongoAzureError(TOKEN_AUDIENCE_MISSING_ERROR);\n    }\n    let token;\n    const entry = this.cache.getEntry(tokenAudience);\n    if (entry?.isValid()) {\n      token = entry.token;\n    } else {\n      this.cache.deleteEntry(tokenAudience);\n      const response = await getAzureTokenData(tokenAudience);\n      if (!isEndpointResultValid(response)) {\n        throw new MongoAzureError(ENDPOINT_RESULT_ERROR);\n      }\n      this.cache.addEntry(tokenAudience, response);\n      token = response.access_token;\n    }\n    return token;\n  }\n}\n\n/**\n * Hit the Azure endpoint to get the token data.\n */\nasync function getAzureTokenData(tokenAudience: string): Promise<AzureAccessToken> {\n  const url = `${AZURE_BASE_URL}&resource=${tokenAudience}`;\n  const data = await request(url, {\n    json: true,\n    headers: AZURE_HEADERS\n  });\n  return data as AzureAccessToken;\n}\n\n/**\n * Determines if a result returned from the endpoint is valid.\n * This means the result is not nullish, contains the access_token required field\n * and the expires_in required field.\n */\nfunction isEndpointResultValid(\n  token: unknown\n): token is { access_token: unknown; expires_in: unknown } {\n  if (token == null || typeof token !== 'object') return false;\n  return 'access_token' in token && 'expires_in' in token;\n}\n", "import { MongoInvalidArgumentError } from '../../../error';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport type {\n  IdPServerInfo,\n  IdPServerResponse,\n  OIDCCallbackContext,\n  OIDCRefreshFunction,\n  OIDCRequestFunction\n} from '../mongodb_oidc';\nimport { Cache } from './cache';\n\n/** Error message for when request callback is missing. */\nconst REQUEST_CALLBACK_REQUIRED_ERROR =\n  'Auth mechanism property REQUEST_TOKEN_CALLBACK is required.';\n/* Counter for function \"hashes\".*/\nlet FN_HASH_COUNTER = 0;\n/* No function present function */\nconst NO_FUNCTION: OIDCRequestFunction = async () => ({ accessToken: 'test' });\n/* The map of function hashes */\nconst FN_HASHES = new WeakMap<OIDCRequestFunction | OIDCRefreshFunction, number>();\n/* Put the no function hash in the map. */\nFN_HASHES.set(NO_FUNCTION, FN_HASH_COUNTER);\n\n/**\n * An entry of callbacks in the cache.\n */\ninterface CallbacksEntry {\n  requestCallback: OIDCRequestFunction;\n  refreshCallback?: OIDCRefreshFunction;\n  callbackHash: string;\n}\n\n/**\n * A cache of request and refresh callbacks per server/user.\n */\nexport class CallbackLockCache extends Cache<CallbacksEntry> {\n  /**\n   * Get the callbacks for the connection and credentials. If an entry does not\n   * exist a new one will get set.\n   */\n  getEntry(connection: Connection, credentials: MongoCredentials): CallbacksEntry {\n    const requestCallback = credentials.mechanismProperties.REQUEST_TOKEN_CALLBACK;\n    const refreshCallback = credentials.mechanismProperties.REFRESH_TOKEN_CALLBACK;\n    if (!requestCallback) {\n      throw new MongoInvalidArgumentError(REQUEST_CALLBACK_REQUIRED_ERROR);\n    }\n    const callbackHash = hashFunctions(requestCallback, refreshCallback);\n    const key = this.cacheKey(connection.address, credentials.username, callbackHash);\n    const entry = this.entries.get(key);\n    if (entry) {\n      return entry;\n    }\n    return this.addEntry(key, callbackHash, requestCallback, refreshCallback);\n  }\n\n  /**\n   * Set locked callbacks on for connection and credentials.\n   */\n  private addEntry(\n    key: string,\n    callbackHash: string,\n    requestCallback: OIDCRequestFunction,\n    refreshCallback?: OIDCRefreshFunction\n  ): CallbacksEntry {\n    const entry = {\n      requestCallback: withLock(requestCallback),\n      refreshCallback: refreshCallback ? withLock(refreshCallback) : undefined,\n      callbackHash: callbackHash\n    };\n    this.entries.set(key, entry);\n    return entry;\n  }\n\n  /**\n   * Create a cache key from the address and username.\n   */\n  cacheKey(address: string, username: string, callbackHash: string): string {\n    return this.hashedCacheKey(address, username, callbackHash);\n  }\n}\n\n/**\n * Ensure the callback is only executed one at a time.\n */\nfunction withLock(callback: OIDCRequestFunction | OIDCRefreshFunction) {\n  let lock: Promise<any> = Promise.resolve();\n  return async (info: IdPServerInfo, context: OIDCCallbackContext): Promise<IdPServerResponse> => {\n    await lock;\n    lock = lock.then(() => callback(info, context));\n    return lock;\n  };\n}\n\n/**\n * Get the hash string for the request and refresh functions.\n */\nfunction hashFunctions(requestFn: OIDCRequestFunction, refreshFn?: OIDCRefreshFunction): string {\n  let requestHash = FN_HASHES.get(requestFn);\n  let refreshHash = FN_HASHES.get(refreshFn ?? NO_FUNCTION);\n  if (requestHash == null) {\n    // Create a new one for the function and put it in the map.\n    FN_HASH_COUNTER++;\n    requestHash = FN_HASH_COUNTER;\n    FN_HASHES.set(requestFn, FN_HASH_COUNTER);\n  }\n  if (refreshHash == null && refreshFn) {\n    // Create a new one for the function and put it in the map.\n    FN_HASH_COUNTER++;\n    refreshHash = FN_HASH_COUNTER;\n    FN_HASHES.set(refreshFn, FN_HASH_COUNTER);\n  }\n  return `${requestHash}-${refreshHash}`;\n}\n", "import type { IdPServerInfo, IdPServerResponse } from '../mongodb_oidc';\nimport { Cache, ExpiringCacheEntry } from './cache';\n\n/* Default expiration is now for when no expiration provided */\nconst DEFAULT_EXPIRATION_SECS = 0;\n\n/** @internal */\nexport class TokenEntry extends ExpiringCacheEntry {\n  tokenResult: IdPServerResponse;\n  serverInfo: IdPServerInfo;\n\n  /**\n   * Instantiate the entry.\n   */\n  constructor(tokenResult: IdPServerResponse, serverInfo: IdPServerInfo, expiration: number) {\n    super(expiration);\n    this.tokenResult = tokenResult;\n    this.serverInfo = serverInfo;\n  }\n}\n\n/**\n * Cache of OIDC token entries.\n * @internal\n */\nexport class TokenEntryCache extends Cache<TokenEntry> {\n  /**\n   * Set an entry in the token cache.\n   */\n  addEntry(\n    address: string,\n    username: string,\n    callbackHash: string,\n    tokenResult: IdPServerResponse,\n    serverInfo: IdPServerInfo\n  ): TokenEntry {\n    const entry = new TokenEntry(\n      tokenResult,\n      serverInfo,\n      tokenResult.expiresInSeconds ?? DEFAULT_EXPIRATION_SECS\n    );\n    this.entries.set(this.cacheKey(address, username, callbackHash), entry);\n    return entry;\n  }\n\n  /**\n   * Delete an entry from the cache.\n   */\n  deleteEntry(address: string, username: string, callbackHash: string): void {\n    this.entries.delete(this.cacheKey(address, username, callbackHash));\n  }\n\n  /**\n   * Get an entry from the cache.\n   */\n  getEntry(address: string, username: string, callbackHash: string): TokenEntry | undefined {\n    return this.entries.get(this.cacheKey(address, username, callbackHash));\n  }\n\n  /**\n   * Delete all expired entries from the cache.\n   */\n  deleteExpiredEntries(): void {\n    for (const [key, entry] of this.entries) {\n      if (!entry.isValid()) {\n        this.entries.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Create a cache key from the address and username.\n   */\n  cacheKey(address: string, username: string, callbackHash: string): string {\n    return this.hashedCacheKey(address, username, callbackHash);\n  }\n}\n", "import { Binary, BSON, type Document } from 'bson';\n\nimport { MONGODB_ERROR_CODES, MongoError, MongoMissingCredentialsError } from '../../../error';\nimport { ns } from '../../../utils';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport type {\n  IdPServerInfo,\n  IdPServerResponse,\n  OIDCCallbackContext,\n  OIDCRefreshFunction,\n  OIDCRequestFunction,\n  Workflow\n} from '../mongodb_oidc';\nimport { AuthMechanism } from '../providers';\nimport { CallbackLockCache } from './callback_lock_cache';\nimport { TokenEntryCache } from './token_entry_cache';\n\n/** The current version of OIDC implementation. */\nconst OIDC_VERSION = 0;\n\n/** 5 minutes in seconds */\nconst TIMEOUT_S = 300;\n\n/** Properties allowed on results of callbacks. */\nconst RESULT_PROPERTIES = ['accessToken', 'expiresInSeconds', 'refreshToken'];\n\n/** Error message when the callback result is invalid. */\nconst CALLBACK_RESULT_ERROR =\n  'User provided OIDC callbacks must return a valid object with an accessToken.';\n\n/**\n * OIDC implementation of a callback based workflow.\n * @internal\n */\nexport class CallbackWorkflow implements Workflow {\n  cache: TokenEntryCache;\n  callbackCache: CallbackLockCache;\n\n  /**\n   * Instantiate the workflow\n   */\n  constructor() {\n    this.cache = new TokenEntryCache();\n    this.callbackCache = new CallbackLockCache();\n  }\n\n  /**\n   * Get the document to add for speculative authentication. This also needs\n   * to add a db field from the credentials source.\n   */\n  async speculativeAuth(credentials: MongoCredentials): Promise<Document> {\n    const document = startCommandDocument(credentials);\n    document.db = credentials.source;\n    return { speculativeAuthenticate: document };\n  }\n\n  /**\n   * Execute the OIDC callback workflow.\n   */\n  async execute(\n    connection: Connection,\n    credentials: MongoCredentials,\n    reauthenticating: boolean,\n    response?: Document\n  ): Promise<Document> {\n    // Get the callbacks with locks from the callback lock cache.\n    const { requestCallback, refreshCallback, callbackHash } = this.callbackCache.getEntry(\n      connection,\n      credentials\n    );\n    // Look for an existing entry in the cache.\n    const entry = this.cache.getEntry(connection.address, credentials.username, callbackHash);\n    let result;\n    if (entry) {\n      // Reauthentication cannot use a token from the cache since the server has\n      // stated it is invalid by the request for reauthentication.\n      if (entry.isValid() && !reauthenticating) {\n        // Presence of a valid cache entry means we can skip to the finishing step.\n        result = await this.finishAuthentication(\n          connection,\n          credentials,\n          entry.tokenResult,\n          response?.speculativeAuthenticate?.conversationId\n        );\n      } else {\n        // Presence of an expired cache entry means we must fetch a new one and\n        // then execute the final step.\n        const tokenResult = await this.fetchAccessToken(\n          connection,\n          credentials,\n          entry.serverInfo,\n          reauthenticating,\n          callbackHash,\n          requestCallback,\n          refreshCallback\n        );\n        try {\n          result = await this.finishAuthentication(\n            connection,\n            credentials,\n            tokenResult,\n            reauthenticating ? undefined : response?.speculativeAuthenticate?.conversationId\n          );\n        } catch (error) {\n          // If we are reauthenticating and this errors with reauthentication\n          // required, we need to do the entire process over again and clear\n          // the cache entry.\n          if (\n            reauthenticating &&\n            error instanceof MongoError &&\n            error.code === MONGODB_ERROR_CODES.Reauthenticate\n          ) {\n            this.cache.deleteEntry(connection.address, credentials.username, callbackHash);\n            result = await this.execute(connection, credentials, reauthenticating);\n          } else {\n            throw error;\n          }\n        }\n      }\n    } else {\n      // No entry in the cache requires us to do all authentication steps\n      // from start to finish, including getting a fresh token for the cache.\n      const startDocument = await this.startAuthentication(\n        connection,\n        credentials,\n        reauthenticating,\n        response\n      );\n      const conversationId = startDocument.conversationId;\n      const serverResult = BSON.deserialize(startDocument.payload.buffer) as IdPServerInfo;\n      const tokenResult = await this.fetchAccessToken(\n        connection,\n        credentials,\n        serverResult,\n        reauthenticating,\n        callbackHash,\n        requestCallback,\n        refreshCallback\n      );\n      result = await this.finishAuthentication(\n        connection,\n        credentials,\n        tokenResult,\n        conversationId\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Starts the callback authentication process. If there is a speculative\n   * authentication document from the initial handshake, then we will use that\n   * value to get the issuer, otherwise we will send the saslStart command.\n   */\n  private async startAuthentication(\n    connection: Connection,\n    credentials: MongoCredentials,\n    reauthenticating: boolean,\n    response?: Document\n  ): Promise<Document> {\n    let result;\n    if (!reauthenticating && response?.speculativeAuthenticate) {\n      result = response.speculativeAuthenticate;\n    } else {\n      result = await connection.commandAsync(\n        ns(credentials.source),\n        startCommandDocument(credentials),\n        undefined\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Finishes the callback authentication process.\n   */\n  private async finishAuthentication(\n    connection: Connection,\n    credentials: MongoCredentials,\n    tokenResult: IdPServerResponse,\n    conversationId?: number\n  ): Promise<Document> {\n    const result = await connection.commandAsync(\n      ns(credentials.source),\n      finishCommandDocument(tokenResult.accessToken, conversationId),\n      undefined\n    );\n    return result;\n  }\n\n  /**\n   * Fetches an access token using either the request or refresh callbacks and\n   * puts it in the cache.\n   */\n  private async fetchAccessToken(\n    connection: Connection,\n    credentials: MongoCredentials,\n    serverInfo: IdPServerInfo,\n    reauthenticating: boolean,\n    callbackHash: string,\n    requestCallback: OIDCRequestFunction,\n    refreshCallback?: OIDCRefreshFunction\n  ): Promise<IdPServerResponse> {\n    // Get the token from the cache.\n    const entry = this.cache.getEntry(connection.address, credentials.username, callbackHash);\n    let result;\n    const context: OIDCCallbackContext = { timeoutSeconds: TIMEOUT_S, version: OIDC_VERSION };\n    // Check if there's a token in the cache.\n    if (entry) {\n      // If the cache entry is valid, return the token result.\n      if (entry.isValid() && !reauthenticating) {\n        return entry.tokenResult;\n      }\n      // If the cache entry is not valid, remove it from the cache and first attempt\n      // to use the refresh callback to get a new token. If no refresh callback\n      // exists, then fallback to the request callback.\n      if (refreshCallback) {\n        context.refreshToken = entry.tokenResult.refreshToken;\n        result = await refreshCallback(serverInfo, context);\n      } else {\n        result = await requestCallback(serverInfo, context);\n      }\n    } else {\n      // With no token in the cache we use the request callback.\n      result = await requestCallback(serverInfo, context);\n    }\n    // Validate that the result returned by the callback is acceptable. If it is not\n    // we must clear the token result from the cache.\n    if (isCallbackResultInvalid(result)) {\n      this.cache.deleteEntry(connection.address, credentials.username, callbackHash);\n      throw new MongoMissingCredentialsError(CALLBACK_RESULT_ERROR);\n    }\n    // Cleanup the cache.\n    this.cache.deleteExpiredEntries();\n    // Put the new entry into the cache.\n    this.cache.addEntry(\n      connection.address,\n      credentials.username || '',\n      callbackHash,\n      result,\n      serverInfo\n    );\n    return result;\n  }\n}\n\n/**\n * Generate the finishing command document for authentication. Will be a\n * saslStart or saslContinue depending on the presence of a conversation id.\n */\nfunction finishCommandDocument(token: string, conversationId?: number): Document {\n  if (conversationId != null && typeof conversationId === 'number') {\n    return {\n      saslContinue: 1,\n      conversationId: conversationId,\n      payload: new Binary(BSON.serialize({ jwt: token }))\n    };\n  }\n  // saslContinue requires a conversationId in the command to be valid so in this\n  // case the server allows \"step two\" to actually be a saslStart with the token\n  // as the jwt since the use of the cached value has no correlating conversating\n  // on the particular connection.\n  return {\n    saslStart: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize({ jwt: token }))\n  };\n}\n\n/**\n * Determines if a result returned from a request or refresh callback\n * function is invalid. This means the result is nullish, doesn't contain\n * the accessToken required field, and does not contain extra fields.\n */\nfunction isCallbackResultInvalid(tokenResult: unknown): boolean {\n  if (tokenResult == null || typeof tokenResult !== 'object') return true;\n  if (!('accessToken' in tokenResult)) return true;\n  return !Object.getOwnPropertyNames(tokenResult).every(prop => RESULT_PROPERTIES.includes(prop));\n}\n\n/**\n * Generate the saslStart command document.\n */\nfunction startCommandDocument(credentials: MongoCredentials): Document {\n  const payload: Document = {};\n  if (credentials.username) {\n    payload.n = credentials.username;\n  }\n  return {\n    saslStart: 1,\n    autoAuthorize: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize(payload))\n  };\n}\n", "import type { Document } from 'bson';\n\nimport { MongoInvalidArgumentError, MongoMissingCredentialsError } from '../../error';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection } from '../connection';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\nimport { AwsServiceWorkflow } from './mongodb_oidc/aws_service_workflow';\nimport { AzureServiceWorkflow } from './mongodb_oidc/azure_service_workflow';\nimport { CallbackWorkflow } from './mongodb_oidc/callback_workflow';\n\n/** Error when credentials are missing. */\nconst MISSING_CREDENTIALS_ERROR = 'AuthContext must provide credentials.';\n\n/**\n * @public\n * @experimental\n */\nexport interface IdPServerInfo {\n  issuer: string;\n  clientId: string;\n  requestScopes?: string[];\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface IdPServerResponse {\n  accessToken: string;\n  expiresInSeconds?: number;\n  refreshToken?: string;\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface OIDCCallbackContext {\n  refreshToken?: string;\n  timeoutSeconds?: number;\n  timeoutContext?: AbortSignal;\n  version: number;\n}\n\n/**\n * @public\n * @experimental\n */\nexport type OIDCRequestFunction = (\n  info: IdPServerInfo,\n  context: OIDCCallbackContext\n) => Promise<IdPServerResponse>;\n\n/**\n * @public\n * @experimental\n */\nexport type OIDCRefreshFunction = (\n  info: IdPServerInfo,\n  context: OIDCCallbackContext\n) => Promise<IdPServerResponse>;\n\ntype ProviderName = 'aws' | 'azure' | 'callback';\n\nexport interface Workflow {\n  /**\n   * All device workflows must implement this method in order to get the access\n   * token and then call authenticate with it.\n   */\n  execute(\n    connection: Connection,\n    credentials: MongoCredentials,\n    reauthenticating: boolean,\n    response?: Document\n  ): Promise<Document>;\n\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  speculativeAuth(credentials: MongoCredentials): Promise<Document>;\n}\n\n/** @internal */\nexport const OIDC_WORKFLOWS: Map<ProviderName, Workflow> = new Map();\nOIDC_WORKFLOWS.set('callback', new CallbackWorkflow());\nOIDC_WORKFLOWS.set('aws', new AwsServiceWorkflow());\nOIDC_WORKFLOWS.set('azure', new AzureServiceWorkflow());\n\n/**\n * OIDC auth provider.\n * @experimental\n */\nexport class MongoDBOIDC extends AuthProvider {\n  /**\n   * Instantiate the auth provider.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Authenticate using OIDC\n   */\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, reauthenticating, response } = authContext;\n    const credentials = getCredentials(authContext);\n    const workflow = getWorkflow(credentials);\n    await workflow.execute(connection, credentials, reauthenticating, response);\n  }\n\n  /**\n   * Add the speculative auth for the initial handshake.\n   */\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const credentials = getCredentials(authContext);\n    const workflow = getWorkflow(credentials);\n    const result = await workflow.speculativeAuth(credentials);\n    return { ...handshakeDoc, ...result };\n  }\n}\n\n/**\n * Get credentials from the auth context, throwing if they do not exist.\n */\nfunction getCredentials(authContext: AuthContext): MongoCredentials {\n  const { credentials } = authContext;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError(MISSING_CREDENTIALS_ERROR);\n  }\n  return credentials;\n}\n\n/**\n * Gets either a device workflow or callback workflow.\n */\nfunction getWorkflow(credentials: MongoCredentials): Workflow {\n  const providerName = credentials.mechanismProperties.PROVIDER_NAME;\n  const workflow = OIDC_WORKFLOWS.get(providerName || 'callback');\n  if (!workflow) {\n    throw new MongoInvalidArgumentError(\n      `Could not load workflow for provider ${credentials.mechanismProperties.PROVIDER_NAME}`\n    );\n  }\n  return workflow;\n}\n", "import { Binary } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\nexport class Plain extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    const { username, password } = credentials;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    await connection.commandAsync(ns('$external.$cmd'), command, undefined);\n  }\n}\n", "import * as crypto from 'crypto';\nimport { promisify } from 'util';\n\nimport { Binary, type Document } from '../../bson';\nimport { saslprep } from '../../deps';\nimport {\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoRuntimeError\n} from '../../error';\nimport { emitWarning, ns } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\nimport { AuthMechanism } from './providers';\n\ntype CryptoMethod = 'sha1' | 'sha256';\n\nclass ScramSHA extends AuthProvider {\n  cryptoMethod: CryptoMethod;\n  randomBytesAsync: (size: number) => Promise<Buffer>;\n  constructor(cryptoMethod: CryptoMethod) {\n    super();\n    this.cryptoMethod = cryptoMethod || 'sha1';\n    this.randomBytesAsync = promisify(crypto.randomBytes);\n  }\n\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const cryptoMethod = this.cryptoMethod;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    if (\n      cryptoMethod === 'sha256' &&\n      ('kModuleError' in saslprep || typeof saslprep !== 'function')\n    ) {\n      emitWarning('Warning: no saslprep library specified. Passwords will not be sanitized');\n    }\n\n    const nonce = await this.randomBytesAsync(24);\n    // store the nonce for later use\n    authContext.nonce = nonce;\n\n    const request = {\n      ...handshakeDoc,\n      speculativeAuthenticate: {\n        ...makeFirstMessage(cryptoMethod, credentials, nonce),\n        db: credentials.source\n      }\n    };\n\n    return request;\n  }\n\n  override async auth(authContext: AuthContext) {\n    const { reauthenticating, response } = authContext;\n    if (response?.speculativeAuthenticate && !reauthenticating) {\n      return continueScramConversation(\n        this.cryptoMethod,\n        response.speculativeAuthenticate,\n        authContext\n      );\n    }\n    return executeScram(this.cryptoMethod, authContext);\n  }\n}\n\nfunction cleanUsername(username: string) {\n  return username.replace('=', '=3D').replace(',', '=2C');\n}\n\nfunction clientFirstMessageBare(username: string, nonce: Buffer) {\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return Buffer.concat([\n    Buffer.from('n=', 'utf8'),\n    Buffer.from(username, 'utf8'),\n    Buffer.from(',r=', 'utf8'),\n    Buffer.from(nonce.toString('base64'), 'utf8')\n  ]);\n}\n\nfunction makeFirstMessage(\n  cryptoMethod: CryptoMethod,\n  credentials: MongoCredentials,\n  nonce: Buffer\n) {\n  const username = cleanUsername(credentials.username);\n  const mechanism =\n    cryptoMethod === 'sha1' ? AuthMechanism.MONGODB_SCRAM_SHA1 : AuthMechanism.MONGODB_SCRAM_SHA256;\n\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return {\n    saslStart: 1,\n    mechanism,\n    payload: new Binary(\n      Buffer.concat([Buffer.from('n,,', 'utf8'), clientFirstMessageBare(username, nonce)])\n    ),\n    autoAuthorize: 1,\n    options: { skipEmptyExchange: true }\n  };\n}\n\nasync function executeScram(cryptoMethod: CryptoMethod, authContext: AuthContext): Promise<void> {\n  const { connection, credentials } = authContext;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n  }\n  if (!authContext.nonce) {\n    throw new MongoInvalidArgumentError('AuthContext must contain a valid nonce property');\n  }\n  const nonce = authContext.nonce;\n  const db = credentials.source;\n\n  const saslStartCmd = makeFirstMessage(cryptoMethod, credentials, nonce);\n  const response = await connection.commandAsync(ns(`${db}.$cmd`), saslStartCmd, undefined);\n  await continueScramConversation(cryptoMethod, response, authContext);\n}\n\nasync function continueScramConversation(\n  cryptoMethod: CryptoMethod,\n  response: Document,\n  authContext: AuthContext\n): Promise<void> {\n  const connection = authContext.connection;\n  const credentials = authContext.credentials;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n  }\n  if (!authContext.nonce) {\n    throw new MongoInvalidArgumentError('Unable to continue SCRAM without valid nonce');\n  }\n  const nonce = authContext.nonce;\n\n  const db = credentials.source;\n  const username = cleanUsername(credentials.username);\n  const password = credentials.password;\n\n  let processedPassword;\n  if (cryptoMethod === 'sha256') {\n    processedPassword =\n      'kModuleError' in saslprep || typeof saslprep !== 'function' ? password : saslprep(password);\n  } else {\n    processedPassword = passwordDigest(username, password);\n  }\n\n  const payload = Buffer.isBuffer(response.payload)\n    ? new Binary(response.payload)\n    : response.payload;\n  const dict = parsePayload(payload.value());\n\n  const iterations = parseInt(dict.i, 10);\n  if (iterations && iterations < 4096) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Server returned an invalid iteration count ${iterations}`);\n  }\n\n  const salt = dict.s;\n  const rnonce = dict.r;\n  if (rnonce.startsWith('nonce')) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Server returned an invalid nonce: ${rnonce}`);\n  }\n\n  // Set up start of proof\n  const withoutProof = `c=biws,r=${rnonce}`;\n  const saltedPassword = HI(\n    processedPassword,\n    Buffer.from(salt, 'base64'),\n    iterations,\n    cryptoMethod\n  );\n\n  const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n  const serverKey = HMAC(cryptoMethod, saltedPassword, 'Server Key');\n  const storedKey = H(cryptoMethod, clientKey);\n  const authMessage = [clientFirstMessageBare(username, nonce), payload.value(), withoutProof].join(\n    ','\n  );\n\n  const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n  const clientProof = `p=${xor(clientKey, clientSignature)}`;\n  const clientFinal = [withoutProof, clientProof].join(',');\n\n  const serverSignature = HMAC(cryptoMethod, serverKey, authMessage);\n  const saslContinueCmd = {\n    saslContinue: 1,\n    conversationId: response.conversationId,\n    payload: new Binary(Buffer.from(clientFinal))\n  };\n\n  const r = await connection.commandAsync(ns(`${db}.$cmd`), saslContinueCmd, undefined);\n  const parsedResponse = parsePayload(r.payload.value());\n\n  if (!compareDigest(Buffer.from(parsedResponse.v, 'base64'), serverSignature)) {\n    throw new MongoRuntimeError('Server returned an invalid signature');\n  }\n\n  if (r.done !== false) {\n    // If the server sends r.done === true we can save one RTT\n    return;\n  }\n\n  const retrySaslContinueCmd = {\n    saslContinue: 1,\n    conversationId: r.conversationId,\n    payload: Buffer.alloc(0)\n  };\n\n  await connection.commandAsync(ns(`${db}.$cmd`), retrySaslContinueCmd, undefined);\n}\n\nfunction parsePayload(payload: string) {\n  const dict: Document = {};\n  const parts = payload.split(',');\n  for (let i = 0; i < parts.length; i++) {\n    const valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n}\n\nfunction passwordDigest(username: string, password: string) {\n  if (typeof username !== 'string') {\n    throw new MongoInvalidArgumentError('Username must be a string');\n  }\n\n  if (typeof password !== 'string') {\n    throw new MongoInvalidArgumentError('Password must be a string');\n  }\n\n  if (password.length === 0) {\n    throw new MongoInvalidArgumentError('Password cannot be empty');\n  }\n\n  let md5: crypto.Hash;\n  try {\n    md5 = crypto.createHash('md5');\n  } catch (err) {\n    if (crypto.getFips()) {\n      // This error is (slightly) more helpful than what comes from OpenSSL directly, e.g.\n      // 'Error: error:060800C8:digital envelope routines:EVP_DigestInit_ex:disabled for FIPS'\n      throw new Error('Auth mechanism SCRAM-SHA-1 is not supported in FIPS mode');\n    }\n    throw err;\n  }\n  md5.update(`${username}:mongo:${password}`, 'utf8');\n  return md5.digest('hex');\n}\n\n// XOR two buffers\nfunction xor(a: Buffer, b: Buffer) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a);\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  }\n\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return Buffer.from(res).toString('base64');\n}\n\nfunction H(method: CryptoMethod, text: Buffer) {\n  return crypto.createHash(method).update(text).digest();\n}\n\nfunction HMAC(method: CryptoMethod, key: Buffer, text: Buffer | string) {\n  return crypto.createHmac(method, key).update(text).digest();\n}\n\ninterface HICache {\n  [key: string]: Buffer;\n}\n\nlet _hiCache: HICache = {};\nlet _hiCacheCount = 0;\nfunction _hiCachePurge() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n}\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data: string, salt: Buffer, iterations: number, cryptoMethod: CryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] != null) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\nfunction compareDigest(lhs: Buffer, rhs: Uint8Array) {\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  if (typeof crypto.timingSafeEqual === 'function') {\n    return crypto.timingSafeEqual(lhs, rhs);\n  }\n\n  let result = 0;\n  for (let i = 0; i < lhs.length; i++) {\n    result |= lhs[i] ^ rhs[i];\n  }\n\n  return result === 0;\n}\n\nexport class ScramSHA1 extends ScramSHA {\n  constructor() {\n    super('sha1');\n  }\n}\n\nexport class ScramSHA256 extends ScramSHA {\n  constructor() {\n    super('sha256');\n  }\n}\n", "import type { Document } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\n\nexport class X509 extends AuthProvider {\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const { credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    return { ...handshakeDoc, speculativeAuthenticate: x509AuthenticateCommand(credentials) };\n  }\n\n  override async auth(authContext: AuthContext) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    const response = authContext.response;\n\n    if (response?.speculativeAuthenticate) {\n      return;\n    }\n\n    await connection.commandAsync(\n      ns('$external.$cmd'),\n      x509AuthenticateCommand(credentials),\n      undefined\n    );\n  }\n}\n\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}\n", "import type { Socket, SocketConnectOpts } from 'net';\nimport * as net from 'net';\nimport { SocksClient } from 'socks';\nimport type { ConnectionOptions as TLSConnectionOpts, TLSSocket } from 'tls';\nimport * as tls from 'tls';\n\nimport type { Document } from '../bson';\nimport { LEGACY_HELLO_COMMAND } from '../constants';\nimport {\n  MongoCompatibilityError,\n  MongoError,\n  MongoErrorLabel,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoRuntimeError,\n  needsRetryableWriteLabel\n} from '../error';\nimport { type Callback, HostAddress, ns } from '../utils';\nimport { AuthContext, type AuthProvider } from './auth/auth_provider';\nimport { GSSAPI } from './auth/gssapi';\nimport { MongoCR } from './auth/mongocr';\nimport { MongoDBAWS } from './auth/mongodb_aws';\nimport { MongoDBOIDC } from './auth/mongodb_oidc';\nimport { Plain } from './auth/plain';\nimport { AuthMechanism } from './auth/providers';\nimport { ScramSHA1, ScramSHA256 } from './auth/scram';\nimport { X509 } from './auth/x509';\nimport {\n  type CommandOptions,\n  Connection,\n  type ConnectionOptions,\n  CryptoConnection\n} from './connection';\nimport type { ClientMetadata } from './handshake/client_metadata';\nimport {\n  MAX_SUPPORTED_SERVER_VERSION,\n  MAX_SUPPORTED_WIRE_VERSION,\n  MIN_SUPPORTED_SERVER_VERSION,\n  MIN_SUPPORTED_WIRE_VERSION\n} from './wire_protocol/constants';\n\n/** @internal */\nexport const AUTH_PROVIDERS = new Map<AuthMechanism | string, AuthProvider>([\n  [AuthMechanism.MONGODB_AWS, new MongoDBAWS()],\n  [AuthMechanism.MONGODB_CR, new MongoCR()],\n  [AuthMechanism.MONGODB_GSSAPI, new GSSAPI()],\n  [AuthMechanism.MONGODB_OIDC, new MongoDBOIDC()],\n  [AuthMechanism.MONGODB_PLAIN, new Plain()],\n  [AuthMechanism.MONGODB_SCRAM_SHA1, new ScramSHA1()],\n  [AuthMechanism.MONGODB_SCRAM_SHA256, new ScramSHA256()],\n  [AuthMechanism.MONGODB_X509, new X509()]\n]);\n\n/** @public */\nexport type Stream = Socket | TLSSocket;\n\nexport function connect(options: ConnectionOptions, callback: Callback<Connection>): void {\n  makeConnection({ ...options, existingSocket: undefined }, (err, socket) => {\n    if (err || !socket) {\n      return callback(err);\n    }\n\n    let ConnectionType = options.connectionType ?? Connection;\n    if (options.autoEncrypter) {\n      ConnectionType = CryptoConnection;\n    }\n\n    const connection = new ConnectionType(socket, options);\n\n    performInitialHandshake(connection, options).then(\n      () => callback(undefined, connection),\n      error => {\n        connection.destroy({ force: false });\n        callback(error);\n      }\n    );\n  });\n}\n\nfunction checkSupportedServer(hello: Document, options: ConnectionOptions) {\n  const maxWireVersion = Number(hello.maxWireVersion);\n  const minWireVersion = Number(hello.minWireVersion);\n  const serverVersionHighEnough =\n    !Number.isNaN(maxWireVersion) && maxWireVersion >= MIN_SUPPORTED_WIRE_VERSION;\n  const serverVersionLowEnough =\n    !Number.isNaN(minWireVersion) && minWireVersion <= MAX_SUPPORTED_WIRE_VERSION;\n\n  if (serverVersionHighEnough) {\n    if (serverVersionLowEnough) {\n      return null;\n    }\n\n    const message = `Server at ${options.hostAddress} reports minimum wire version ${JSON.stringify(\n      hello.minWireVersion\n    )}, but this version of the Node.js Driver requires at most ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n    return new MongoCompatibilityError(message);\n  }\n\n  const message = `Server at ${options.hostAddress} reports maximum wire version ${\n    JSON.stringify(hello.maxWireVersion) ?? 0\n  }, but this version of the Node.js Driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION})`;\n  return new MongoCompatibilityError(message);\n}\n\nasync function performInitialHandshake(\n  conn: Connection,\n  options: ConnectionOptions\n): Promise<void> {\n  const credentials = options.credentials;\n\n  if (credentials) {\n    if (\n      !(credentials.mechanism === AuthMechanism.MONGODB_DEFAULT) &&\n      !AUTH_PROVIDERS.get(credentials.mechanism)\n    ) {\n      throw new MongoInvalidArgumentError(`AuthMechanism '${credentials.mechanism}' not supported`);\n    }\n  }\n\n  const authContext = new AuthContext(conn, credentials, options);\n  conn.authContext = authContext;\n\n  const handshakeDoc = await prepareHandshakeDocument(authContext);\n\n  // @ts-expect-error: TODO(NODE-5141): The options need to be filtered properly, Connection options differ from Command options\n  const handshakeOptions: CommandOptions = { ...options };\n  if (typeof options.connectTimeoutMS === 'number') {\n    // The handshake technically is a monitoring check, so its socket timeout should be connectTimeoutMS\n    handshakeOptions.socketTimeoutMS = options.connectTimeoutMS;\n  }\n\n  const start = new Date().getTime();\n  const response = await conn.commandAsync(ns('admin.$cmd'), handshakeDoc, handshakeOptions);\n\n  if (!('isWritablePrimary' in response)) {\n    // Provide hello-style response document.\n    response.isWritablePrimary = response[LEGACY_HELLO_COMMAND];\n  }\n\n  if (response.helloOk) {\n    conn.helloOk = true;\n  }\n\n  const supportedServerErr = checkSupportedServer(response, options);\n  if (supportedServerErr) {\n    throw supportedServerErr;\n  }\n\n  if (options.loadBalanced) {\n    if (!response.serviceId) {\n      throw new MongoCompatibilityError(\n        'Driver attempted to initialize in load balancing mode, ' +\n          'but the server does not support this mode.'\n      );\n    }\n  }\n\n  // NOTE: This is metadata attached to the connection while porting away from\n  //       handshake being done in the `Server` class. Likely, it should be\n  //       relocated, or at very least restructured.\n  conn.hello = response;\n  conn.lastHelloMS = new Date().getTime() - start;\n\n  if (!response.arbiterOnly && credentials) {\n    // store the response on auth context\n    authContext.response = response;\n\n    const resolvedCredentials = credentials.resolveAuthMechanism(response);\n    const provider = AUTH_PROVIDERS.get(resolvedCredentials.mechanism);\n    if (!provider) {\n      throw new MongoInvalidArgumentError(\n        `No AuthProvider for ${resolvedCredentials.mechanism} defined.`\n      );\n    }\n\n    try {\n      await provider.auth(authContext);\n    } catch (error) {\n      if (error instanceof MongoError) {\n        error.addErrorLabel(MongoErrorLabel.HandshakeError);\n        if (needsRetryableWriteLabel(error, response.maxWireVersion)) {\n          error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n        }\n      }\n      throw error;\n    }\n  }\n}\n\nexport interface HandshakeDocument extends Document {\n  /**\n   * @deprecated Use hello instead\n   */\n  ismaster?: boolean;\n  hello?: boolean;\n  helloOk?: boolean;\n  client: ClientMetadata;\n  compression: string[];\n  saslSupportedMechs?: string;\n  loadBalanced?: boolean;\n}\n\n/**\n * @internal\n *\n * This function is only exposed for testing purposes.\n */\nexport async function prepareHandshakeDocument(\n  authContext: AuthContext\n): Promise<HandshakeDocument> {\n  const options = authContext.options;\n  const compressors = options.compressors ? options.compressors : [];\n  const { serverApi } = authContext.connection;\n\n  const handshakeDoc: HandshakeDocument = {\n    [serverApi?.version ? 'hello' : LEGACY_HELLO_COMMAND]: 1,\n    helloOk: true,\n    client: options.metadata,\n    compression: compressors\n  };\n\n  if (options.loadBalanced === true) {\n    handshakeDoc.loadBalanced = true;\n  }\n\n  const credentials = authContext.credentials;\n  if (credentials) {\n    if (credentials.mechanism === AuthMechanism.MONGODB_DEFAULT && credentials.username) {\n      handshakeDoc.saslSupportedMechs = `${credentials.source}.${credentials.username}`;\n\n      const provider = AUTH_PROVIDERS.get(AuthMechanism.MONGODB_SCRAM_SHA256);\n      if (!provider) {\n        // This auth mechanism is always present.\n        throw new MongoInvalidArgumentError(\n          `No AuthProvider for ${AuthMechanism.MONGODB_SCRAM_SHA256} defined.`\n        );\n      }\n      return provider.prepare(handshakeDoc, authContext);\n    }\n    const provider = AUTH_PROVIDERS.get(credentials.mechanism);\n    if (!provider) {\n      throw new MongoInvalidArgumentError(`No AuthProvider for ${credentials.mechanism} defined.`);\n    }\n    return provider.prepare(handshakeDoc, authContext);\n  }\n  return handshakeDoc;\n}\n\n/** @public */\nexport const LEGAL_TLS_SOCKET_OPTIONS = [\n  'ALPNProtocols',\n  'ca',\n  'cert',\n  'checkServerIdentity',\n  'ciphers',\n  'crl',\n  'ecdhCurve',\n  'key',\n  'minDHSize',\n  'passphrase',\n  'pfx',\n  'rejectUnauthorized',\n  'secureContext',\n  'secureProtocol',\n  'servername',\n  'session'\n] as const;\n\n/** @public */\nexport const LEGAL_TCP_SOCKET_OPTIONS = [\n  'family',\n  'hints',\n  'localAddress',\n  'localPort',\n  'lookup'\n] as const;\n\nfunction parseConnectOptions(options: ConnectionOptions): SocketConnectOpts {\n  const hostAddress = options.hostAddress;\n  if (!hostAddress) throw new MongoInvalidArgumentError('Option \"hostAddress\" is required');\n\n  const result: Partial<net.TcpNetConnectOpts & net.IpcNetConnectOpts> = {};\n  for (const name of LEGAL_TCP_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  if (typeof hostAddress.socketPath === 'string') {\n    result.path = hostAddress.socketPath;\n    return result as net.IpcNetConnectOpts;\n  } else if (typeof hostAddress.host === 'string') {\n    result.host = hostAddress.host;\n    result.port = hostAddress.port;\n    return result as net.TcpNetConnectOpts;\n  } else {\n    // This should never happen since we set up HostAddresses\n    // But if we don't throw here the socket could hang until timeout\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Unexpected HostAddress ${JSON.stringify(hostAddress)}`);\n  }\n}\n\ntype MakeConnectionOptions = ConnectionOptions & { existingSocket?: Stream };\n\nfunction parseSslOptions(options: MakeConnectionOptions): TLSConnectionOpts {\n  const result: TLSConnectionOpts = parseConnectOptions(options);\n  // Merge in valid SSL options\n  for (const name of LEGAL_TLS_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  if (options.existingSocket) {\n    result.socket = options.existingSocket;\n  }\n\n  // Set default sni servername to be the same as host\n  if (result.servername == null && result.host && !net.isIP(result.host)) {\n    result.servername = result.host;\n  }\n\n  return result;\n}\n\nconst SOCKET_ERROR_EVENT_LIST = ['error', 'close', 'timeout', 'parseError'] as const;\ntype ErrorHandlerEventName = (typeof SOCKET_ERROR_EVENT_LIST)[number] | 'cancel';\nconst SOCKET_ERROR_EVENTS = new Set(SOCKET_ERROR_EVENT_LIST);\n\nfunction makeConnection(options: MakeConnectionOptions, _callback: Callback<Stream>) {\n  const useTLS = options.tls ?? false;\n  const keepAlive = options.keepAlive ?? true;\n  const socketTimeoutMS = options.socketTimeoutMS ?? Reflect.get(options, 'socketTimeout') ?? 0;\n  const noDelay = options.noDelay ?? true;\n  const connectTimeoutMS = options.connectTimeoutMS ?? 30000;\n  const rejectUnauthorized = options.rejectUnauthorized ?? true;\n  const keepAliveInitialDelay =\n    ((options.keepAliveInitialDelay ?? 120000) > socketTimeoutMS\n      ? Math.round(socketTimeoutMS / 2)\n      : options.keepAliveInitialDelay) ?? 120000;\n  const existingSocket = options.existingSocket;\n\n  let socket: Stream;\n  const callback: Callback<Stream> = function (err, ret) {\n    if (err && socket) {\n      socket.destroy();\n    }\n\n    _callback(err, ret);\n  };\n\n  if (options.proxyHost != null) {\n    // Currently, only Socks5 is supported.\n    return makeSocks5Connection(\n      {\n        ...options,\n        connectTimeoutMS // Should always be present for Socks5\n      },\n      callback\n    );\n  }\n\n  if (useTLS) {\n    const tlsSocket = tls.connect(parseSslOptions(options));\n    if (typeof tlsSocket.disableRenegotiation === 'function') {\n      tlsSocket.disableRenegotiation();\n    }\n    socket = tlsSocket;\n  } else if (existingSocket) {\n    // In the TLS case, parseSslOptions() sets options.socket to existingSocket,\n    // so we only need to handle the non-TLS case here (where existingSocket\n    // gives us all we need out of the box).\n    socket = existingSocket;\n  } else {\n    socket = net.createConnection(parseConnectOptions(options));\n  }\n\n  socket.setKeepAlive(keepAlive, keepAliveInitialDelay);\n  socket.setTimeout(connectTimeoutMS);\n  socket.setNoDelay(noDelay);\n\n  const connectEvent = useTLS ? 'secureConnect' : 'connect';\n  let cancellationHandler: (err: Error) => void;\n  function errorHandler(eventName: ErrorHandlerEventName) {\n    return (err: Error) => {\n      SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n      if (cancellationHandler && options.cancellationToken) {\n        options.cancellationToken.removeListener('cancel', cancellationHandler);\n      }\n\n      socket.removeListener(connectEvent, connectHandler);\n      callback(connectionFailureError(eventName, err));\n    };\n  }\n\n  function connectHandler() {\n    SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n    if (cancellationHandler && options.cancellationToken) {\n      options.cancellationToken.removeListener('cancel', cancellationHandler);\n    }\n\n    if ('authorizationError' in socket) {\n      if (socket.authorizationError && rejectUnauthorized) {\n        // TODO(NODE-5192): wrap this with a MongoError subclass\n        return callback(socket.authorizationError);\n      }\n    }\n\n    socket.setTimeout(0);\n    callback(undefined, socket);\n  }\n\n  SOCKET_ERROR_EVENTS.forEach(event => socket.once(event, errorHandler(event)));\n  if (options.cancellationToken) {\n    cancellationHandler = errorHandler('cancel');\n    options.cancellationToken.once('cancel', cancellationHandler);\n  }\n\n  if (existingSocket) {\n    process.nextTick(connectHandler);\n  } else {\n    socket.once(connectEvent, connectHandler);\n  }\n}\n\nfunction makeSocks5Connection(options: MakeConnectionOptions, callback: Callback<Stream>) {\n  const hostAddress = HostAddress.fromHostPort(\n    options.proxyHost ?? '', // proxyHost is guaranteed to set here\n    options.proxyPort ?? 1080\n  );\n\n  // First, connect to the proxy server itself:\n  makeConnection(\n    {\n      ...options,\n      hostAddress,\n      tls: false,\n      proxyHost: undefined\n    },\n    (err, rawSocket) => {\n      if (err) {\n        return callback(err);\n      }\n\n      const destination = parseConnectOptions(options) as net.TcpNetConnectOpts;\n      if (typeof destination.host !== 'string' || typeof destination.port !== 'number') {\n        return callback(\n          new MongoInvalidArgumentError('Can only make Socks5 connections to TCP hosts')\n        );\n      }\n\n      // Then, establish the Socks5 proxy connection:\n      SocksClient.createConnection({\n        existing_socket: rawSocket,\n        timeout: options.connectTimeoutMS,\n        command: 'connect',\n        destination: {\n          host: destination.host,\n          port: destination.port\n        },\n        proxy: {\n          // host and port are ignored because we pass existing_socket\n          host: 'iLoveJavaScript',\n          port: 0,\n          type: 5,\n          userId: options.proxyUsername || undefined,\n          password: options.proxyPassword || undefined\n        }\n      }).then(\n        ({ socket }) => {\n          // Finally, now treat the resulting duplex stream as the\n          // socket over which we send and receive wire protocol messages:\n          makeConnection(\n            {\n              ...options,\n              existingSocket: socket,\n              proxyHost: undefined\n            },\n            callback\n          );\n        },\n        error => callback(connectionFailureError('error', error))\n      );\n    }\n  );\n}\n\nfunction connectionFailureError(type: ErrorHandlerEventName, err: Error) {\n  switch (type) {\n    case 'error':\n      return new MongoNetworkError(err);\n    case 'timeout':\n      return new MongoNetworkTimeoutError('connection timed out');\n    case 'close':\n      return new MongoNetworkError('connection closed');\n    case 'cancel':\n      return new MongoNetworkError('connection establishment was cancelled');\n    default:\n      return new MongoNetworkError('unknown network error');\n  }\n}\n", "import type { ObjectId } from '../bson';\nimport {\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY\n} from '../constants';\nimport type { MongoError } from '../error';\nimport type { Connection } from './connection';\nimport type { ConnectionPool, ConnectionPoolOptions } from './connection_pool';\n\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nexport abstract class ConnectionPoolMonitoringEvent {\n  /** A timestamp when the event was created  */\n  time: Date;\n  /** The address (host/port pair) of the pool */\n  address: string;\n  /** @internal */\n  abstract name:\n    | typeof CONNECTION_CHECK_OUT_FAILED\n    | typeof CONNECTION_CHECK_OUT_STARTED\n    | typeof CONNECTION_CHECKED_IN\n    | typeof CONNECTION_CHECKED_OUT\n    | typeof CONNECTION_CLOSED\n    | typeof CONNECTION_CREATED\n    | typeof CONNECTION_POOL_CLEARED\n    | typeof CONNECTION_POOL_CLOSED\n    | typeof CONNECTION_POOL_CREATED\n    | typeof CONNECTION_POOL_READY\n    | typeof CONNECTION_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n}\n\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nexport class ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** The options used to create this connection pool */\n  options?: ConnectionPoolOptions;\n  /** @internal */\n  name = CONNECTION_POOL_CREATED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n    this.options = pool.options;\n  }\n}\n\n/**\n * An event published when a connection pool is ready\n * @public\n * @category Event\n */\nexport class ConnectionPoolReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_POOL_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nexport class ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_POOL_CLOSED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nexport class ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** A monotonically increasing, per-pool id for the newly created connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CREATED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: { id: number | '<monitor>' }) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nexport class ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nexport class ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** The reason the connection was closed */\n  reason: string;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = CONNECTION_CLOSED;\n  /** @internal */\n  error: MongoError | null;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    connection: Pick<Connection, 'id' | 'serviceId'>,\n    reason: 'idle' | 'stale' | 'poolClosed' | 'error',\n    error?: MongoError\n  ) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason;\n    this.serviceId = connection.serviceId;\n    this.error = error ?? null;\n  }\n}\n\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_CHECK_OUT_STARTED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  /** The reason the attempt to check out failed */\n  reason: string;\n  /** @internal */\n  error?: MongoError;\n  /** @internal */\n  name = CONNECTION_CHECK_OUT_FAILED;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    reason: 'poolClosed' | 'timeout' | 'connectionError',\n    error?: MongoError\n  ) {\n    super(pool);\n    this.reason = reason;\n    this.error = error;\n  }\n}\n\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CHECKED_OUT;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CHECKED_IN;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nexport class ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  serviceId?: ObjectId;\n\n  interruptInUseConnections?: boolean;\n  /** @internal */\n  name = CONNECTION_POOL_CLEARED;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    options: { serviceId?: ObjectId; interruptInUseConnections?: boolean } = {}\n  ) {\n    super(pool);\n    this.serviceId = options.serviceId;\n    this.interruptInUseConnections = options.interruptInUseConnections;\n  }\n}\n", "import { MongoDriverError, MongoErrorLabel, MongoNetworkError } from '../error';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  override get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error indicating a connection pool is currently paused\n * @category Error\n */\nexport class PoolClearedError extends MongoNetworkError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool, message?: string) {\n    const errorMessage = message\n      ? message\n      : `Connection pool for ${pool.address} was cleared because another operation failed with: \"${pool.serverError?.message}\"`;\n    super(errorMessage);\n    this.address = pool.address;\n\n    this.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n  }\n\n  override get name(): string {\n    return 'MongoPoolClearedError';\n  }\n}\n\n/**\n * An error indicating that a connection pool has been cleared after the monitor for that server timed out.\n * @category Error\n */\nexport class PoolClearedOnNetworkError extends PoolClearedError {\n  constructor(pool: ConnectionPool) {\n    super(pool, `Connection to ${pool.address} interrupted due to server monitor timeout`);\n  }\n\n  override get name(): string {\n    return 'PoolClearedOnNetworkError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(message: string, address: string) {\n    super(message);\n    this.address = address;\n  }\n\n  override get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n", "import { clearTimeout, setTimeout } from 'timers';\n\nimport type { ObjectId } from '../bson';\nimport {\n  APM_EVENTS,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY\n} from '../constants';\nimport {\n  type AnyError,\n  MONGODB_ERROR_CODES,\n  MongoError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoNetworkError,\n  MongoRuntimeError,\n  MongoServerError\n} from '../error';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport { type Callback, eachAsync, List, makeCounter } from '../utils';\nimport { AUTH_PROVIDERS, connect } from './connect';\nimport { Connection, type ConnectionEvents, type ConnectionOptions } from './connection';\nimport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './connection_pool_events';\nimport {\n  PoolClearedError,\n  PoolClearedOnNetworkError,\n  PoolClosedError,\n  WaitQueueTimeoutError\n} from './errors';\nimport { ConnectionPoolMetrics } from './metrics';\n\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kConnections = Symbol('connections');\n/** @internal */\nconst kPending = Symbol('pending');\n/** @internal */\nconst kCheckedOut = Symbol('checkedOut');\n/** @internal */\nconst kMinPoolSizeTimer = Symbol('minPoolSizeTimer');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kServiceGenerations = Symbol('serviceGenerations');\n/** @internal */\nconst kConnectionCounter = Symbol('connectionCounter');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kMetrics = Symbol('metrics');\n/** @internal */\nconst kProcessingWaitQueue = Symbol('processingWaitQueue');\n/** @internal */\nconst kPoolState = Symbol('poolState');\n\n/** @public */\nexport interface ConnectionPoolOptions extends Omit<ConnectionOptions, 'id' | 'generation'> {\n  /** The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections. */\n  maxPoolSize: number;\n  /** The minimum number of connections that MUST exist at any moment in a single connection pool. */\n  minPoolSize: number;\n  /** The maximum number of connections that may be in the process of being established concurrently by the connection pool. */\n  maxConnecting: number;\n  /** The maximum amount of time a connection should remain idle in the connection pool before being marked idle. */\n  maxIdleTimeMS: number;\n  /** The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit. */\n  waitQueueTimeoutMS: number;\n  /** If we are in load balancer mode. */\n  loadBalanced: boolean;\n  /** @internal */\n  minPoolSizeCheckFrequencyMS?: number;\n}\n\n/** @internal */\nexport interface WaitQueueMember {\n  callback: Callback<Connection>;\n  timer?: NodeJS.Timeout;\n  [kCancelled]?: boolean;\n}\n\n/** @internal */\nexport const PoolState = Object.freeze({\n  paused: 'paused',\n  ready: 'ready',\n  closed: 'closed'\n} as const);\n\n/** @public */\nexport interface CloseOptions {\n  force?: boolean;\n}\n\n/** @public */\nexport type ConnectionPoolEvents = {\n  connectionPoolCreated(event: ConnectionPoolCreatedEvent): void;\n  connectionPoolReady(event: ConnectionPoolReadyEvent): void;\n  connectionPoolClosed(event: ConnectionPoolClosedEvent): void;\n  connectionPoolCleared(event: ConnectionPoolClearedEvent): void;\n  connectionCreated(event: ConnectionCreatedEvent): void;\n  connectionReady(event: ConnectionReadyEvent): void;\n  connectionClosed(event: ConnectionClosedEvent): void;\n  connectionCheckOutStarted(event: ConnectionCheckOutStartedEvent): void;\n  connectionCheckOutFailed(event: ConnectionCheckOutFailedEvent): void;\n  connectionCheckedOut(event: ConnectionCheckedOutEvent): void;\n  connectionCheckedIn(event: ConnectionCheckedInEvent): void;\n} & Omit<ConnectionEvents, 'close' | 'message'>;\n\n/**\n * A pool of connections which dynamically resizes, and emit events related to pool activity\n * @internal\n */\nexport class ConnectionPool extends TypedEventEmitter<ConnectionPoolEvents> {\n  options: Readonly<ConnectionPoolOptions>;\n  [kPoolState]: (typeof PoolState)[keyof typeof PoolState];\n  [kServer]: Server;\n  [kConnections]: List<Connection>;\n  [kPending]: number;\n  [kCheckedOut]: Set<Connection>;\n  [kMinPoolSizeTimer]?: NodeJS.Timeout;\n  /**\n   * An integer representing the SDAM generation of the pool\n   */\n  [kGeneration]: number;\n  /**\n   * A map of generations to service ids\n   */\n  [kServiceGenerations]: Map<string, number>;\n  [kConnectionCounter]: Generator<number>;\n  [kCancellationToken]: CancellationToken;\n  [kWaitQueue]: List<WaitQueueMember>;\n  [kMetrics]: ConnectionPoolMetrics;\n  [kProcessingWaitQueue]: boolean;\n\n  /**\n   * Emitted when the connection pool is created.\n   * @event\n   */\n  static readonly CONNECTION_POOL_CREATED = CONNECTION_POOL_CREATED;\n  /**\n   * Emitted once when the connection pool is closed\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLOSED = CONNECTION_POOL_CLOSED;\n  /**\n   * Emitted each time the connection pool is cleared and it's generation incremented\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLEARED = CONNECTION_POOL_CLEARED;\n  /**\n   * Emitted each time the connection pool is marked ready\n   * @event\n   */\n  static readonly CONNECTION_POOL_READY = CONNECTION_POOL_READY;\n  /**\n   * Emitted when a connection is created.\n   * @event\n   */\n  static readonly CONNECTION_CREATED = CONNECTION_CREATED;\n  /**\n   * Emitted when a connection becomes established, and is ready to use\n   * @event\n   */\n  static readonly CONNECTION_READY = CONNECTION_READY;\n  /**\n   * Emitted when a connection is closed\n   * @event\n   */\n  static readonly CONNECTION_CLOSED = CONNECTION_CLOSED;\n  /**\n   * Emitted when an attempt to check out a connection begins\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_STARTED = CONNECTION_CHECK_OUT_STARTED;\n  /**\n   * Emitted when an attempt to check out a connection fails\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_FAILED = CONNECTION_CHECK_OUT_FAILED;\n  /**\n   * Emitted each time a connection is successfully checked out of the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_OUT = CONNECTION_CHECKED_OUT;\n  /**\n   * Emitted each time a connection is successfully checked into the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_IN = CONNECTION_CHECKED_IN;\n\n  constructor(server: Server, options: ConnectionPoolOptions) {\n    super();\n\n    this.options = Object.freeze({\n      ...options,\n      connectionType: Connection,\n      maxPoolSize: options.maxPoolSize ?? 100,\n      minPoolSize: options.minPoolSize ?? 0,\n      maxConnecting: options.maxConnecting ?? 2,\n      maxIdleTimeMS: options.maxIdleTimeMS ?? 0,\n      waitQueueTimeoutMS: options.waitQueueTimeoutMS ?? 0,\n      minPoolSizeCheckFrequencyMS: options.minPoolSizeCheckFrequencyMS ?? 100,\n      autoEncrypter: options.autoEncrypter,\n      metadata: options.metadata\n    });\n\n    if (this.options.minPoolSize > this.options.maxPoolSize) {\n      throw new MongoInvalidArgumentError(\n        'Connection pool minimum size must not be greater than maximum pool size'\n      );\n    }\n\n    this[kPoolState] = PoolState.paused;\n    this[kServer] = server;\n    this[kConnections] = new List();\n    this[kPending] = 0;\n    this[kCheckedOut] = new Set();\n    this[kMinPoolSizeTimer] = undefined;\n    this[kGeneration] = 0;\n    this[kServiceGenerations] = new Map();\n    this[kConnectionCounter] = makeCounter(1);\n    this[kCancellationToken] = new CancellationToken();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kWaitQueue] = new List();\n    this[kMetrics] = new ConnectionPoolMetrics();\n    this[kProcessingWaitQueue] = false;\n\n    this.mongoLogger = this[kServer].topology.client.mongoLogger;\n    this.component = 'connection';\n\n    process.nextTick(() => {\n      this.emitAndLog(ConnectionPool.CONNECTION_POOL_CREATED, new ConnectionPoolCreatedEvent(this));\n    });\n  }\n\n  /** The address of the endpoint the pool is connected to */\n  get address(): string {\n    return this.options.hostAddress.toString();\n  }\n\n  /**\n   * Check if the pool has been closed\n   *\n   * TODO(NODE-3263): We can remove this property once shell no longer needs it\n   */\n  get closed(): boolean {\n    return this[kPoolState] === PoolState.closed;\n  }\n\n  /** An integer representing the SDAM generation of the pool */\n  get generation(): number {\n    return this[kGeneration];\n  }\n\n  /** An integer expressing how many total connections (available + pending + in use) the pool currently has */\n  get totalConnectionCount(): number {\n    return (\n      this.availableConnectionCount + this.pendingConnectionCount + this.currentCheckedOutCount\n    );\n  }\n\n  /** An integer expressing how many connections are currently available in the pool. */\n  get availableConnectionCount(): number {\n    return this[kConnections].length;\n  }\n\n  get pendingConnectionCount(): number {\n    return this[kPending];\n  }\n\n  get currentCheckedOutCount(): number {\n    return this[kCheckedOut].size;\n  }\n\n  get waitQueueSize(): number {\n    return this[kWaitQueue].length;\n  }\n\n  get loadBalanced(): boolean {\n    return this.options.loadBalanced;\n  }\n\n  get serviceGenerations(): Map<string, number> {\n    return this[kServiceGenerations];\n  }\n\n  get serverError() {\n    return this[kServer].description.error;\n  }\n\n  /**\n   * This is exposed ONLY for use in mongosh, to enable\n   * killing all connections if a user quits the shell with\n   * operations in progress.\n   *\n   * This property may be removed as a part of NODE-3263.\n   */\n  get checkedOutConnections() {\n    return this[kCheckedOut];\n  }\n\n  /**\n   * Get the metrics information for the pool when a wait queue timeout occurs.\n   */\n  private waitQueueErrorMetrics(): string {\n    return this[kMetrics].info(this.options.maxPoolSize);\n  }\n\n  /**\n   * Set the pool state to \"ready\"\n   */\n  ready(): void {\n    if (this[kPoolState] !== PoolState.paused) {\n      return;\n    }\n    this[kPoolState] = PoolState.ready;\n    this.emitAndLog(ConnectionPool.CONNECTION_POOL_READY, new ConnectionPoolReadyEvent(this));\n    clearTimeout(this[kMinPoolSizeTimer]);\n    this.ensureMinPoolSize();\n  }\n\n  /**\n   * Check a connection out of this pool. The connection will continue to be tracked, but no reference to it\n   * will be held by the pool. This means that if a connection is checked out it MUST be checked back in or\n   * explicitly destroyed by the new owner.\n   */\n  checkOut(callback: Callback<Connection>): void {\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CHECK_OUT_STARTED,\n      new ConnectionCheckOutStartedEvent(this)\n    );\n\n    const waitQueueMember: WaitQueueMember = { callback };\n    const waitQueueTimeoutMS = this.options.waitQueueTimeoutMS;\n    if (waitQueueTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(this, 'timeout')\n        );\n        waitQueueMember.callback(\n          new WaitQueueTimeoutError(\n            this.loadBalanced\n              ? this.waitQueueErrorMetrics()\n              : 'Timed out while checking out a connection from connection pool',\n            this.address\n          )\n        );\n      }, waitQueueTimeoutMS);\n    }\n\n    this[kWaitQueue].push(waitQueueMember);\n    process.nextTick(() => this.processWaitQueue());\n  }\n\n  /**\n   * Check a connection into the pool.\n   *\n   * @param connection - The connection to check in\n   */\n  checkIn(connection: Connection): void {\n    if (!this[kCheckedOut].has(connection)) {\n      return;\n    }\n    const poolClosed = this.closed;\n    const stale = this.connectionIsStale(connection);\n    const willDestroy = !!(poolClosed || stale || connection.closed);\n\n    if (!willDestroy) {\n      connection.markAvailable();\n      this[kConnections].unshift(connection);\n    }\n\n    this[kCheckedOut].delete(connection);\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CHECKED_IN,\n      new ConnectionCheckedInEvent(this, connection)\n    );\n\n    if (willDestroy) {\n      const reason = connection.closed ? 'error' : poolClosed ? 'poolClosed' : 'stale';\n      this.destroyConnection(connection, reason);\n    }\n\n    process.nextTick(() => this.processWaitQueue());\n  }\n\n  /**\n   * Clear the pool\n   *\n   * Pool reset is handled by incrementing the pool's generation count. Any existing connection of a\n   * previous generation will eventually be pruned during subsequent checkouts.\n   */\n  clear(options: { serviceId?: ObjectId; interruptInUseConnections?: boolean } = {}): void {\n    if (this.closed) {\n      return;\n    }\n\n    // handle load balanced case\n    if (this.loadBalanced) {\n      const { serviceId } = options;\n      if (!serviceId) {\n        throw new MongoRuntimeError(\n          'ConnectionPool.clear() called in load balanced mode with no serviceId.'\n        );\n      }\n      const sid = serviceId.toHexString();\n      const generation = this.serviceGenerations.get(sid);\n      // Only need to worry if the generation exists, since it should\n      // always be there but typescript needs the check.\n      if (generation == null) {\n        throw new MongoRuntimeError('Service generations are required in load balancer mode.');\n      } else {\n        // Increment the generation for the service id.\n        this.serviceGenerations.set(sid, generation + 1);\n      }\n      this.emitAndLog(\n        ConnectionPool.CONNECTION_POOL_CLEARED,\n        new ConnectionPoolClearedEvent(this, { serviceId })\n      );\n      return;\n    }\n    // handle non load-balanced case\n    const interruptInUseConnections = options.interruptInUseConnections ?? false;\n    const oldGeneration = this[kGeneration];\n    this[kGeneration] += 1;\n    const alreadyPaused = this[kPoolState] === PoolState.paused;\n    this[kPoolState] = PoolState.paused;\n\n    this.clearMinPoolSizeTimer();\n    if (!alreadyPaused) {\n      this.emitAndLog(\n        ConnectionPool.CONNECTION_POOL_CLEARED,\n        new ConnectionPoolClearedEvent(this, {\n          interruptInUseConnections\n        })\n      );\n    }\n\n    if (interruptInUseConnections) {\n      process.nextTick(() => this.interruptInUseConnections(oldGeneration));\n    }\n\n    this.processWaitQueue();\n  }\n\n  /**\n   * Closes all stale in-use connections in the pool with a resumable PoolClearedOnNetworkError.\n   *\n   * Only connections where `connection.generation <= minGeneration` are killed.\n   */\n  private interruptInUseConnections(minGeneration: number) {\n    for (const connection of this[kCheckedOut]) {\n      if (connection.generation <= minGeneration) {\n        this.checkIn(connection);\n        connection.onError(new PoolClearedOnNetworkError(this));\n      }\n    }\n  }\n\n  /** Close the pool */\n  close(callback: Callback<void>): void;\n  close(options: CloseOptions, callback: Callback<void>): void;\n  close(_options?: CloseOptions | Callback<void>, _cb?: Callback<void>): void {\n    let options = _options as CloseOptions;\n    const callback = (_cb ?? _options) as Callback<void>;\n    if (typeof options === 'function') {\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n    if (this.closed) {\n      return callback();\n    }\n\n    // immediately cancel any in-flight connections\n    this[kCancellationToken].emit('cancel');\n\n    // end the connection counter\n    if (typeof this[kConnectionCounter].return === 'function') {\n      this[kConnectionCounter].return(undefined);\n    }\n\n    this[kPoolState] = PoolState.closed;\n    this.clearMinPoolSizeTimer();\n    this.processWaitQueue();\n\n    eachAsync<Connection>(\n      this[kConnections].toArray(),\n      (conn, cb) => {\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CLOSED,\n          new ConnectionClosedEvent(this, conn, 'poolClosed')\n        );\n        conn.destroy({ force: !!options.force }, cb);\n      },\n      err => {\n        this[kConnections].clear();\n        this.emitAndLog(ConnectionPool.CONNECTION_POOL_CLOSED, new ConnectionPoolClosedEvent(this));\n        callback(err);\n      }\n    );\n  }\n\n  /**\n   * Runs a lambda with an implicitly checked out connection, checking that connection back in when the lambda\n   * has completed by calling back.\n   *\n   * NOTE: please note the required signature of `fn`\n   *\n   * @remarks When in load balancer mode, connections can be pinned to cursors or transactions.\n   *   In these cases we pass the connection in to this method to ensure it is used and a new\n   *   connection is not checked out.\n   *\n   * @param conn - A pinned connection for use in load balancing mode.\n   * @param fn - A function which operates on a managed connection\n   * @param callback - The original callback\n   */\n  withConnection(\n    conn: Connection | undefined,\n    fn: WithConnectionCallback,\n    callback: Callback<Connection>\n  ): void {\n    if (conn) {\n      // use the provided connection, and do _not_ check it in after execution\n      fn(undefined, conn, (fnErr, result) => {\n        if (fnErr) {\n          return this.withReauthentication(fnErr, conn, fn, callback);\n        }\n        callback(undefined, result);\n      });\n      return;\n    }\n\n    this.checkOut((err, conn) => {\n      // don't callback with `err` here, we might want to act upon it inside `fn`\n      fn(err as MongoError, conn, (fnErr, result) => {\n        if (fnErr) {\n          if (conn) {\n            this.withReauthentication(fnErr, conn, fn, callback);\n          } else {\n            callback(fnErr);\n          }\n        } else {\n          callback(undefined, result);\n        }\n\n        if (conn) {\n          this.checkIn(conn);\n        }\n      });\n    });\n  }\n\n  private withReauthentication(\n    fnErr: AnyError,\n    conn: Connection,\n    fn: WithConnectionCallback,\n    callback: Callback<Connection>\n  ) {\n    if (fnErr instanceof MongoError && fnErr.code === MONGODB_ERROR_CODES.Reauthenticate) {\n      this.reauthenticate(conn, fn, (error, res) => {\n        if (error) {\n          return callback(error);\n        }\n        callback(undefined, res);\n      });\n    } else {\n      callback(fnErr);\n    }\n  }\n\n  /**\n   * Reauthenticate on the same connection and then retry the operation.\n   */\n  private reauthenticate(\n    connection: Connection,\n    fn: WithConnectionCallback,\n    callback: Callback\n  ): void {\n    const authContext = connection.authContext;\n    if (!authContext) {\n      return callback(new MongoRuntimeError('No auth context found on connection.'));\n    }\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      return callback(\n        new MongoMissingCredentialsError(\n          'Connection is missing credentials when asked to reauthenticate'\n        )\n      );\n    }\n    const resolvedCredentials = credentials.resolveAuthMechanism(connection.hello || undefined);\n    const provider = AUTH_PROVIDERS.get(resolvedCredentials.mechanism);\n    if (!provider) {\n      return callback(\n        new MongoMissingCredentialsError(\n          `Reauthenticate failed due to no auth provider for ${credentials.mechanism}`\n        )\n      );\n    }\n    provider.reauth(authContext).then(\n      () => {\n        fn(undefined, connection, (fnErr, fnResult) => {\n          if (fnErr) {\n            return callback(fnErr);\n          }\n          callback(undefined, fnResult);\n        });\n      },\n      error => callback(error)\n    );\n  }\n\n  /** Clear the min pool size timer */\n  private clearMinPoolSizeTimer(): void {\n    const minPoolSizeTimer = this[kMinPoolSizeTimer];\n    if (minPoolSizeTimer) {\n      clearTimeout(minPoolSizeTimer);\n    }\n  }\n\n  private destroyConnection(\n    connection: Connection,\n    reason: 'error' | 'idle' | 'stale' | 'poolClosed'\n  ) {\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CLOSED,\n      new ConnectionClosedEvent(this, connection, reason)\n    );\n    // destroy the connection\n    process.nextTick(() => connection.destroy({ force: false }));\n  }\n\n  private connectionIsStale(connection: Connection) {\n    const serviceId = connection.serviceId;\n    if (this.loadBalanced && serviceId) {\n      const sid = serviceId.toHexString();\n      const generation = this.serviceGenerations.get(sid);\n      return connection.generation !== generation;\n    }\n\n    return connection.generation !== this[kGeneration];\n  }\n\n  private connectionIsIdle(connection: Connection) {\n    return !!(this.options.maxIdleTimeMS && connection.idleTime > this.options.maxIdleTimeMS);\n  }\n\n  /**\n   * Destroys a connection if the connection is perished.\n   *\n   * @returns `true` if the connection was destroyed, `false` otherwise.\n   */\n  private destroyConnectionIfPerished(connection: Connection): boolean {\n    const isStale = this.connectionIsStale(connection);\n    const isIdle = this.connectionIsIdle(connection);\n    if (!isStale && !isIdle && !connection.closed) {\n      return false;\n    }\n    const reason = connection.closed ? 'error' : isStale ? 'stale' : 'idle';\n    this.destroyConnection(connection, reason);\n    return true;\n  }\n\n  private createConnection(callback: Callback<Connection>) {\n    const connectOptions: ConnectionOptions = {\n      ...this.options,\n      id: this[kConnectionCounter].next().value,\n      generation: this[kGeneration],\n      cancellationToken: this[kCancellationToken]\n    };\n\n    this[kPending]++;\n    // This is our version of a \"virtual\" no-I/O connection as the spec requires\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CREATED,\n      new ConnectionCreatedEvent(this, { id: connectOptions.id })\n    );\n\n    connect(connectOptions, (err, connection) => {\n      if (err || !connection) {\n        this[kPending]--;\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CLOSED,\n          new ConnectionClosedEvent(\n            this,\n            { id: connectOptions.id, serviceId: undefined },\n            'error',\n            // TODO(NODE-5192): Remove this cast\n            err as MongoError\n          )\n        );\n        if (err instanceof MongoNetworkError || err instanceof MongoServerError) {\n          err.connectionGeneration = connectOptions.generation;\n        }\n        callback(err ?? new MongoRuntimeError('Connection creation failed without error'));\n        return;\n      }\n\n      // The pool might have closed since we started trying to create a connection\n      if (this[kPoolState] !== PoolState.ready) {\n        this[kPending]--;\n        connection.destroy({ force: true });\n        callback(this.closed ? new PoolClosedError(this) : new PoolClearedError(this));\n        return;\n      }\n\n      // forward all events from the connection to the pool\n      for (const event of [...APM_EVENTS, Connection.CLUSTER_TIME_RECEIVED]) {\n        connection.on(event, (e: any) => this.emit(event, e));\n      }\n\n      if (this.loadBalanced) {\n        connection.on(Connection.PINNED, pinType => this[kMetrics].markPinned(pinType));\n        connection.on(Connection.UNPINNED, pinType => this[kMetrics].markUnpinned(pinType));\n\n        const serviceId = connection.serviceId;\n        if (serviceId) {\n          let generation;\n          const sid = serviceId.toHexString();\n          if ((generation = this.serviceGenerations.get(sid))) {\n            connection.generation = generation;\n          } else {\n            this.serviceGenerations.set(sid, 0);\n            connection.generation = 0;\n          }\n        }\n      }\n\n      connection.markAvailable();\n      this.emitAndLog(ConnectionPool.CONNECTION_READY, new ConnectionReadyEvent(this, connection));\n\n      this[kPending]--;\n      callback(undefined, connection);\n      return;\n    });\n  }\n\n  private ensureMinPoolSize() {\n    const minPoolSize = this.options.minPoolSize;\n    if (this[kPoolState] !== PoolState.ready || minPoolSize === 0) {\n      return;\n    }\n\n    this[kConnections].prune(connection => this.destroyConnectionIfPerished(connection));\n\n    if (\n      this.totalConnectionCount < minPoolSize &&\n      this.pendingConnectionCount < this.options.maxConnecting\n    ) {\n      // NOTE: ensureMinPoolSize should not try to get all the pending\n      // connection permits because that potentially delays the availability of\n      // the connection to a checkout request\n      this.createConnection((err, connection) => {\n        if (err) {\n          this[kServer].handleError(err);\n        }\n        if (!err && connection) {\n          this[kConnections].push(connection);\n          process.nextTick(() => this.processWaitQueue());\n        }\n        if (this[kPoolState] === PoolState.ready) {\n          clearTimeout(this[kMinPoolSizeTimer]);\n          this[kMinPoolSizeTimer] = setTimeout(\n            () => this.ensureMinPoolSize(),\n            this.options.minPoolSizeCheckFrequencyMS\n          );\n        }\n      });\n    } else {\n      clearTimeout(this[kMinPoolSizeTimer]);\n      this[kMinPoolSizeTimer] = setTimeout(\n        () => this.ensureMinPoolSize(),\n        this.options.minPoolSizeCheckFrequencyMS\n      );\n    }\n  }\n\n  private processWaitQueue() {\n    if (this[kProcessingWaitQueue]) {\n      return;\n    }\n    this[kProcessingWaitQueue] = true;\n\n    while (this.waitQueueSize) {\n      const waitQueueMember = this[kWaitQueue].first();\n      if (!waitQueueMember) {\n        this[kWaitQueue].shift();\n        continue;\n      }\n\n      if (waitQueueMember[kCancelled]) {\n        this[kWaitQueue].shift();\n        continue;\n      }\n\n      if (this[kPoolState] !== PoolState.ready) {\n        const reason = this.closed ? 'poolClosed' : 'connectionError';\n        const error = this.closed ? new PoolClosedError(this) : new PoolClearedError(this);\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(this, reason, error)\n        );\n        if (waitQueueMember.timer) {\n          clearTimeout(waitQueueMember.timer);\n        }\n        this[kWaitQueue].shift();\n        waitQueueMember.callback(error);\n        continue;\n      }\n\n      if (!this.availableConnectionCount) {\n        break;\n      }\n\n      const connection = this[kConnections].shift();\n      if (!connection) {\n        break;\n      }\n\n      if (!this.destroyConnectionIfPerished(connection)) {\n        this[kCheckedOut].add(connection);\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECKED_OUT,\n          new ConnectionCheckedOutEvent(this, connection)\n        );\n        if (waitQueueMember.timer) {\n          clearTimeout(waitQueueMember.timer);\n        }\n\n        this[kWaitQueue].shift();\n        waitQueueMember.callback(undefined, connection);\n      }\n    }\n\n    const { maxPoolSize, maxConnecting } = this.options;\n    while (\n      this.waitQueueSize > 0 &&\n      this.pendingConnectionCount < maxConnecting &&\n      (maxPoolSize === 0 || this.totalConnectionCount < maxPoolSize)\n    ) {\n      const waitQueueMember = this[kWaitQueue].shift();\n      if (!waitQueueMember || waitQueueMember[kCancelled]) {\n        continue;\n      }\n      this.createConnection((err, connection) => {\n        if (waitQueueMember[kCancelled]) {\n          if (!err && connection) {\n            this[kConnections].push(connection);\n          }\n        } else {\n          if (err) {\n            this.emitAndLog(\n              ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n              // TODO(NODE-5192): Remove this cast\n              new ConnectionCheckOutFailedEvent(this, 'connectionError', err as MongoError)\n            );\n          } else if (connection) {\n            this[kCheckedOut].add(connection);\n            this.emitAndLog(\n              ConnectionPool.CONNECTION_CHECKED_OUT,\n              new ConnectionCheckedOutEvent(this, connection)\n            );\n          }\n\n          if (waitQueueMember.timer) {\n            clearTimeout(waitQueueMember.timer);\n          }\n          waitQueueMember.callback(err, connection);\n        }\n        process.nextTick(() => this.processWaitQueue());\n      });\n    }\n    this[kProcessingWaitQueue] = false;\n  }\n}\n\n/**\n * A callback provided to `withConnection`\n * @internal\n *\n * @param error - An error instance representing the error during the execution.\n * @param connection - The managed connection which was checked out of the pool.\n * @param callback - A function to call back after connection management is complete\n */\nexport type WithConnectionCallback = (\n  error: MongoError | undefined,\n  connection: Connection | undefined,\n  callback: Callback<Connection>\n) => void;\n", "import { clearTimeout, setTimeout } from 'timers';\n\nimport { type Document, Long } from '../bson';\nimport { connect } from '../cmap/connect';\nimport { Connection, type ConnectionOptions } from '../cmap/connection';\nimport { LEGACY_HELLO_COMMAND } from '../constants';\nimport { MongoError, MongoErrorLabel, MongoNetworkTimeoutError } from '../error';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport type { Callback, EventEmitterWithState } from '../utils';\nimport { calculateDurationInMs, makeStateMachine, now, ns } from '../utils';\nimport { ServerType, STATE_CLOSED, STATE_CLOSING } from './common';\nimport {\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent\n} from './events';\nimport { Server } from './server';\nimport type { TopologyVersion } from './server_description';\n\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kMonitorId = Symbol('monitorId');\n/** @internal */\nconst kConnection = Symbol('connection');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kRTTPinger = Symbol('rttPinger');\n/** @internal */\nconst kRoundTripTime = Symbol('roundTripTime');\n\nconst STATE_IDLE = 'idle';\nconst STATE_MONITORING = 'monitoring';\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_IDLE, STATE_CLOSED],\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_MONITORING],\n  [STATE_IDLE]: [STATE_IDLE, STATE_MONITORING, STATE_CLOSING],\n  [STATE_MONITORING]: [STATE_MONITORING, STATE_IDLE, STATE_CLOSING]\n});\n\nconst INVALID_REQUEST_CHECK_STATES = new Set([STATE_CLOSING, STATE_CLOSED, STATE_MONITORING]);\nfunction isInCloseState(monitor: Monitor) {\n  return monitor.s.state === STATE_CLOSED || monitor.s.state === STATE_CLOSING;\n}\n\n/** @internal */\nexport interface MonitorPrivate {\n  state: string;\n}\n\n/** @public */\nexport interface MonitorOptions\n  extends Omit<ConnectionOptions, 'id' | 'generation' | 'hostAddress'> {\n  connectTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n}\n\n/** @public */\nexport type MonitorEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  resetServer(error?: MongoError): void;\n  resetConnectionPool(): void;\n  close(): void;\n} & EventEmitterWithState;\n\n/** @internal */\nexport class Monitor extends TypedEventEmitter<MonitorEvents> {\n  /** @internal */\n  s: MonitorPrivate;\n  address: string;\n  options: Readonly<\n    Pick<MonitorOptions, 'connectTimeoutMS' | 'heartbeatFrequencyMS' | 'minHeartbeatFrequencyMS'>\n  >;\n  connectOptions: ConnectionOptions;\n  [kServer]: Server;\n  [kConnection]?: Connection;\n  [kCancellationToken]: CancellationToken;\n  /** @internal */\n  [kMonitorId]?: MonitorInterval;\n  [kRTTPinger]?: RTTPinger;\n\n  get connection(): Connection | undefined {\n    return this[kConnection];\n  }\n\n  constructor(server: Server, options: MonitorOptions) {\n    super();\n\n    this[kServer] = server;\n    this[kConnection] = undefined;\n    this[kCancellationToken] = new CancellationToken();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kMonitorId] = undefined;\n    this.s = {\n      state: STATE_CLOSED\n    };\n\n    this.address = server.description.address;\n    this.options = Object.freeze({\n      connectTimeoutMS: options.connectTimeoutMS ?? 10000,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS ?? 10000,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS ?? 500\n    });\n\n    const cancellationToken = this[kCancellationToken];\n    // TODO: refactor this to pull it directly from the pool, requires new ConnectionPool integration\n    const connectOptions = Object.assign(\n      {\n        id: '<monitor>' as const,\n        generation: server.pool.generation,\n        connectionType: Connection,\n        cancellationToken,\n        hostAddress: server.description.hostAddress\n      },\n      options,\n      // force BSON serialization options\n      {\n        raw: false,\n        useBigInt64: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: true\n      }\n    );\n\n    // ensure no authentication is used for monitoring\n    delete connectOptions.credentials;\n    if (connectOptions.autoEncrypter) {\n      delete connectOptions.autoEncrypter;\n    }\n\n    this.connectOptions = Object.freeze(connectOptions);\n  }\n\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    // start\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = new MonitorInterval(monitorServer(this), {\n      heartbeatFrequencyMS: heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: minHeartbeatFrequencyMS,\n      immediate: true\n    });\n  }\n\n  requestCheck(): void {\n    if (INVALID_REQUEST_CHECK_STATES.has(this.s.state)) {\n      return;\n    }\n\n    this[kMonitorId]?.wake();\n  }\n\n  reset(): void {\n    const topologyVersion = this[kServer].description.topologyVersion;\n    if (isInCloseState(this) || topologyVersion == null) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // restart monitor\n    stateTransition(this, STATE_IDLE);\n\n    // restart monitoring\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = new MonitorInterval(monitorServer(this), {\n      heartbeatFrequencyMS: heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: minHeartbeatFrequencyMS\n    });\n  }\n\n  close(): void {\n    if (isInCloseState(this)) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // close monitor\n    this.emit('close');\n    stateTransition(this, STATE_CLOSED);\n  }\n}\n\nfunction resetMonitorState(monitor: Monitor) {\n  monitor[kMonitorId]?.stop();\n  monitor[kMonitorId] = undefined;\n\n  monitor[kRTTPinger]?.close();\n  monitor[kRTTPinger] = undefined;\n\n  monitor[kCancellationToken].emit('cancel');\n\n  monitor[kConnection]?.destroy({ force: true });\n  monitor[kConnection] = undefined;\n}\n\nfunction checkServer(monitor: Monitor, callback: Callback<Document | null>) {\n  let start = now();\n  monitor.emit(Server.SERVER_HEARTBEAT_STARTED, new ServerHeartbeatStartedEvent(monitor.address));\n\n  function failureHandler(err: Error) {\n    monitor[kConnection]?.destroy({ force: true });\n    monitor[kConnection] = undefined;\n\n    monitor.emit(\n      Server.SERVER_HEARTBEAT_FAILED,\n      new ServerHeartbeatFailedEvent(monitor.address, calculateDurationInMs(start), err)\n    );\n\n    const error = !(err instanceof MongoError) ? new MongoError(err) : err;\n    error.addErrorLabel(MongoErrorLabel.ResetPool);\n    if (error instanceof MongoNetworkTimeoutError) {\n      error.addErrorLabel(MongoErrorLabel.InterruptInUseConnections);\n    }\n\n    monitor.emit('resetServer', error);\n    callback(err);\n  }\n\n  const connection = monitor[kConnection];\n  if (connection && !connection.closed) {\n    const { serverApi, helloOk } = connection;\n    const connectTimeoutMS = monitor.options.connectTimeoutMS;\n    const maxAwaitTimeMS = monitor.options.heartbeatFrequencyMS;\n    const topologyVersion = monitor[kServer].description.topologyVersion;\n    const isAwaitable = topologyVersion != null;\n\n    const cmd = {\n      [serverApi?.version || helloOk ? 'hello' : LEGACY_HELLO_COMMAND]: 1,\n      ...(isAwaitable && topologyVersion\n        ? { maxAwaitTimeMS, topologyVersion: makeTopologyVersion(topologyVersion) }\n        : {})\n    };\n\n    const options = isAwaitable\n      ? {\n          socketTimeoutMS: connectTimeoutMS ? connectTimeoutMS + maxAwaitTimeMS : 0,\n          exhaustAllowed: true\n        }\n      : { socketTimeoutMS: connectTimeoutMS };\n\n    if (isAwaitable && monitor[kRTTPinger] == null) {\n      monitor[kRTTPinger] = new RTTPinger(\n        monitor[kCancellationToken],\n        Object.assign(\n          { heartbeatFrequencyMS: monitor.options.heartbeatFrequencyMS },\n          monitor.connectOptions\n        )\n      );\n    }\n\n    connection.command(ns('admin.$cmd'), cmd, options, (err, hello) => {\n      if (err) {\n        return failureHandler(err);\n      }\n\n      if (!('isWritablePrimary' in hello)) {\n        // Provide hello-style response document.\n        hello.isWritablePrimary = hello[LEGACY_HELLO_COMMAND];\n      }\n\n      const rttPinger = monitor[kRTTPinger];\n      const duration =\n        isAwaitable && rttPinger ? rttPinger.roundTripTime : calculateDurationInMs(start);\n\n      monitor.emit(\n        Server.SERVER_HEARTBEAT_SUCCEEDED,\n        new ServerHeartbeatSucceededEvent(monitor.address, duration, hello)\n      );\n\n      // if we are using the streaming protocol then we immediately issue another `started`\n      // event, otherwise the \"check\" is complete and return to the main monitor loop\n      if (isAwaitable && hello.topologyVersion) {\n        monitor.emit(\n          Server.SERVER_HEARTBEAT_STARTED,\n          new ServerHeartbeatStartedEvent(monitor.address)\n        );\n        start = now();\n      } else {\n        monitor[kRTTPinger]?.close();\n        monitor[kRTTPinger] = undefined;\n\n        callback(undefined, hello);\n      }\n    });\n\n    return;\n  }\n\n  // connecting does an implicit `hello`\n  connect(monitor.connectOptions, (err, conn) => {\n    if (err) {\n      monitor[kConnection] = undefined;\n\n      failureHandler(err);\n      return;\n    }\n\n    if (conn) {\n      // Tell the connection that we are using the streaming protocol so that the\n      // connection's message stream will only read the last hello on the buffer.\n      conn.isMonitoringConnection = true;\n\n      if (isInCloseState(monitor)) {\n        conn.destroy({ force: true });\n        return;\n      }\n\n      monitor[kConnection] = conn;\n      monitor.emit(\n        Server.SERVER_HEARTBEAT_SUCCEEDED,\n        new ServerHeartbeatSucceededEvent(monitor.address, calculateDurationInMs(start), conn.hello)\n      );\n\n      callback(undefined, conn.hello);\n    }\n  });\n}\n\nfunction monitorServer(monitor: Monitor) {\n  return (callback: Callback) => {\n    if (monitor.s.state === STATE_MONITORING) {\n      process.nextTick(callback);\n      return;\n    }\n    stateTransition(monitor, STATE_MONITORING);\n    function done() {\n      if (!isInCloseState(monitor)) {\n        stateTransition(monitor, STATE_IDLE);\n      }\n\n      callback();\n    }\n\n    checkServer(monitor, (err, hello) => {\n      if (err) {\n        // otherwise an error occurred on initial discovery, also bail\n        if (monitor[kServer].description.type === ServerType.Unknown) {\n          return done();\n        }\n      }\n\n      // if the check indicates streaming is supported, immediately reschedule monitoring\n      if (hello && hello.topologyVersion) {\n        setTimeout(() => {\n          if (!isInCloseState(monitor)) {\n            monitor[kMonitorId]?.wake();\n          }\n        }, 0);\n      }\n\n      done();\n    });\n  };\n}\n\nfunction makeTopologyVersion(tv: TopologyVersion) {\n  return {\n    processId: tv.processId,\n    // tests mock counter as just number, but in a real situation counter should always be a Long\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    counter: Long.isLong(tv.counter) ? tv.counter : Long.fromNumber(tv.counter)\n  };\n}\n\n/** @internal */\nexport interface RTTPingerOptions extends ConnectionOptions {\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport class RTTPinger {\n  /** @internal */\n  [kConnection]?: Connection;\n  /** @internal */\n  [kCancellationToken]: CancellationToken;\n  /** @internal */\n  [kRoundTripTime]: number;\n  /** @internal */\n  [kMonitorId]: NodeJS.Timeout;\n  closed: boolean;\n\n  constructor(cancellationToken: CancellationToken, options: RTTPingerOptions) {\n    this[kConnection] = undefined;\n    this[kCancellationToken] = cancellationToken;\n    this[kRoundTripTime] = 0;\n    this.closed = false;\n\n    const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n    this[kMonitorId] = setTimeout(() => measureRoundTripTime(this, options), heartbeatFrequencyMS);\n  }\n\n  get roundTripTime(): number {\n    return this[kRoundTripTime];\n  }\n\n  close(): void {\n    this.closed = true;\n    clearTimeout(this[kMonitorId]);\n\n    this[kConnection]?.destroy({ force: true });\n    this[kConnection] = undefined;\n  }\n}\n\nfunction measureRoundTripTime(rttPinger: RTTPinger, options: RTTPingerOptions) {\n  const start = now();\n  options.cancellationToken = rttPinger[kCancellationToken];\n  const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n\n  if (rttPinger.closed) {\n    return;\n  }\n\n  function measureAndReschedule(conn?: Connection) {\n    if (rttPinger.closed) {\n      conn?.destroy({ force: true });\n      return;\n    }\n\n    if (rttPinger[kConnection] == null) {\n      rttPinger[kConnection] = conn;\n    }\n\n    rttPinger[kRoundTripTime] = calculateDurationInMs(start);\n    rttPinger[kMonitorId] = setTimeout(\n      () => measureRoundTripTime(rttPinger, options),\n      heartbeatFrequencyMS\n    );\n  }\n\n  const connection = rttPinger[kConnection];\n  if (connection == null) {\n    connect(options, (err, conn) => {\n      if (err) {\n        rttPinger[kConnection] = undefined;\n        rttPinger[kRoundTripTime] = 0;\n        return;\n      }\n\n      measureAndReschedule(conn);\n    });\n\n    return;\n  }\n\n  connection.command(ns('admin.$cmd'), { [LEGACY_HELLO_COMMAND]: 1 }, undefined, err => {\n    if (err) {\n      rttPinger[kConnection] = undefined;\n      rttPinger[kRoundTripTime] = 0;\n      return;\n    }\n\n    measureAndReschedule();\n  });\n}\n\n/**\n * @internal\n */\nexport interface MonitorIntervalOptions {\n  /** The interval to execute a method on */\n  heartbeatFrequencyMS: number;\n  /** A minimum interval that must elapse before the method is called */\n  minHeartbeatFrequencyMS: number;\n  /** Whether the method should be called immediately when the interval is started  */\n  immediate: boolean;\n}\n\n/**\n * @internal\n */\nexport class MonitorInterval {\n  fn: (callback: Callback) => void;\n  timerId: NodeJS.Timeout | undefined;\n  lastExecutionEnded: number;\n  isExpeditedCallToFnScheduled = false;\n  stopped = false;\n  isExecutionInProgress = false;\n  hasExecutedOnce = false;\n\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n\n  constructor(fn: (callback: Callback) => void, options: Partial<MonitorIntervalOptions> = {}) {\n    this.fn = fn;\n    this.lastExecutionEnded = -Infinity;\n\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 1000;\n    this.minHeartbeatFrequencyMS = options.minHeartbeatFrequencyMS ?? 500;\n\n    if (options.immediate) {\n      this._executeAndReschedule();\n    } else {\n      this._reschedule(undefined);\n    }\n  }\n\n  wake() {\n    const currentTime = now();\n    const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n\n    // TODO(NODE-4674): Add error handling and logging to the monitor\n    if (timeSinceLastCall < 0) {\n      return this._executeAndReschedule();\n    }\n\n    if (this.isExecutionInProgress) {\n      return;\n    }\n\n    // debounce multiple calls to wake within the `minInterval`\n    if (this.isExpeditedCallToFnScheduled) {\n      return;\n    }\n\n    // reschedule a call as soon as possible, ensuring the call never happens\n    // faster than the `minInterval`\n    if (timeSinceLastCall < this.minHeartbeatFrequencyMS) {\n      this.isExpeditedCallToFnScheduled = true;\n      this._reschedule(this.minHeartbeatFrequencyMS - timeSinceLastCall);\n      return;\n    }\n\n    this._executeAndReschedule();\n  }\n\n  stop() {\n    this.stopped = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = undefined;\n    }\n\n    this.lastExecutionEnded = -Infinity;\n    this.isExpeditedCallToFnScheduled = false;\n  }\n\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  toJSON() {\n    const currentTime = now();\n    const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n    return {\n      timerId: this.timerId != null ? 'set' : 'cleared',\n      lastCallTime: this.lastExecutionEnded,\n      isExpeditedCheckScheduled: this.isExpeditedCallToFnScheduled,\n      stopped: this.stopped,\n      heartbeatFrequencyMS: this.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: this.minHeartbeatFrequencyMS,\n      currentTime,\n      timeSinceLastCall\n    };\n  }\n\n  private _reschedule(ms?: number) {\n    if (this.stopped) return;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.timerId = setTimeout(this._executeAndReschedule, ms || this.heartbeatFrequencyMS);\n  }\n\n  private _executeAndReschedule = () => {\n    if (this.stopped) return;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.isExpeditedCallToFnScheduled = false;\n    this.isExecutionInProgress = true;\n\n    this.fn(() => {\n      this.lastExecutionEnded = now();\n      this.isExecutionInProgress = false;\n      this._reschedule(this.heartbeatFrequencyMS);\n    });\n  };\n}\n", "import { promisify } from 'util';\n\nimport type { Document } from '../bson';\nimport { type CommandOptions, Connection, type DestroyOptions } from '../cmap/connection';\nimport {\n  ConnectionPool,\n  type ConnectionPoolEvents,\n  type ConnectionPoolOptions\n} from '../cmap/connection_pool';\nimport { PoolClearedError } from '../cmap/errors';\nimport {\n  APM_EVENTS,\n  CLOSED,\n  CMAP_EVENTS,\n  CONNECT,\n  DESCRIPTION_RECEIVED,\n  ENDED,\n  HEARTBEAT_EVENTS,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED\n} from '../constants';\nimport type { AutoEncrypter } from '../deps';\nimport {\n  type AnyError,\n  isNetworkErrorBeforeHandshake,\n  isNodeShuttingDownError,\n  isSDAMUnrecoverableError,\n  MongoError,\n  MongoErrorLabel,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  type MongoServerError,\n  MongoUnexpectedServerResponseError,\n  needsRetryableWriteLabel\n} from '../error';\nimport type { ServerApi } from '../mongo_client';\nimport { TypedEventEmitter } from '../mongo_types';\nimport type { GetMoreOptions } from '../operations/get_more';\nimport type { ClientSession } from '../sessions';\nimport { isTransactionCommand } from '../transactions';\nimport {\n  type Callback,\n  type EventEmitterWithState,\n  makeStateMachine,\n  maxWireVersion,\n  type MongoDBNamespace,\n  supportsRetryableWrites\n} from '../utils';\nimport {\n  type ClusterTime,\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTED,\n  STATE_CONNECTING,\n  TopologyType\n} from './common';\nimport type {\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent\n} from './events';\nimport { Monitor, type MonitorOptions } from './monitor';\nimport { compareTopologyVersion, ServerDescription } from './server_description';\nimport type { Topology } from './topology';\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nconst kMonitor = Symbol('monitor');\n\n/** @internal */\nexport type ServerOptions = Omit<ConnectionPoolOptions, 'id' | 'generation' | 'hostAddress'> &\n  MonitorOptions;\n\n/** @internal */\nexport interface ServerPrivate {\n  /** The server description for this server */\n  description: ServerDescription;\n  /** A copy of the options used to construct this instance */\n  options: ServerOptions;\n  /** The current state of the Server */\n  state: string;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n  /** A count of the operations currently running against the server. */\n  operationCount: number;\n}\n\n/** @public */\nexport type ServerEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(server: Server): void;\n  descriptionReceived(description: ServerDescription): void;\n  closed(): void;\n  ended(): void;\n} & ConnectionPoolEvents &\n  EventEmitterWithState;\n\n/** @internal */\nexport class Server extends TypedEventEmitter<ServerEvents> {\n  /** @internal */\n  s: ServerPrivate;\n  /** @internal */\n  topology: Topology;\n  /** @internal */\n  pool: ConnectionPool;\n  serverApi?: ServerApi;\n  hello?: Document;\n  commandAsync: (\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions\n  ) => Promise<Document | undefined>;\n  [kMonitor]: Monitor | null;\n\n  /** @event */\n  static readonly SERVER_HEARTBEAT_STARTED = SERVER_HEARTBEAT_STARTED;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_SUCCEEDED = SERVER_HEARTBEAT_SUCCEEDED;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_FAILED = SERVER_HEARTBEAT_FAILED;\n  /** @event */\n  static readonly CONNECT = CONNECT;\n  /** @event */\n  static readonly DESCRIPTION_RECEIVED = DESCRIPTION_RECEIVED;\n  /** @event */\n  static readonly CLOSED = CLOSED;\n  /** @event */\n  static readonly ENDED = ENDED;\n\n  /**\n   * Create a server\n   */\n  constructor(topology: Topology, description: ServerDescription, options: ServerOptions) {\n    super();\n\n    this.commandAsync = promisify(\n      (\n        ns: MongoDBNamespace,\n        cmd: Document,\n        options: CommandOptions,\n        callback: Callback<Document>\n      ) => this.command(ns, cmd, options, callback as any)\n    );\n\n    this.serverApi = options.serverApi;\n\n    const poolOptions = { hostAddress: description.hostAddress, ...options };\n\n    this.topology = topology;\n    this.pool = new ConnectionPool(this, poolOptions);\n\n    this.s = {\n      description,\n      options,\n      state: STATE_CLOSED,\n      operationCount: 0\n    };\n\n    for (const event of [...CMAP_EVENTS, ...APM_EVENTS]) {\n      this.pool.on(event, (e: any) => this.emit(event, e));\n    }\n\n    this.pool.on(Connection.CLUSTER_TIME_RECEIVED, (clusterTime: ClusterTime) => {\n      this.clusterTime = clusterTime;\n    });\n\n    if (this.loadBalanced) {\n      this[kMonitor] = null;\n      // monitoring is disabled in load balancing mode\n      return;\n    }\n\n    // create the monitor\n    // TODO(NODE-4144): Remove new variable for type narrowing\n    const monitor = new Monitor(this, this.s.options);\n    this[kMonitor] = monitor;\n\n    for (const event of HEARTBEAT_EVENTS) {\n      monitor.on(event, (e: any) => this.emit(event, e));\n    }\n\n    monitor.on('resetServer', (error: MongoError) => markServerUnknown(this, error));\n    monitor.on(Server.SERVER_HEARTBEAT_SUCCEEDED, (event: ServerHeartbeatSucceededEvent) => {\n      this.emit(\n        Server.DESCRIPTION_RECEIVED,\n        new ServerDescription(this.description.hostAddress, event.reply, {\n          roundTripTime: calculateRoundTripTime(this.description.roundTripTime, event.duration)\n        })\n      );\n\n      if (this.s.state === STATE_CONNECTING) {\n        stateTransition(this, STATE_CONNECTED);\n        this.emit(Server.CONNECT, this);\n      }\n    });\n  }\n\n  get clusterTime(): ClusterTime | undefined {\n    return this.topology.clusterTime;\n  }\n\n  set clusterTime(clusterTime: ClusterTime | undefined) {\n    this.topology.clusterTime = clusterTime;\n  }\n\n  get description(): ServerDescription {\n    return this.s.description;\n  }\n\n  get name(): string {\n    return this.s.description.address;\n  }\n\n  get autoEncrypter(): AutoEncrypter | undefined {\n    if (this.s.options && this.s.options.autoEncrypter) {\n      return this.s.options.autoEncrypter;\n    }\n    return;\n  }\n\n  get loadBalanced(): boolean {\n    return this.topology.description.type === TopologyType.LoadBalanced;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // If in load balancer mode we automatically set the server to\n    // a load balancer. It never transitions out of this state and\n    // has no monitor.\n    if (!this.loadBalanced) {\n      this[kMonitor]?.connect();\n    } else {\n      stateTransition(this, STATE_CONNECTED);\n      this.emit(Server.CONNECT, this);\n    }\n  }\n\n  /** Destroy the server connection */\n  destroy(options?: DestroyOptions, callback?: Callback): void {\n    if (typeof options === 'function') {\n      callback = options;\n      options = { force: false };\n    }\n    options = Object.assign({}, { force: false }, options);\n\n    if (this.s.state === STATE_CLOSED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    if (!this.loadBalanced) {\n      this[kMonitor]?.close();\n    }\n\n    this.pool.close(options, err => {\n      stateTransition(this, STATE_CLOSED);\n      this.emit('closed');\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n    });\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  requestCheck(): void {\n    if (!this.loadBalanced) {\n      this[kMonitor]?.requestCheck();\n    }\n  }\n\n  /**\n   * Execute a command\n   * @internal\n   */\n  command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions,\n    callback: Callback<Document>\n  ): void {\n    if (callback == null) {\n      throw new MongoInvalidArgumentError('Callback must be provided');\n    }\n\n    if (ns.db == null || typeof ns === 'string') {\n      throw new MongoInvalidArgumentError('Namespace must not be a string');\n    }\n\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoServerClosedError());\n      return;\n    }\n\n    // Clone the options\n    const finalOptions = Object.assign({}, options, { wireProtocolCommand: false });\n\n    // There are cases where we need to flag the read preference not to get sent in\n    // the command, such as pre-5.0 servers attempting to perform an aggregate write\n    // with a non-primary read preference. In this case the effective read preference\n    // (primary) is not the same as the provided and must be removed completely.\n    if (finalOptions.omitReadPreference) {\n      delete finalOptions.readPreference;\n    }\n\n    const session = finalOptions.session;\n    const conn = session?.pinnedConnection;\n\n    // NOTE: This is a hack! We can't retrieve the connections used for executing an operation\n    //       (and prevent them from being checked back in) at the point of operation execution.\n    //       This should be considered as part of the work for NODE-2882\n    // NOTE:\n    //       When incrementing operation count, it's important that we increment it before we\n    //       attempt to check out a connection from the pool.  This ensures that operations that\n    //       are waiting for a connection are included in the operation count.  Load balanced\n    //       mode will only ever have a single server, so the operation count doesn't matter.\n    //       Incrementing the operation count above the logic to handle load balanced mode would\n    //       require special logic to decrement it again, or would double increment (the load\n    //       balanced code makes a recursive call).  Instead, we increment the count after this\n    //       check.\n    if (this.loadBalanced && session && conn == null && isPinnableCommand(cmd, session)) {\n      this.pool.checkOut((err, checkedOut) => {\n        if (err || checkedOut == null) {\n          if (callback) return callback(err);\n          return;\n        }\n\n        session.pin(checkedOut);\n        this.command(ns, cmd, finalOptions, callback);\n      });\n      return;\n    }\n\n    this.incrementOperationCount();\n\n    this.pool.withConnection(\n      conn,\n      (err, conn, cb) => {\n        if (err || !conn) {\n          this.decrementOperationCount();\n          if (!err) {\n            return cb(new MongoRuntimeError('Failed to create connection without error'));\n          }\n          if (!(err instanceof PoolClearedError)) {\n            this.handleError(err);\n          }\n          return cb(err);\n        }\n\n        conn.command(\n          ns,\n          cmd,\n          finalOptions,\n          makeOperationHandler(this, conn, cmd, finalOptions, (error, response) => {\n            this.decrementOperationCount();\n            cb(error, response);\n          })\n        );\n      },\n      callback\n    );\n  }\n\n  /**\n   * Handle SDAM error\n   * @internal\n   */\n  handleError(error: AnyError, connection?: Connection) {\n    if (!(error instanceof MongoError)) {\n      return;\n    }\n\n    const isStaleError =\n      error.connectionGeneration && error.connectionGeneration < this.pool.generation;\n    if (isStaleError) {\n      return;\n    }\n\n    const isNetworkNonTimeoutError =\n      error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError);\n    const isNetworkTimeoutBeforeHandshakeError = isNetworkErrorBeforeHandshake(error);\n    const isAuthHandshakeError = error.hasErrorLabel(MongoErrorLabel.HandshakeError);\n    if (isNetworkNonTimeoutError || isNetworkTimeoutBeforeHandshakeError || isAuthHandshakeError) {\n      // In load balanced mode we never mark the server as unknown and always\n      // clear for the specific service id.\n      if (!this.loadBalanced) {\n        error.addErrorLabel(MongoErrorLabel.ResetPool);\n        markServerUnknown(this, error);\n      } else if (connection) {\n        this.pool.clear({ serviceId: connection.serviceId });\n      }\n    } else {\n      if (isSDAMUnrecoverableError(error)) {\n        if (shouldHandleStateChangeError(this, error)) {\n          const shouldClearPool = maxWireVersion(this) <= 7 || isNodeShuttingDownError(error);\n          if (this.loadBalanced && connection && shouldClearPool) {\n            this.pool.clear({ serviceId: connection.serviceId });\n          }\n\n          if (!this.loadBalanced) {\n            if (shouldClearPool) {\n              error.addErrorLabel(MongoErrorLabel.ResetPool);\n            }\n            markServerUnknown(this, error);\n            process.nextTick(() => this.requestCheck());\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Decrement the operation count, returning the new count.\n   */\n  private decrementOperationCount(): number {\n    return (this.s.operationCount -= 1);\n  }\n\n  /**\n   * Increment the operation count, returning the new count.\n   */\n  private incrementOperationCount(): number {\n    return (this.s.operationCount += 1);\n  }\n}\n\nfunction calculateRoundTripTime(oldRtt: number, duration: number): number {\n  if (oldRtt === -1) {\n    return duration;\n  }\n\n  const alpha = 0.2;\n  return alpha * duration + (1 - alpha) * oldRtt;\n}\n\nfunction markServerUnknown(server: Server, error?: MongoServerError) {\n  // Load balancer servers can never be marked unknown.\n  if (server.loadBalanced) {\n    return;\n  }\n\n  if (error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError)) {\n    server[kMonitor]?.reset();\n  }\n\n  server.emit(\n    Server.DESCRIPTION_RECEIVED,\n    new ServerDescription(server.description.hostAddress, undefined, { error })\n  );\n}\n\nfunction isPinnableCommand(cmd: Document, session?: ClientSession): boolean {\n  if (session) {\n    return (\n      session.inTransaction() ||\n      'aggregate' in cmd ||\n      'find' in cmd ||\n      'getMore' in cmd ||\n      'listCollections' in cmd ||\n      'listIndexes' in cmd\n    );\n  }\n\n  return false;\n}\n\nfunction connectionIsStale(pool: ConnectionPool, connection: Connection) {\n  if (connection.serviceId) {\n    return (\n      connection.generation !== pool.serviceGenerations.get(connection.serviceId.toHexString())\n    );\n  }\n\n  return connection.generation !== pool.generation;\n}\n\nfunction shouldHandleStateChangeError(server: Server, err: MongoError) {\n  const etv = err.topologyVersion;\n  const stv = server.description.topologyVersion;\n  return compareTopologyVersion(stv, etv) < 0;\n}\n\nfunction inActiveTransaction(session: ClientSession | undefined, cmd: Document) {\n  return session && session.inTransaction() && !isTransactionCommand(cmd);\n}\n\n/** this checks the retryWrites option passed down from the client options, it\n * does not check if the server supports retryable writes */\nfunction isRetryableWritesEnabled(topology: Topology) {\n  return topology.s.options.retryWrites !== false;\n}\n\nfunction makeOperationHandler(\n  server: Server,\n  connection: Connection,\n  cmd: Document,\n  options: CommandOptions | GetMoreOptions | undefined,\n  callback: Callback\n): Callback {\n  const session = options?.session;\n  return function handleOperationResult(error, result) {\n    // We should not swallow an error if it is present.\n    if (error == null && result != null) {\n      return callback(undefined, result);\n    }\n\n    if (options != null && 'noResponse' in options && options.noResponse === true) {\n      return callback(undefined, null);\n    }\n\n    if (!error) {\n      return callback(new MongoUnexpectedServerResponseError('Empty response with no error'));\n    }\n\n    if (!(error instanceof MongoError)) {\n      // Node.js or some other error we have not special handling for\n      return callback(error);\n    }\n\n    if (connectionIsStale(server.pool, connection)) {\n      return callback(error);\n    }\n\n    if (error instanceof MongoNetworkError) {\n      if (session && !session.hasEnded && session.serverSession) {\n        session.serverSession.isDirty = true;\n      }\n\n      // inActiveTransaction check handles commit and abort.\n      if (\n        inActiveTransaction(session, cmd) &&\n        !error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.TransientTransactionError);\n      }\n\n      if (\n        (isRetryableWritesEnabled(server.topology) || isTransactionCommand(cmd)) &&\n        supportsRetryableWrites(server) &&\n        !inActiveTransaction(session, cmd)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n      }\n    } else {\n      if (\n        (isRetryableWritesEnabled(server.topology) || isTransactionCommand(cmd)) &&\n        needsRetryableWriteLabel(error, maxWireVersion(server)) &&\n        !inActiveTransaction(session, cmd)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n      }\n    }\n\n    if (\n      session &&\n      session.isPinned &&\n      error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n    ) {\n      session.unpin({ force: true });\n    }\n\n    server.handleError(error, connection);\n\n    return callback(error);\n  };\n}\n", "import * as dns from 'dns';\nimport { clearTimeout, setTimeout } from 'timers';\n\nimport { MongoRuntimeError } from '../error';\nimport { TypedEventEmitter } from '../mongo_types';\nimport { HostAddress, matchesParentDomain } from '../utils';\n\n/**\n * @internal\n * @category Event\n */\nexport class SrvPollingEvent {\n  srvRecords: dns.SrvRecord[];\n  constructor(srvRecords: dns.SrvRecord[]) {\n    this.srvRecords = srvRecords;\n  }\n\n  hostnames(): Set<string> {\n    return new Set(this.srvRecords.map(r => HostAddress.fromSrvRecord(r).toString()));\n  }\n}\n\n/** @internal */\nexport interface SrvPollerOptions {\n  srvServiceName: string;\n  srvMaxHosts: number;\n  srvHost: string;\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport type SrvPollerEvents = {\n  srvRecordDiscovery(event: SrvPollingEvent): void;\n};\n\n/** @internal */\nexport class SrvPoller extends TypedEventEmitter<SrvPollerEvents> {\n  srvHost: string;\n  rescanSrvIntervalMS: number;\n  heartbeatFrequencyMS: number;\n  haMode: boolean;\n  generation: number;\n  srvMaxHosts: number;\n  srvServiceName: string;\n  _timeout?: NodeJS.Timeout;\n\n  /** @event */\n  static readonly SRV_RECORD_DISCOVERY = 'srvRecordDiscovery' as const;\n\n  constructor(options: SrvPollerOptions) {\n    super();\n\n    if (!options || !options.srvHost) {\n      throw new MongoRuntimeError('Options for SrvPoller must exist and include srvHost');\n    }\n\n    this.srvHost = options.srvHost;\n    this.srvMaxHosts = options.srvMaxHosts ?? 0;\n    this.srvServiceName = options.srvServiceName ?? 'mongodb';\n    this.rescanSrvIntervalMS = 60000;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 10000;\n\n    this.haMode = false;\n    this.generation = 0;\n\n    this._timeout = undefined;\n  }\n\n  get srvAddress(): string {\n    return `_${this.srvServiceName}._tcp.${this.srvHost}`;\n  }\n\n  get intervalMS(): number {\n    return this.haMode ? this.heartbeatFrequencyMS : this.rescanSrvIntervalMS;\n  }\n\n  start(): void {\n    if (!this._timeout) {\n      this.schedule();\n    }\n  }\n\n  stop(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this.generation += 1;\n      this._timeout = undefined;\n    }\n  }\n\n  // TODO(NODE-4994): implement new logging logic for SrvPoller failures\n  schedule(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._poll().catch(() => null);\n    }, this.intervalMS);\n  }\n\n  success(srvRecords: dns.SrvRecord[]): void {\n    this.haMode = false;\n    this.schedule();\n    this.emit(SrvPoller.SRV_RECORD_DISCOVERY, new SrvPollingEvent(srvRecords));\n  }\n\n  failure(): void {\n    this.haMode = true;\n    this.schedule();\n  }\n\n  async _poll(): Promise<void> {\n    const generation = this.generation;\n    let srvRecords;\n\n    try {\n      srvRecords = await dns.promises.resolveSrv(this.srvAddress);\n    } catch (dnsError) {\n      this.failure();\n      return;\n    }\n\n    if (generation !== this.generation) {\n      return;\n    }\n\n    const finalAddresses: dns.SrvRecord[] = [];\n    for (const record of srvRecords) {\n      if (matchesParentDomain(record.name, this.srvHost)) {\n        finalAddresses.push(record);\n      }\n    }\n\n    if (!finalAddresses.length) {\n      this.failure();\n      return;\n    }\n\n    this.success(finalAddresses);\n  }\n}\n", "import { clearTimeout, setTimeout } from 'timers';\nimport { promisify } from 'util';\n\nimport type { BSONSerializeOptions, Document } from '../bson';\nimport type { MongoCredentials } from '../cmap/auth/mongo_credentials';\nimport type { ConnectionEvents, DestroyOptions } from '../cmap/connection';\nimport type { CloseOptions, ConnectionPoolEvents } from '../cmap/connection_pool';\nimport type { ClientMetadata } from '../cmap/handshake/client_metadata';\nimport { DEFAULT_OPTIONS, FEATURE_FLAGS } from '../connection_string';\nimport {\n  CLOSE,\n  CONNECT,\n  ERROR,\n  LOCAL_SERVER_EVENTS,\n  OPEN,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  SERVER_OPENING,\n  SERVER_RELAY_EVENTS,\n  TIMEOUT,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING\n} from '../constants';\nimport {\n  MongoCompatibilityError,\n  type MongoDriverError,\n  MongoError,\n  MongoErrorLabel,\n  MongoRuntimeError,\n  MongoServerSelectionError,\n  MongoTopologyClosedError\n} from '../error';\nimport type { MongoClient, ServerApi } from '../mongo_client';\nimport { TypedEventEmitter } from '../mongo_types';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport type { Transaction } from '../transactions';\nimport {\n  type Callback,\n  type EventEmitterWithState,\n  HostAddress,\n  List,\n  makeStateMachine,\n  ns,\n  shuffle\n} from '../utils';\nimport {\n  _advanceClusterTime,\n  type ClusterTime,\n  drainTimerQueue,\n  ServerType,\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTED,\n  STATE_CONNECTING,\n  type TimerQueue,\n  TopologyType\n} from './common';\nimport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './events';\nimport { Server, type ServerEvents, type ServerOptions } from './server';\nimport { compareTopologyVersion, ServerDescription } from './server_description';\nimport { readPreferenceServerSelector, type ServerSelector } from './server_selection';\nimport { SrvPoller, type SrvPollingEvent } from './srv_polling';\nimport { TopologyDescription } from './topology_description';\n\n// Global state\nlet globalTopologyCounter = 0;\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n\n/** @internal */\nexport type ServerSelectionCallback = Callback<Server>;\n\n/** @internal */\nexport interface ServerSelectionRequest {\n  serverSelector: ServerSelector;\n  transaction?: Transaction;\n  callback: ServerSelectionCallback;\n  timer?: NodeJS.Timeout;\n  [kCancelled]?: boolean;\n}\n\n/** @internal */\nexport interface TopologyPrivate {\n  /** the id of this topology */\n  id: number;\n  /** passed in options */\n  options: TopologyOptions;\n  /** initial seedlist of servers to connect to */\n  seedlist: HostAddress[];\n  /** initial state */\n  state: string;\n  /** the topology description */\n  description: TopologyDescription;\n  serverSelectionTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n  /** A map of server instances to normalized addresses */\n  servers: Map<string, Server>;\n  credentials?: MongoCredentials;\n  clusterTime?: ClusterTime;\n  /** timers created for the initial connect to a server */\n  connectionTimers: TimerQueue;\n\n  /** related to srv polling */\n  srvPoller?: SrvPoller;\n  detectShardedTopology: (event: TopologyDescriptionChangedEvent) => void;\n  detectSrvRecords: (event: SrvPollingEvent) => void;\n}\n\n/** @internal */\nexport interface TopologyOptions extends BSONSerializeOptions, ServerOptions {\n  srvMaxHosts: number;\n  srvServiceName: string;\n  hosts: HostAddress[];\n  retryWrites: boolean;\n  retryReads: boolean;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS: number;\n  /** The name of the replica set to connect to */\n  replicaSet?: string;\n  srvHost?: string;\n  srvPoller?: SrvPoller;\n  /** Indicates that a client should directly connect to a node without attempting to discover its topology type */\n  directConnection: boolean;\n  loadBalanced: boolean;\n  metadata: ClientMetadata;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n  [featureFlag: symbol]: any;\n}\n\n/** @public */\nexport interface ConnectOptions {\n  readPreference?: ReadPreference;\n}\n\n/** @public */\nexport interface SelectServerOptions {\n  readPreference?: ReadPreferenceLike;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS?: number;\n  session?: ClientSession;\n}\n\n/** @public */\nexport type TopologyEvents = {\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(topology: Topology): void;\n  serverOpening(event: ServerOpeningEvent): void;\n  serverClosed(event: ServerClosedEvent): void;\n  serverDescriptionChanged(event: ServerDescriptionChangedEvent): void;\n  topologyClosed(event: TopologyClosedEvent): void;\n  topologyOpening(event: TopologyOpeningEvent): void;\n  topologyDescriptionChanged(event: TopologyDescriptionChangedEvent): void;\n  error(error: Error): void;\n  /** @internal */\n  open(topology: Topology): void;\n  close(): void;\n  timeout(): void;\n} & Omit<ServerEvents, 'connect'> &\n  ConnectionPoolEvents &\n  ConnectionEvents &\n  EventEmitterWithState;\n/**\n * A container of server instances representing a connection to a MongoDB topology.\n * @internal\n */\nexport class Topology extends TypedEventEmitter<TopologyEvents> {\n  /** @internal */\n  s: TopologyPrivate;\n  /** @internal */\n  [kWaitQueue]: List<ServerSelectionRequest>;\n  /** @internal */\n  hello?: Document;\n  /** @internal */\n  _type?: string;\n\n  client!: MongoClient;\n\n  /** @event */\n  static readonly SERVER_OPENING = SERVER_OPENING;\n  /** @event */\n  static readonly SERVER_CLOSED = SERVER_CLOSED;\n  /** @event */\n  static readonly SERVER_DESCRIPTION_CHANGED = SERVER_DESCRIPTION_CHANGED;\n  /** @event */\n  static readonly TOPOLOGY_OPENING = TOPOLOGY_OPENING;\n  /** @event */\n  static readonly TOPOLOGY_CLOSED = TOPOLOGY_CLOSED;\n  /** @event */\n  static readonly TOPOLOGY_DESCRIPTION_CHANGED = TOPOLOGY_DESCRIPTION_CHANGED;\n  /** @event */\n  static readonly ERROR = ERROR;\n  /** @event */\n  static readonly OPEN = OPEN;\n  /** @event */\n  static readonly CONNECT = CONNECT;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /** @event */\n  static readonly TIMEOUT = TIMEOUT;\n\n  selectServerAsync: (\n    selector: string | ReadPreference | ServerSelector,\n    options: SelectServerOptions\n  ) => Promise<Server>;\n\n  /**\n   * @param seedlist - a list of HostAddress instances to connect to\n   */\n  constructor(\n    client: MongoClient,\n    seeds: string | string[] | HostAddress | HostAddress[],\n    options: TopologyOptions\n  ) {\n    super();\n\n    this.client = client;\n    this.selectServerAsync = promisify(\n      (\n        selector: string | ReadPreference | ServerSelector,\n        options: SelectServerOptions,\n        callback: (e: Error, r: Server) => void\n      ) => this.selectServer(selector, options, callback as any)\n    );\n\n    // Options should only be undefined in tests, MongoClient will always have defined options\n    options = options ?? {\n      hosts: [HostAddress.fromString('localhost:27017')],\n      ...Object.fromEntries(DEFAULT_OPTIONS.entries()),\n      ...Object.fromEntries(FEATURE_FLAGS.entries())\n    };\n\n    if (typeof seeds === 'string') {\n      seeds = [HostAddress.fromString(seeds)];\n    } else if (!Array.isArray(seeds)) {\n      seeds = [seeds];\n    }\n\n    const seedlist: HostAddress[] = [];\n    for (const seed of seeds) {\n      if (typeof seed === 'string') {\n        seedlist.push(HostAddress.fromString(seed));\n      } else if (seed instanceof HostAddress) {\n        seedlist.push(seed);\n      } else {\n        // FIXME(NODE-3483): May need to be a MongoParseError\n        throw new MongoRuntimeError(`Topology cannot be constructed from ${JSON.stringify(seed)}`);\n      }\n    }\n\n    const topologyType = topologyTypeFromOptions(options);\n    const topologyId = globalTopologyCounter++;\n\n    const selectedHosts =\n      options.srvMaxHosts == null ||\n      options.srvMaxHosts === 0 ||\n      options.srvMaxHosts >= seedlist.length\n        ? seedlist\n        : shuffle(seedlist, options.srvMaxHosts);\n\n    const serverDescriptions = new Map();\n    for (const hostAddress of selectedHosts) {\n      serverDescriptions.set(hostAddress.toString(), new ServerDescription(hostAddress));\n    }\n\n    this[kWaitQueue] = new List();\n    this.s = {\n      // the id of this topology\n      id: topologyId,\n      // passed in options\n      options,\n      // initial seedlist of servers to connect to\n      seedlist,\n      // initial state\n      state: STATE_CLOSED,\n      // the topology description\n      description: new TopologyDescription(\n        topologyType,\n        serverDescriptions,\n        options.replicaSet,\n        undefined,\n        undefined,\n        undefined,\n        options\n      ),\n      serverSelectionTimeoutMS: options.serverSelectionTimeoutMS,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS,\n      // a map of server instances to normalized addresses\n      servers: new Map(),\n      credentials: options?.credentials,\n      clusterTime: undefined,\n\n      // timer management\n      connectionTimers: new Set<NodeJS.Timeout>(),\n      detectShardedTopology: ev => this.detectShardedTopology(ev),\n      detectSrvRecords: ev => this.detectSrvRecords(ev)\n    };\n\n    if (options.srvHost && !options.loadBalanced) {\n      this.s.srvPoller =\n        options.srvPoller ??\n        new SrvPoller({\n          heartbeatFrequencyMS: this.s.heartbeatFrequencyMS,\n          srvHost: options.srvHost,\n          srvMaxHosts: options.srvMaxHosts,\n          srvServiceName: options.srvServiceName\n        });\n\n      this.on(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n    }\n  }\n\n  private detectShardedTopology(event: TopologyDescriptionChangedEvent) {\n    const previousType = event.previousDescription.type;\n    const newType = event.newDescription.type;\n\n    const transitionToSharded =\n      previousType !== TopologyType.Sharded && newType === TopologyType.Sharded;\n    const srvListeners = this.s.srvPoller?.listeners(SrvPoller.SRV_RECORD_DISCOVERY);\n    const listeningToSrvPolling = !!srvListeners?.includes(this.s.detectSrvRecords);\n\n    if (transitionToSharded && !listeningToSrvPolling) {\n      this.s.srvPoller?.on(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n      this.s.srvPoller?.start();\n    }\n  }\n\n  private detectSrvRecords(ev: SrvPollingEvent) {\n    const previousTopologyDescription = this.s.description;\n    this.s.description = this.s.description.updateFromSrvPollingEvent(\n      ev,\n      this.s.options.srvMaxHosts\n    );\n    if (this.s.description === previousTopologyDescription) {\n      // Nothing changed, so return\n      return;\n    }\n\n    updateServers(this);\n\n    this.emit(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        previousTopologyDescription,\n        this.s.description\n      )\n    );\n  }\n\n  /**\n   * @returns A `TopologyDescription` for this topology\n   */\n  get description(): TopologyDescription {\n    return this.s.description;\n  }\n\n  get loadBalanced(): boolean {\n    return this.s.options.loadBalanced;\n  }\n\n  get capabilities(): ServerCapabilities {\n    return new ServerCapabilities(this.lastHello());\n  }\n\n  /** Initiate server connect */\n  connect(callback: Callback): void;\n  connect(options: ConnectOptions, callback: Callback): void;\n  connect(options?: ConnectOptions | Callback, callback?: Callback): void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    if (this.s.state === STATE_CONNECTED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // emit SDAM monitoring events\n    this.emit(Topology.TOPOLOGY_OPENING, new TopologyOpeningEvent(this.s.id));\n\n    // emit an event for the topology change\n    this.emit(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        new TopologyDescription(TopologyType.Unknown), // initial is always Unknown\n        this.s.description\n      )\n    );\n\n    // connect all known servers, then attempt server selection to connect\n    const serverDescriptions = Array.from(this.s.description.servers.values());\n    this.s.servers = new Map(\n      serverDescriptions.map(serverDescription => [\n        serverDescription.address,\n        createAndConnectServer(this, serverDescription)\n      ])\n    );\n\n    // In load balancer mode we need to fake a server description getting\n    // emitted from the monitor, since the monitor doesn't exist.\n    if (this.s.options.loadBalanced) {\n      for (const description of serverDescriptions) {\n        const newDescription = new ServerDescription(description.hostAddress, undefined, {\n          loadBalanced: this.s.options.loadBalanced\n        });\n        this.serverUpdateHandler(newDescription);\n      }\n    }\n\n    const exitWithError = (error: Error) =>\n      callback ? callback(error) : this.emit(Topology.ERROR, error);\n\n    const readPreference = options.readPreference ?? ReadPreference.primary;\n    this.selectServer(readPreferenceServerSelector(readPreference), options, (err, server) => {\n      if (err) {\n        return this.close({ force: false }, () => exitWithError(err));\n      }\n\n      // TODO: NODE-2471\n      const skipPingOnConnect = this.s.options[Symbol.for('@@mdb.skipPingOnConnect')] === true;\n      if (!skipPingOnConnect && server && this.s.credentials) {\n        server.command(ns('admin.$cmd'), { ping: 1 }, {}, err => {\n          if (err) {\n            return exitWithError(err);\n          }\n\n          stateTransition(this, STATE_CONNECTED);\n          this.emit(Topology.OPEN, this);\n          this.emit(Topology.CONNECT, this);\n\n          callback?.(undefined, this);\n        });\n\n        return;\n      }\n\n      stateTransition(this, STATE_CONNECTED);\n      this.emit(Topology.OPEN, this);\n      this.emit(Topology.CONNECT, this);\n\n      callback?.(undefined, this);\n    });\n  }\n\n  /** Close this topology */\n  close(options: CloseOptions): void;\n  close(options: CloseOptions, callback: Callback): void;\n  close(options?: CloseOptions, callback?: Callback): void {\n    options = options ?? { force: false };\n\n    if (this.s.state === STATE_CLOSED || this.s.state === STATE_CLOSING) {\n      return callback?.();\n    }\n\n    const destroyedServers = Array.from(this.s.servers.values(), server => {\n      return promisify(destroyServer)(server, this, { force: !!options?.force });\n    });\n\n    Promise.all(destroyedServers)\n      .then(() => {\n        this.s.servers.clear();\n\n        stateTransition(this, STATE_CLOSING);\n\n        drainWaitQueue(this[kWaitQueue], new MongoTopologyClosedError());\n        drainTimerQueue(this.s.connectionTimers);\n\n        if (this.s.srvPoller) {\n          this.s.srvPoller.stop();\n          this.s.srvPoller.removeListener(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n        }\n\n        this.removeListener(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n\n        stateTransition(this, STATE_CLOSED);\n\n        // emit an event for close\n        this.emit(Topology.TOPOLOGY_CLOSED, new TopologyClosedEvent(this.s.id));\n      })\n      .finally(() => callback?.());\n  }\n\n  /**\n   * Selects a server according to the selection predicate provided\n   *\n   * @param selector - An optional selector to select servers by, defaults to a random selection within a latency window\n   * @param options - Optional settings related to server selection\n   * @param callback - The callback used to indicate success or failure\n   * @returns An instance of a `Server` meeting the criteria of the predicate provided\n   */\n  selectServer(\n    selector: string | ReadPreference | ServerSelector,\n    options: SelectServerOptions,\n    callback: Callback<Server>\n  ): void {\n    let serverSelector;\n    if (typeof selector !== 'function') {\n      if (typeof selector === 'string') {\n        serverSelector = readPreferenceServerSelector(ReadPreference.fromString(selector));\n      } else {\n        let readPreference;\n        if (selector instanceof ReadPreference) {\n          readPreference = selector;\n        } else {\n          ReadPreference.translate(options);\n          readPreference = options.readPreference || ReadPreference.primary;\n        }\n\n        serverSelector = readPreferenceServerSelector(readPreference as ReadPreference);\n      }\n    } else {\n      serverSelector = selector;\n    }\n\n    options = Object.assign(\n      {},\n      { serverSelectionTimeoutMS: this.s.serverSelectionTimeoutMS },\n      options\n    );\n\n    const isSharded = this.description.type === TopologyType.Sharded;\n    const session = options.session;\n    const transaction = session && session.transaction;\n\n    if (isSharded && transaction && transaction.server) {\n      callback(undefined, transaction.server);\n      return;\n    }\n\n    const waitQueueMember: ServerSelectionRequest = {\n      serverSelector,\n      transaction,\n      callback\n    };\n\n    const serverSelectionTimeoutMS = options.serverSelectionTimeoutMS;\n    if (serverSelectionTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n        const timeoutError = new MongoServerSelectionError(\n          `Server selection timed out after ${serverSelectionTimeoutMS} ms`,\n          this.description\n        );\n\n        waitQueueMember.callback(timeoutError);\n      }, serverSelectionTimeoutMS);\n    }\n\n    this[kWaitQueue].push(waitQueueMember);\n    processWaitQueue(this);\n  }\n\n  /**\n   * Update the internal TopologyDescription with a ServerDescription\n   *\n   * @param serverDescription - The server to update in the internal list of server descriptions\n   */\n  serverUpdateHandler(serverDescription: ServerDescription): void {\n    if (!this.s.description.hasServer(serverDescription.address)) {\n      return;\n    }\n\n    // ignore this server update if its from an outdated topologyVersion\n    if (isStaleServerDescription(this.s.description, serverDescription)) {\n      return;\n    }\n\n    // these will be used for monitoring events later\n    const previousTopologyDescription = this.s.description;\n    const previousServerDescription = this.s.description.servers.get(serverDescription.address);\n    if (!previousServerDescription) {\n      return;\n    }\n\n    // Driver Sessions Spec: \"Whenever a driver receives a cluster time from\n    // a server it MUST compare it to the current highest seen cluster time\n    // for the deployment. If the new cluster time is higher than the\n    // highest seen cluster time it MUST become the new highest seen cluster\n    // time. Two cluster times are compared using only the BsonTimestamp\n    // value of the clusterTime embedded field.\"\n    const clusterTime = serverDescription.$clusterTime;\n    if (clusterTime) {\n      _advanceClusterTime(this, clusterTime);\n    }\n\n    // If we already know all the information contained in this updated description, then\n    // we don't need to emit SDAM events, but still need to update the description, in order\n    // to keep client-tracked attributes like last update time and round trip time up to date\n    const equalDescriptions =\n      previousServerDescription && previousServerDescription.equals(serverDescription);\n\n    // first update the TopologyDescription\n    this.s.description = this.s.description.update(serverDescription);\n    if (this.s.description.compatibilityError) {\n      this.emit(Topology.ERROR, new MongoCompatibilityError(this.s.description.compatibilityError));\n      return;\n    }\n\n    // emit monitoring events for this change\n    if (!equalDescriptions) {\n      const newDescription = this.s.description.servers.get(serverDescription.address);\n      if (newDescription) {\n        this.emit(\n          Topology.SERVER_DESCRIPTION_CHANGED,\n          new ServerDescriptionChangedEvent(\n            this.s.id,\n            serverDescription.address,\n            previousServerDescription,\n            newDescription\n          )\n        );\n      }\n    }\n\n    // update server list from updated descriptions\n    updateServers(this, serverDescription);\n\n    // attempt to resolve any outstanding server selection attempts\n    if (this[kWaitQueue].length > 0) {\n      processWaitQueue(this);\n    }\n\n    if (!equalDescriptions) {\n      this.emit(\n        Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n        new TopologyDescriptionChangedEvent(\n          this.s.id,\n          previousTopologyDescription,\n          this.s.description\n        )\n      );\n    }\n  }\n\n  auth(credentials?: MongoCredentials, callback?: Callback): void {\n    if (typeof credentials === 'function') (callback = credentials), (credentials = undefined);\n    if (typeof callback === 'function') callback(undefined, true);\n  }\n\n  get clientMetadata(): ClientMetadata {\n    return this.s.options.metadata;\n  }\n\n  isConnected(): boolean {\n    return this.s.state === STATE_CONNECTED;\n  }\n\n  isDestroyed(): boolean {\n    return this.s.state === STATE_CLOSED;\n  }\n\n  // NOTE: There are many places in code where we explicitly check the last hello\n  //       to do feature support detection. This should be done any other way, but for\n  //       now we will just return the first hello seen, which should suffice.\n  lastHello(): Document {\n    const serverDescriptions = Array.from(this.description.servers.values());\n    if (serverDescriptions.length === 0) return {};\n    const sd = serverDescriptions.filter(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    )[0];\n\n    const result = sd || { maxWireVersion: this.description.commonWireVersion };\n    return result;\n  }\n\n  get commonWireVersion(): number | undefined {\n    return this.description.commonWireVersion;\n  }\n\n  get logicalSessionTimeoutMinutes(): number | null {\n    return this.description.logicalSessionTimeoutMinutes;\n  }\n\n  get clusterTime(): ClusterTime | undefined {\n    return this.s.clusterTime;\n  }\n\n  set clusterTime(clusterTime: ClusterTime | undefined) {\n    this.s.clusterTime = clusterTime;\n  }\n}\n\n/** Destroys a server, and removes all event listeners from the instance */\nfunction destroyServer(\n  server: Server,\n  topology: Topology,\n  options?: DestroyOptions,\n  callback?: Callback\n) {\n  options = options ?? { force: false };\n  for (const event of LOCAL_SERVER_EVENTS) {\n    server.removeAllListeners(event);\n  }\n\n  server.destroy(options, () => {\n    topology.emit(\n      Topology.SERVER_CLOSED,\n      new ServerClosedEvent(topology.s.id, server.description.address)\n    );\n\n    for (const event of SERVER_RELAY_EVENTS) {\n      server.removeAllListeners(event);\n    }\n    if (typeof callback === 'function') {\n      callback();\n    }\n  });\n}\n\n/** Predicts the TopologyType from options */\nfunction topologyTypeFromOptions(options?: TopologyOptions) {\n  if (options?.directConnection) {\n    return TopologyType.Single;\n  }\n\n  if (options?.replicaSet) {\n    return TopologyType.ReplicaSetNoPrimary;\n  }\n\n  if (options?.loadBalanced) {\n    return TopologyType.LoadBalanced;\n  }\n\n  return TopologyType.Unknown;\n}\n\n/**\n * Creates new server instances and attempts to connect them\n *\n * @param topology - The topology that this server belongs to\n * @param serverDescription - The description for the server to initialize and connect to\n */\nfunction createAndConnectServer(topology: Topology, serverDescription: ServerDescription) {\n  topology.emit(\n    Topology.SERVER_OPENING,\n    new ServerOpeningEvent(topology.s.id, serverDescription.address)\n  );\n\n  const server = new Server(topology, serverDescription, topology.s.options);\n  for (const event of SERVER_RELAY_EVENTS) {\n    server.on(event, (e: any) => topology.emit(event, e));\n  }\n\n  server.on(Server.DESCRIPTION_RECEIVED, description => topology.serverUpdateHandler(description));\n\n  server.connect();\n  return server;\n}\n\n/**\n * @param topology - Topology to update.\n * @param incomingServerDescription - New server description.\n */\nfunction updateServers(topology: Topology, incomingServerDescription?: ServerDescription) {\n  // update the internal server's description\n  if (incomingServerDescription && topology.s.servers.has(incomingServerDescription.address)) {\n    const server = topology.s.servers.get(incomingServerDescription.address);\n    if (server) {\n      server.s.description = incomingServerDescription;\n      if (\n        incomingServerDescription.error instanceof MongoError &&\n        incomingServerDescription.error.hasErrorLabel(MongoErrorLabel.ResetPool)\n      ) {\n        const interruptInUseConnections = incomingServerDescription.error.hasErrorLabel(\n          MongoErrorLabel.InterruptInUseConnections\n        );\n\n        server.pool.clear({ interruptInUseConnections });\n      } else if (incomingServerDescription.error == null) {\n        const newTopologyType = topology.s.description.type;\n        const shouldMarkPoolReady =\n          incomingServerDescription.isDataBearing ||\n          (incomingServerDescription.type !== ServerType.Unknown &&\n            newTopologyType === TopologyType.Single);\n        if (shouldMarkPoolReady) {\n          server.pool.ready();\n        }\n      }\n    }\n  }\n\n  // add new servers for all descriptions we currently don't know about locally\n  for (const serverDescription of topology.description.servers.values()) {\n    if (!topology.s.servers.has(serverDescription.address)) {\n      const server = createAndConnectServer(topology, serverDescription);\n      topology.s.servers.set(serverDescription.address, server);\n    }\n  }\n\n  // for all servers no longer known, remove their descriptions and destroy their instances\n  for (const entry of topology.s.servers) {\n    const serverAddress = entry[0];\n    if (topology.description.hasServer(serverAddress)) {\n      continue;\n    }\n\n    if (!topology.s.servers.has(serverAddress)) {\n      continue;\n    }\n\n    const server = topology.s.servers.get(serverAddress);\n    topology.s.servers.delete(serverAddress);\n\n    // prepare server for garbage collection\n    if (server) {\n      destroyServer(server, topology);\n    }\n  }\n}\n\nfunction drainWaitQueue(queue: List<ServerSelectionRequest>, err?: MongoDriverError) {\n  while (queue.length) {\n    const waitQueueMember = queue.shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (waitQueueMember.timer) {\n      clearTimeout(waitQueueMember.timer);\n    }\n\n    if (!waitQueueMember[kCancelled]) {\n      waitQueueMember.callback(err);\n    }\n  }\n}\n\nfunction processWaitQueue(topology: Topology) {\n  if (topology.s.state === STATE_CLOSED) {\n    drainWaitQueue(topology[kWaitQueue], new MongoTopologyClosedError());\n    return;\n  }\n\n  const isSharded = topology.description.type === TopologyType.Sharded;\n  const serverDescriptions = Array.from(topology.description.servers.values());\n  const membersToProcess = topology[kWaitQueue].length;\n  for (let i = 0; i < membersToProcess; ++i) {\n    const waitQueueMember = topology[kWaitQueue].shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (waitQueueMember[kCancelled]) {\n      continue;\n    }\n\n    let selectedDescriptions;\n    try {\n      const serverSelector = waitQueueMember.serverSelector;\n      selectedDescriptions = serverSelector\n        ? serverSelector(topology.description, serverDescriptions)\n        : serverDescriptions;\n    } catch (e) {\n      if (waitQueueMember.timer) {\n        clearTimeout(waitQueueMember.timer);\n      }\n\n      waitQueueMember.callback(e);\n      continue;\n    }\n\n    let selectedServer;\n    if (selectedDescriptions.length === 0) {\n      topology[kWaitQueue].push(waitQueueMember);\n      continue;\n    } else if (selectedDescriptions.length === 1) {\n      selectedServer = topology.s.servers.get(selectedDescriptions[0].address);\n    } else {\n      const descriptions = shuffle(selectedDescriptions, 2);\n      const server1 = topology.s.servers.get(descriptions[0].address);\n      const server2 = topology.s.servers.get(descriptions[1].address);\n\n      selectedServer =\n        server1 && server2 && server1.s.operationCount < server2.s.operationCount\n          ? server1\n          : server2;\n    }\n\n    if (!selectedServer) {\n      waitQueueMember.callback(\n        new MongoServerSelectionError(\n          'server selection returned a server description but the server was not found in the topology',\n          topology.description\n        )\n      );\n      return;\n    }\n    const transaction = waitQueueMember.transaction;\n    if (isSharded && transaction && transaction.isActive && selectedServer) {\n      transaction.pinServer(selectedServer);\n    }\n\n    if (waitQueueMember.timer) {\n      clearTimeout(waitQueueMember.timer);\n    }\n\n    waitQueueMember.callback(undefined, selectedServer);\n  }\n\n  if (topology[kWaitQueue].length > 0) {\n    // ensure all server monitors attempt monitoring soon\n    for (const [, server] of topology.s.servers) {\n      process.nextTick(function scheduleServerCheck() {\n        return server.requestCheck();\n      });\n    }\n  }\n}\n\nfunction isStaleServerDescription(\n  topologyDescription: TopologyDescription,\n  incomingServerDescription: ServerDescription\n) {\n  const currentServerDescription = topologyDescription.servers.get(\n    incomingServerDescription.address\n  );\n  const currentTopologyVersion = currentServerDescription?.topologyVersion;\n  return (\n    compareTopologyVersion(currentTopologyVersion, incomingServerDescription.topologyVersion) > 0\n  );\n}\n\n/** @public */\nexport class ServerCapabilities {\n  maxWireVersion: number;\n  minWireVersion: number;\n\n  constructor(hello: Document) {\n    this.minWireVersion = hello.minWireVersion || 0;\n    this.maxWireVersion = hello.maxWireVersion || 0;\n  }\n\n  get hasAggregationCursor(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasWriteCommands(): boolean {\n    return this.maxWireVersion >= 2;\n  }\n  get hasTextSearch(): boolean {\n    return this.minWireVersion >= 0;\n  }\n\n  get hasAuthCommands(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasListCollectionsCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get hasListIndexesCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get supportsSnapshotReads(): boolean {\n    return this.maxWireVersion >= 13;\n  }\n\n  get commandsTakeWriteConcern(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n\n  get commandsTakeCollation(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n}\n", "import type { TcpNetConnectOpts } from 'net';\nimport type { ConnectionOptions as TLSConnectionOptions, TLSSocketOptions } from 'tls';\nimport { promisify } from 'util';\n\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport {\n  type AuthMechanismProperties,\n  DEFAULT_ALLOWED_HOSTS,\n  type MongoCredentials\n} from './cmap/auth/mongo_credentials';\nimport { AuthMechanism } from './cmap/auth/providers';\nimport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS } from './cmap/connect';\nimport type { Connection } from './cmap/connection';\nimport type { ClientMetadata } from './cmap/handshake/client_metadata';\nimport type { CompressorName } from './cmap/wire_protocol/compression';\nimport { parseOptions, resolveSRVRecord } from './connection_string';\nimport { MONGO_CLIENT_EVENTS } from './constants';\nimport { Db, type DbOptions } from './db';\nimport type { AutoEncrypter, AutoEncryptionOptions } from './deps';\nimport type { Encrypter } from './encrypter';\nimport { MongoInvalidArgumentError } from './error';\nimport { MongoLogger, type MongoLoggerOptions } from './mongo_logger';\nimport { TypedEventEmitter } from './mongo_types';\nimport type { ReadConcern, ReadConcernLevel, ReadConcernLike } from './read_concern';\nimport { ReadPreference, type ReadPreferenceMode } from './read_preference';\nimport type { TagSet } from './sdam/server_description';\nimport { readPreferenceServerSelector } from './sdam/server_selection';\nimport type { SrvPoller } from './sdam/srv_polling';\nimport { Topology, type TopologyEvents } from './sdam/topology';\nimport { ClientSession, type ClientSessionOptions, ServerSessionPool } from './sessions';\nimport {\n  type HostAddress,\n  hostMatchesWildcards,\n  type MongoDBNamespace,\n  ns,\n  resolveOptions\n} from './utils';\nimport type { W, WriteConcern, WriteConcernSettings } from './write_concern';\n\n/** @public */\nexport const ServerApiVersion = Object.freeze({\n  v1: '1'\n} as const);\n\n/** @public */\nexport type ServerApiVersion = (typeof ServerApiVersion)[keyof typeof ServerApiVersion];\n\n/** @public */\nexport interface ServerApi {\n  version: ServerApiVersion;\n  strict?: boolean;\n  deprecationErrors?: boolean;\n}\n\n/** @public */\nexport interface DriverInfo {\n  name?: string;\n  version?: string;\n  platform?: string;\n}\n\n/** @public */\nexport interface Auth {\n  /** The username for auth */\n  username?: string;\n  /** The password for auth */\n  password?: string;\n}\n\n/** @public */\nexport interface PkFactory {\n  createPk(): any; // TODO: when js-bson is typed, function should return some BSON type\n}\n\n/** @public */\nexport type SupportedTLSConnectionOptions = Pick<\n  TLSConnectionOptions,\n  Extract<keyof TLSConnectionOptions, (typeof LEGAL_TLS_SOCKET_OPTIONS)[number]>\n>;\n\n/** @public */\nexport type SupportedTLSSocketOptions = Pick<\n  TLSSocketOptions,\n  Extract<keyof TLSSocketOptions, (typeof LEGAL_TLS_SOCKET_OPTIONS)[number]>\n>;\n\n/** @public */\nexport type SupportedSocketOptions = Pick<\n  TcpNetConnectOpts,\n  (typeof LEGAL_TCP_SOCKET_OPTIONS)[number]\n>;\n\n/** @public */\nexport type SupportedNodeConnectionOptions = SupportedTLSConnectionOptions &\n  SupportedTLSSocketOptions &\n  SupportedSocketOptions;\n\n/**\n * Describes all possible URI query options for the mongo client\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/connection-string\n */\nexport interface MongoClientOptions extends BSONSerializeOptions, SupportedNodeConnectionOptions {\n  /** Specifies the name of the replica set, if the mongod is a member of a replica set. */\n  replicaSet?: string;\n  /** Enables or disables TLS/SSL for the connection. */\n  tls?: boolean;\n  /** A boolean to enable or disables TLS/SSL for the connection. (The ssl option is equivalent to the tls option.) */\n  ssl?: boolean;\n  /**\n   * Specifies the location of a local TLS Certificate\n   * @deprecated Will be removed in the next major version. Please use tlsCertificateKeyFile instead.\n   */\n  tlsCertificateFile?: string;\n  /** Specifies the location of a local .pem file that contains either the client's TLS/SSL certificate and key or only the client's TLS/SSL key when tlsCertificateFile is used to provide the certificate. */\n  tlsCertificateKeyFile?: string;\n  /** Specifies the password to de-crypt the tlsCertificateKeyFile. */\n  tlsCertificateKeyFilePassword?: string;\n  /** Specifies the location of a local .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance. */\n  tlsCAFile?: string;\n  /** Bypasses validation of the certificates presented by the mongod/mongos instance */\n  tlsAllowInvalidCertificates?: boolean;\n  /** Disables hostname validation of the certificate presented by the mongod/mongos instance. */\n  tlsAllowInvalidHostnames?: boolean;\n  /** Disables various certificate validations. */\n  tlsInsecure?: boolean;\n  /** The time in milliseconds to attempt a connection before timing out. */\n  connectTimeoutMS?: number;\n  /** The time in milliseconds to attempt a send or receive on a socket before the attempt times out. */\n  socketTimeoutMS?: number;\n  /** An array or comma-delimited string of compressors to enable network compression for communication between this client and a mongod/mongos instance. */\n  compressors?: CompressorName[] | string;\n  /** An integer that specifies the compression level if using zlib for network compression. */\n  zlibCompressionLevel?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | undefined;\n  /** The maximum number of hosts to connect to when using an srv connection string, a setting of `0` means unlimited hosts */\n  srvMaxHosts?: number;\n  /**\n   * Modifies the srv URI to look like:\n   *\n   * `_{srvServiceName}._tcp.{hostname}.{domainname}`\n   *\n   * Querying this DNS URI is expected to respond with SRV records\n   */\n  srvServiceName?: string;\n  /** The maximum number of connections in the connection pool. */\n  maxPoolSize?: number;\n  /** The minimum number of connections in the connection pool. */\n  minPoolSize?: number;\n  /** The maximum number of connections that may be in the process of being established concurrently by the connection pool. */\n  maxConnecting?: number;\n  /** The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. */\n  maxIdleTimeMS?: number;\n  /** The maximum time in milliseconds that a thread can wait for a connection to become available. */\n  waitQueueTimeoutMS?: number;\n  /** Specify a read concern for the collection (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The level of isolation */\n  readConcernLevel?: ReadConcernLevel;\n  /** Specifies the read preferences for this connection */\n  readPreference?: ReadPreferenceMode | ReadPreference;\n  /** Specifies, in seconds, how stale a secondary can be before the client stops using it for read operations. */\n  maxStalenessSeconds?: number;\n  /** Specifies the tags document as a comma-separated list of colon-separated key-value pairs.  */\n  readPreferenceTags?: TagSet[];\n  /** The auth settings for when connection to server. */\n  auth?: Auth;\n  /** Specify the database name associated with the user\u2019s credentials. */\n  authSource?: string;\n  /** Specify the authentication mechanism that MongoDB will use to authenticate the connection. */\n  authMechanism?: AuthMechanism;\n  /** Specify properties for the specified authMechanism as a comma-separated list of colon-separated key-value pairs. */\n  authMechanismProperties?: AuthMechanismProperties;\n  /** The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. */\n  localThresholdMS?: number;\n  /** Specifies how long (in milliseconds) to block for server selection before throwing an exception.  */\n  serverSelectionTimeoutMS?: number;\n  /** heartbeatFrequencyMS controls when the driver checks the state of the MongoDB deployment. Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. */\n  heartbeatFrequencyMS?: number;\n  /** Sets the minimum heartbeat frequency. In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. */\n  minHeartbeatFrequencyMS?: number;\n  /** The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections */\n  appName?: string;\n  /** Enables retryable reads. */\n  retryReads?: boolean;\n  /** Enable retryable writes. */\n  retryWrites?: boolean;\n  /** Allow a driver to force a Single topology type with a connection string containing one host */\n  directConnection?: boolean;\n  /** Instruct the driver it is connecting to a load balancer fronting a mongos like service */\n  loadBalanced?: boolean;\n  /**\n   * The write concern w value\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  w?: W;\n  /**\n   * The write concern timeout\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  wtimeoutMS?: number;\n  /**\n   * The journal write concern\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  journal?: boolean;\n  /**\n   * A MongoDB WriteConcern, which describes the level of acknowledgement\n   * requested from MongoDB for write operations.\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/write-concern/\n   */\n  writeConcern?: WriteConcern | WriteConcernSettings;\n  /**\n   * Validate mongod server certificate against Certificate Authority\n   * @deprecated Will be removed in the next major version. Please use tlsAllowInvalidCertificates instead.\n   */\n  sslValidate?: boolean;\n  /**\n   * SSL Certificate file path.\n   * @deprecated Will be removed in the next major version. Please use tlsCAFile instead.\n   */\n  sslCA?: string;\n  /**\n   * SSL Certificate file path.\n   * @deprecated Will be removed in the next major version. Please use tlsCertificateKeyFile instead.\n   */\n  sslCert?: string;\n  /**\n   * SSL Key file file path.\n   * @deprecated Will be removed in the next major version. Please use tlsCertificateKeyFile instead.\n   */\n  sslKey?: string;\n  /**\n   * SSL Certificate pass phrase.\n   * @deprecated Will be removed in the next major version. Please use tlsCertificateKeyFilePassword instead.\n   */\n  sslPass?: string;\n  /**\n   * SSL Certificate revocation list file path.\n   * @deprecated Will be removed in the next major version. Please use tlsCertificateKeyFile instead.\n   */\n  sslCRL?: string;\n  /** TCP Connection no delay */\n  noDelay?: boolean;\n  /** @deprecated TCP Connection keep alive enabled. Will not be able to turn off in the future. */\n  keepAlive?: boolean;\n  /**\n   * @deprecated The number of milliseconds to wait before initiating keepAlive on the TCP socket.\n   *             Will not be configurable in the future.\n   */\n  keepAliveInitialDelay?: number;\n  /** Force server to assign `_id` values instead of driver */\n  forceServerObjectId?: boolean;\n  /** A primary key factory function for generation of custom `_id` keys */\n  pkFactory?: PkFactory;\n  /** Enable command monitoring for this client */\n  monitorCommands?: boolean;\n  /** Server API version */\n  serverApi?: ServerApi | ServerApiVersion;\n  /**\n   * Optionally enable in-use auto encryption\n   *\n   * @remarks\n   *  Automatic encryption is an enterprise only feature that only applies to operations on a collection. Automatic encryption is not supported for operations on a database or view, and operations that are not bypassed will result in error\n   *  (see [libmongocrypt: Auto Encryption Allow-List](https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/client-side-encryption.rst#libmongocrypt-auto-encryption-allow-list)). To bypass automatic encryption for all operations, set bypassAutoEncryption=true in AutoEncryptionOpts.\n   *\n   *  Automatic encryption requires the authenticated user to have the [listCollections privilege action](https://www.mongodb.com/docs/manual/reference/command/listCollections/#dbcmd.listCollections).\n   *\n   *  If a MongoClient with a limited connection pool size (i.e a non-zero maxPoolSize) is configured with AutoEncryptionOptions, a separate internal MongoClient is created if any of the following are true:\n   *  - AutoEncryptionOptions.keyVaultClient is not passed.\n   *  - AutoEncryptionOptions.bypassAutomaticEncryption is false.\n   *\n   * If an internal MongoClient is created, it is configured with the same options as the parent MongoClient except minPoolSize is set to 0 and AutoEncryptionOptions is omitted.\n   */\n  autoEncryption?: AutoEncryptionOptions;\n  /** Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver */\n  driverInfo?: DriverInfo;\n  /** Configures a Socks5 proxy host used for creating TCP connections. */\n  proxyHost?: string;\n  /** Configures a Socks5 proxy port used for creating TCP connections. */\n  proxyPort?: number;\n  /** Configures a Socks5 proxy username when the proxy in proxyHost requires username/password authentication. */\n  proxyUsername?: string;\n  /** Configures a Socks5 proxy password when the proxy in proxyHost requires username/password authentication. */\n  proxyPassword?: string;\n\n  /** @internal */\n  srvPoller?: SrvPoller;\n  /** @internal */\n  connectionType?: typeof Connection;\n\n  /** @internal */\n  [featureFlag: symbol]: any;\n}\n\n/** @public */\nexport type WithSessionCallback = (session: ClientSession) => Promise<any>;\n\n/** @internal */\nexport interface MongoClientPrivate {\n  url: string;\n  bsonOptions: BSONSerializeOptions;\n  namespace: MongoDBNamespace;\n  hasBeenClosed: boolean;\n  /**\n   * We keep a reference to the sessions that are acquired from the pool.\n   * - used to track and close all sessions in client.close() (which is non-standard behavior)\n   * - used to notify the leak checker in our tests if test author forgot to clean up explicit sessions\n   */\n  readonly activeSessions: Set<ClientSession>;\n  readonly sessionPool: ServerSessionPool;\n  readonly options: MongoOptions;\n  readonly readConcern?: ReadConcern;\n  readonly writeConcern?: WriteConcern;\n  readonly readPreference: ReadPreference;\n  readonly isMongoClient: true;\n}\n\n/** @public */\nexport type MongoClientEvents = Pick<TopologyEvents, (typeof MONGO_CLIENT_EVENTS)[number]> & {\n  // In previous versions the open event emitted a topology, in an effort to no longer\n  // expose internals but continue to expose this useful event API, it now emits a mongoClient\n  open(mongoClient: MongoClient): void;\n};\n\n/** @internal */\nconst kOptions = Symbol('options');\n\n/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n * @public\n *\n * @remarks\n * The programmatically provided options take precedence over the URI options.\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * // Enable command monitoring for debugging\n * const client = new MongoClient('mongodb://localhost:27017', { monitorCommands: true });\n *\n * client.on('commandStarted', started => console.log(started));\n * client.db().collection('pets');\n * await client.insertOne({ name: 'spot', kind: 'dog' });\n * ```\n */\nexport class MongoClient extends TypedEventEmitter<MongoClientEvents> {\n  /** @internal */\n  s: MongoClientPrivate;\n  /** @internal */\n  topology?: Topology;\n  /** @internal */\n  override readonly mongoLogger: MongoLogger;\n  /** @internal */\n  private connectionLock?: Promise<this>;\n\n  /**\n   * The consolidate, parsed, transformed and merged options.\n   * @internal\n   */\n  [kOptions]: MongoOptions;\n\n  constructor(url: string, options?: MongoClientOptions) {\n    super();\n\n    this[kOptions] = parseOptions(url, this, options);\n    this.mongoLogger = new MongoLogger(this[kOptions].mongoLoggerOptions);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const client = this;\n\n    // The internal state\n    this.s = {\n      url,\n      bsonOptions: resolveBSONOptions(this[kOptions]),\n      namespace: ns('admin'),\n      hasBeenClosed: false,\n      sessionPool: new ServerSessionPool(this),\n      activeSessions: new Set(),\n\n      get options() {\n        return client[kOptions];\n      },\n      get readConcern() {\n        return client[kOptions].readConcern;\n      },\n      get writeConcern() {\n        return client[kOptions].writeConcern;\n      },\n      get readPreference() {\n        return client[kOptions].readPreference;\n      },\n      get isMongoClient(): true {\n        return true;\n      }\n    };\n  }\n\n  /** @see MongoOptions */\n  get options(): Readonly<MongoOptions> {\n    return Object.freeze({ ...this[kOptions] });\n  }\n\n  get serverApi(): Readonly<ServerApi | undefined> {\n    return this[kOptions].serverApi && Object.freeze({ ...this[kOptions].serverApi });\n  }\n  /**\n   * Intended for APM use only\n   * @internal\n   */\n  get monitorCommands(): boolean {\n    return this[kOptions].monitorCommands;\n  }\n  set monitorCommands(value: boolean) {\n    this[kOptions].monitorCommands = value;\n  }\n\n  get autoEncrypter(): AutoEncrypter | undefined {\n    return this[kOptions].autoEncrypter;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get readPreference(): ReadPreference {\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @see docs.mongodb.org/manual/reference/connection-string/\n   */\n  async connect(): Promise<this> {\n    if (this.connectionLock) {\n      return this.connectionLock;\n    }\n\n    try {\n      this.connectionLock = this._connect();\n      await this.connectionLock;\n    } finally {\n      // release\n      this.connectionLock = undefined;\n    }\n\n    return this;\n  }\n\n  /**\n   * Create a topology to open the connection, must be locked to avoid topology leaks in concurrency scenario.\n   * Locking is enforced by the connect method.\n   *\n   * @internal\n   */\n  private async _connect(): Promise<this> {\n    if (this.topology && this.topology.isConnected()) {\n      return this;\n    }\n\n    const options = this[kOptions];\n\n    if (typeof options.srvHost === 'string') {\n      const hosts = await resolveSRVRecord(options);\n\n      for (const [index, host] of hosts.entries()) {\n        options.hosts[index] = host;\n      }\n    }\n\n    // It is important to perform validation of hosts AFTER SRV resolution, to check the real hostname,\n    // but BEFORE we even attempt connecting with a potentially not allowed hostname\n    if (options.credentials?.mechanism === AuthMechanism.MONGODB_OIDC) {\n      const allowedHosts =\n        options.credentials?.mechanismProperties?.ALLOWED_HOSTS || DEFAULT_ALLOWED_HOSTS;\n      const isServiceAuth = !!options.credentials?.mechanismProperties?.PROVIDER_NAME;\n      if (!isServiceAuth) {\n        for (const host of options.hosts) {\n          if (!hostMatchesWildcards(host.toHostPort().host, allowedHosts)) {\n            throw new MongoInvalidArgumentError(\n              `Host '${host}' is not valid for OIDC authentication with ALLOWED_HOSTS of '${allowedHosts.join(\n                ','\n              )}'`\n            );\n          }\n        }\n      }\n    }\n\n    this.topology = new Topology(this, options.hosts, options);\n    // Events can be emitted before initialization is complete so we have to\n    // save the reference to the topology on the client ASAP if the event handlers need to access it\n\n    this.topology.once(Topology.OPEN, () => this.emit('open', this));\n\n    for (const event of MONGO_CLIENT_EVENTS) {\n      this.topology.on(event, (...args: any[]) => this.emit(event, ...(args as any)));\n    }\n\n    const topologyConnect = async () => {\n      try {\n        await promisify(callback => this.topology?.connect(options, callback))();\n      } catch (error) {\n        this.topology?.close({ force: true });\n        throw error;\n      }\n    };\n\n    if (this.autoEncrypter) {\n      const initAutoEncrypter = promisify(callback => this.autoEncrypter?.init(callback));\n      await initAutoEncrypter();\n      await topologyConnect();\n      await options.encrypter.connectInternalClient();\n    } else {\n      await topologyConnect();\n    }\n\n    return this;\n  }\n\n  /**\n   * Close the client and its underlying connections\n   *\n   * @param force - Force close, emitting no events\n   */\n  async close(force = false): Promise<void> {\n    // There's no way to set hasBeenClosed back to false\n    Object.defineProperty(this.s, 'hasBeenClosed', {\n      value: true,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n\n    const activeSessionEnds = Array.from(this.s.activeSessions, session => session.endSession());\n    this.s.activeSessions.clear();\n\n    await Promise.all(activeSessionEnds);\n\n    if (this.topology == null) {\n      return;\n    }\n\n    // If we would attempt to select a server and get nothing back we short circuit\n    // to avoid the server selection timeout.\n    const selector = readPreferenceServerSelector(ReadPreference.primaryPreferred);\n    const topologyDescription = this.topology.description;\n    const serverDescriptions = Array.from(topologyDescription.servers.values());\n    const servers = selector(topologyDescription, serverDescriptions);\n    if (servers.length !== 0) {\n      const endSessions = Array.from(this.s.sessionPool.sessions, ({ id }) => id);\n      if (endSessions.length !== 0) {\n        await this.db('admin')\n          .command(\n            { endSessions },\n            { readPreference: ReadPreference.primaryPreferred, noResponse: true }\n          )\n          .catch(() => null); // outcome does not matter\n      }\n    }\n\n    // clear out references to old topology\n    const topology = this.topology;\n    this.topology = undefined;\n\n    await new Promise<void>((resolve, reject) => {\n      topology.close({ force }, error => {\n        if (error) return reject(error);\n        const { encrypter } = this[kOptions];\n        if (encrypter) {\n          return encrypter.close(this, force, error => {\n            if (error) return reject(error);\n            resolve();\n          });\n        }\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * Create a new Db instance sharing the current socket connections.\n   *\n   * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n   * @param options - Optional settings for Db construction\n   */\n  db(dbName?: string, options?: DbOptions): Db {\n    options = options ?? {};\n\n    // Default to db from connection string if not provided\n    if (!dbName) {\n      dbName = this.options.dbName;\n    }\n\n    // Copy the options and add out internal override of the not shared flag\n    const finalOptions = Object.assign({}, this[kOptions], options);\n\n    // Return the db object\n    const db = new Db(this, dbName, finalOptions);\n\n    // Return the database\n    return db;\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @remarks\n   * The programmatically provided options take precedence over the URI options.\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/connection-string/\n   */\n  static async connect(url: string, options?: MongoClientOptions): Promise<MongoClient> {\n    const client = new this(url, options);\n    return client.connect();\n  }\n\n  /** Starts a new session on the server */\n  startSession(options?: ClientSessionOptions): ClientSession {\n    const session = new ClientSession(\n      this,\n      this.s.sessionPool,\n      { explicit: true, ...options },\n      this[kOptions]\n    );\n    this.s.activeSessions.add(session);\n    session.once('ended', () => {\n      this.s.activeSessions.delete(session);\n    });\n    return session;\n  }\n\n  /**\n   * Runs a given operation with an implicitly created session. The lifetime of the session\n   * will be handled without the need for user interaction.\n   *\n   * NOTE: presently the operation MUST return a Promise (either explicit or implicitly as an async function)\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An callback to execute with an implicitly created session\n   */\n  async withSession(callback: WithSessionCallback): Promise<void>;\n  async withSession(options: ClientSessionOptions, callback: WithSessionCallback): Promise<void>;\n  async withSession(\n    optionsOrOperation: ClientSessionOptions | WithSessionCallback,\n    callback?: WithSessionCallback\n  ): Promise<void> {\n    const options = {\n      // Always define an owner\n      owner: Symbol(),\n      // If it's an object inherit the options\n      ...(typeof optionsOrOperation === 'object' ? optionsOrOperation : {})\n    };\n\n    const withSessionCallback =\n      typeof optionsOrOperation === 'function' ? optionsOrOperation : callback;\n\n    if (withSessionCallback == null) {\n      throw new MongoInvalidArgumentError('Missing required callback parameter');\n    }\n\n    const session = this.startSession(options);\n\n    try {\n      await withSessionCallback(session);\n    } finally {\n      try {\n        await session.endSession();\n      } catch {\n        // We are not concerned with errors from endSession()\n      }\n    }\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this cluster. Will ignore all\n   * changes to system collections, as well as the local, admin, and config databases.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to provide the schema that may be defined for all the data within the current cluster\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   *\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TSchema - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<\n    TSchema extends Document = Document,\n    TChange extends Document = ChangeStreamDocument<TSchema>\n  >(pipeline: Document[] = [], options: ChangeStreamOptions = {}): ChangeStream<TSchema, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n}\n\n/**\n * Parsed Mongo Client Options.\n *\n * User supplied options are documented by `MongoClientOptions`.\n *\n * **NOTE:** The client's options parsing is subject to change to support new features.\n * This type is provided to aid with inspection of options after parsing, it should not be relied upon programmatically.\n *\n * Options are sourced from:\n * - connection string\n * - options object passed to the MongoClient constructor\n * - file system (ex. tls settings)\n * - environment variables\n * - DNS SRV records and TXT records\n *\n * Not all options may be present after client construction as some are obtained from asynchronous operations.\n *\n * @public\n */\nexport interface MongoOptions\n  extends Required<\n      Pick<\n        MongoClientOptions,\n        | 'autoEncryption'\n        | 'connectTimeoutMS'\n        | 'directConnection'\n        | 'driverInfo'\n        | 'forceServerObjectId'\n        | 'minHeartbeatFrequencyMS'\n        | 'heartbeatFrequencyMS'\n        | 'keepAlive'\n        | 'keepAliveInitialDelay'\n        | 'localThresholdMS'\n        | 'maxConnecting'\n        | 'maxIdleTimeMS'\n        | 'maxPoolSize'\n        | 'minPoolSize'\n        | 'monitorCommands'\n        | 'noDelay'\n        | 'pkFactory'\n        | 'raw'\n        | 'replicaSet'\n        | 'retryReads'\n        | 'retryWrites'\n        | 'serverSelectionTimeoutMS'\n        | 'socketTimeoutMS'\n        | 'srvMaxHosts'\n        | 'srvServiceName'\n        | 'tlsAllowInvalidCertificates'\n        | 'tlsAllowInvalidHostnames'\n        | 'tlsInsecure'\n        | 'waitQueueTimeoutMS'\n        | 'zlibCompressionLevel'\n      >\n    >,\n    SupportedNodeConnectionOptions {\n  appName?: string;\n  hosts: HostAddress[];\n  srvHost?: string;\n  credentials?: MongoCredentials;\n  readPreference: ReadPreference;\n  readConcern: ReadConcern;\n  loadBalanced: boolean;\n  serverApi: ServerApi;\n  compressors: CompressorName[];\n  writeConcern: WriteConcern;\n  dbName: string;\n  metadata: ClientMetadata;\n  autoEncrypter?: AutoEncrypter;\n  proxyHost?: string;\n  proxyPort?: number;\n  proxyUsername?: string;\n  proxyPassword?: string;\n\n  /** @internal */\n  connectionType?: typeof Connection;\n\n  /** @internal */\n  encrypter: Encrypter;\n  /** @internal */\n  userSpecifiedAuthSource: boolean;\n  /** @internal */\n  userSpecifiedReplicaSet: boolean;\n\n  /**\n   * # NOTE ABOUT TLS Options\n   *\n   * If `tls` is provided as an option, it is equivalent to setting the `ssl` option.\n   *\n   * NodeJS native TLS options are passed through to the socket and retain their original types.\n   *\n   * ### Additional options:\n   *\n   * | nodejs native option  | driver spec compliant option name             | legacy option name | driver option type |\n   * |:----------------------|:----------------------------------------------|:-------------------|:-------------------|\n   * | `ca`                  | `tlsCAFile`                                   | `sslCA`            | `string`           |\n   * | `crl`                 | N/A                                           | `sslCRL`           | `string`           |\n   * | `cert`                | `tlsCertificateFile`, `tlsCertificateKeyFile` | `sslCert`          | `string`           |\n   * | `key`                 | `tlsCertificateKeyFile`                       | `sslKey`           | `string`           |\n   * | `passphrase`          | `tlsCertificateKeyFilePassword`               | `sslPass`          | `string`           |\n   * | `rejectUnauthorized`  | `tlsAllowInvalidCertificates`                 | `sslValidate`      | `boolean`          |\n   * | `checkServerIdentity` | `tlsAllowInvalidHostnames`                    | N/A                | `boolean`          |\n   * | see note below        | `tlsInsecure`                                 | N/A                | `boolean`          |\n   *\n   * If `tlsInsecure` is set to `true`, then it will set the node native options `checkServerIdentity`\n   * to a no-op and `rejectUnauthorized` to `false`.\n   *\n   * If `tlsInsecure` is set to `false`, then it will set the node native options `checkServerIdentity`\n   * to a no-op and `rejectUnauthorized` to the inverse value of `tlsAllowInvalidCertificates`. If\n   * `tlsAllowInvalidCertificates` is not set, then `rejectUnauthorized` will be set to `true`.\n   */\n  tls: boolean;\n\n  /** @internal */\n  [featureFlag: symbol]: any;\n\n  /** @internal */\n  mongoLoggerOptions: MongoLoggerOptions;\n}\n", "import type { Readable } from 'stream';\n\nimport type { Binary, Document, Timestamp } from './bson';\nimport { Collection } from './collection';\nimport { CHANGE, CLOSE, END, ERROR, INIT, MORE, RESPONSE, RESUME_TOKEN_CHANGED } from './constants';\nimport type { AbstractCursorEvents, CursorStreamOptions } from './cursor/abstract_cursor';\nimport { ChangeStreamCursor, type ChangeStreamCursorOptions } from './cursor/change_stream_cursor';\nimport { Db } from './db';\nimport {\n  type AnyError,\n  isResumableError,\n  MongoAPIError,\n  MongoChangeStreamError,\n  MongoRuntimeError\n} from './error';\nimport { MongoClient } from './mongo_client';\nimport { type InferIdType, TypedEventEmitter } from './mongo_types';\nimport type { AggregateOptions } from './operations/aggregate';\nimport type { CollationOptions, OperationParent } from './operations/command';\nimport type { ReadPreference } from './read_preference';\nimport type { ServerSessionId } from './sessions';\nimport { filterOptions, getTopology, type MongoDBNamespace } from './utils';\n\n/** @internal */\nconst kCursorStream = Symbol('cursorStream');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kMode = Symbol('mode');\n\nconst CHANGE_STREAM_OPTIONS = [\n  'resumeAfter',\n  'startAfter',\n  'startAtOperationTime',\n  'fullDocument',\n  'fullDocumentBeforeChange',\n  'showExpandedEvents'\n] as const;\n\nconst CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\n\nconst CHANGE_STREAM_EVENTS = [RESUME_TOKEN_CHANGED, END, CLOSE];\n\nconst NO_RESUME_TOKEN_ERROR =\n  'A change stream document has been received that lacks a resume token (_id).';\nconst CHANGESTREAM_CLOSED_ERROR = 'ChangeStream is closed';\n\n/**\n * @public\n * @deprecated Please use the ChangeStreamCursorOptions type instead.\n */\nexport interface ResumeOptions {\n  startAtOperationTime?: Timestamp;\n  batchSize?: number;\n  maxAwaitTimeMS?: number;\n  collation?: CollationOptions;\n  readPreference?: ReadPreference;\n  resumeAfter?: ResumeToken;\n  startAfter?: ResumeToken;\n  fullDocument?: string;\n}\n\n/**\n * Represents the logical starting point for a new ChangeStream or resuming a ChangeStream on the server.\n * @see https://www.mongodb.com/docs/manual/changeStreams/#std-label-change-stream-resume\n * @public\n */\nexport type ResumeToken = unknown;\n\n/**\n * Represents a specific point in time on a server. Can be retrieved by using `db.command()`\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/method/db.runCommand/#response\n */\nexport type OperationTime = Timestamp;\n\n/**\n * Options that can be passed to a ChangeStream. Note that startAfter, resumeAfter, and startAtOperationTime are all mutually exclusive, and the server will error if more than one is specified.\n * @public\n */\nexport interface ChangeStreamOptions extends Omit<AggregateOptions, 'writeConcern'> {\n  /**\n   * Allowed values: 'updateLookup', 'whenAvailable', 'required'.\n   *\n   * When set to 'updateLookup', the change notification for partial updates\n   * will include both a delta describing the changes to the document as well\n   * as a copy of the entire document that was changed from some time after\n   * the change occurred.\n   *\n   * When set to 'whenAvailable', configures the change stream to return the\n   * post-image of the modified document for replace and update change events\n   * if the post-image for this event is available.\n   *\n   * When set to 'required', the same behavior as 'whenAvailable' except that\n   * an error is raised if the post-image is not available.\n   */\n  fullDocument?: string;\n\n  /**\n   * Allowed values: 'whenAvailable', 'required', 'off'.\n   *\n   * The default is to not send a value, which is equivalent to 'off'.\n   *\n   * When set to 'whenAvailable', configures the change stream to return the\n   * pre-image of the modified document for replace, update, and delete change\n   * events if it is available.\n   *\n   * When set to 'required', the same behavior as 'whenAvailable' except that\n   * an error is raised if the pre-image is not available.\n   */\n  fullDocumentBeforeChange?: string;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a change stream query. */\n  maxAwaitTimeMS?: number;\n  /**\n   * Allows you to start a changeStream after a specified event.\n   * @see https://www.mongodb.com/docs/manual/changeStreams/#resumeafter-for-change-streams\n   */\n  resumeAfter?: ResumeToken;\n  /**\n   * Similar to resumeAfter, but will allow you to start after an invalidated event.\n   * @see https://www.mongodb.com/docs/manual/changeStreams/#startafter-for-change-streams\n   */\n  startAfter?: ResumeToken;\n  /** Will start the changeStream after the specified operationTime. */\n  startAtOperationTime?: OperationTime;\n  /**\n   * The number of documents to return per batch.\n   * @see https://www.mongodb.com/docs/manual/reference/command/aggregate\n   */\n  batchSize?: number;\n\n  /**\n   * When enabled, configures the change stream to include extra change events.\n   *\n   * - createIndexes\n   * - dropIndexes\n   * - modify\n   * - create\n   * - shardCollection\n   * - reshardCollection\n   * - refineCollectionShardKey\n   */\n  showExpandedEvents?: boolean;\n}\n\n/** @public */\nexport interface ChangeStreamNameSpace {\n  db: string;\n  coll: string;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentKey<TSchema extends Document = Document> {\n  /**\n   * For unsharded collections this contains a single field `_id`.\n   * For sharded collections, this will contain all the components of the shard key\n   */\n  documentKey: { _id: InferIdType<TSchema>; [shardKey: string]: any };\n}\n\n/** @public */\nexport interface ChangeStreamSplitEvent {\n  /** Which fragment of the change this is. */\n  fragment: number;\n  /** The total number of fragments. */\n  of: number;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentCommon {\n  /**\n   * The id functions as an opaque token for use when resuming an interrupted\n   * change stream.\n   */\n  _id: ResumeToken;\n  /**\n   * The timestamp from the oplog entry associated with the event.\n   * For events that happened as part of a multi-document transaction, the associated change stream\n   * notifications will have the same clusterTime value, namely the time when the transaction was committed.\n   * On a sharded cluster, events that occur on different shards can have the same clusterTime but be\n   * associated with different transactions or even not be associated with any transaction.\n   * To identify events for a single transaction, you can use the combination of lsid and txnNumber in the change stream event document.\n   */\n  clusterTime?: Timestamp;\n\n  /**\n   * The transaction number.\n   * Only present if the operation is part of a multi-document transaction.\n   *\n   * **NOTE:** txnNumber can be a Long if promoteLongs is set to false\n   */\n  txnNumber?: number;\n\n  /**\n   * The identifier for the session associated with the transaction.\n   * Only present if the operation is part of a multi-document transaction.\n   */\n  lsid?: ServerSessionId;\n\n  /**\n   * When the change stream's backing aggregation pipeline contains the $changeStreamSplitLargeEvent\n   * stage, events larger than 16MB will be split into multiple events and contain the\n   * following information about which fragment the current event is.\n   */\n  splitEvent?: ChangeStreamSplitEvent;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentCollectionUUID {\n  /**\n   * The UUID (Binary subtype 4) of the collection that the operation was performed on.\n   *\n   * Only present when the `showExpandedEvents` flag is enabled.\n   *\n   * **NOTE:** collectionUUID will be converted to a NodeJS Buffer if the promoteBuffers\n   *    flag is enabled.\n   *\n   * @sinceServerVersion 6.1.0\n   */\n  collectionUUID: Binary;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentOperationDescription {\n  /**\n   * An description of the operation.\n   *\n   * Only present when the `showExpandedEvents` flag is enabled.\n   *\n   * @sinceServerVersion 6.1.0\n   */\n  operationDescription?: Document;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#insert-event\n */\nexport interface ChangeStreamInsertDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'insert';\n  /** This key will contain the document being inserted */\n  fullDocument: TSchema;\n  /** Namespace the insert event occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#update-event\n */\nexport interface ChangeStreamUpdateDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'update';\n  /**\n   * This is only set if `fullDocument` is set to `'updateLookup'`\n   * Contains the point-in-time post-image of the modified document if the\n   * post-image is available and either 'required' or 'whenAvailable' was\n   * specified for the 'fullDocument' option when creating the change stream.\n   */\n  fullDocument?: TSchema;\n  /** Contains a description of updated and removed fields in this operation */\n  updateDescription: UpdateDescription<TSchema>;\n  /** Namespace the update event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#replace-event\n */\nexport interface ChangeStreamReplaceDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema> {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'replace';\n  /** The fullDocument of a replace event represents the document after the insert of the replacement document */\n  fullDocument: TSchema;\n  /** Namespace the replace event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#delete-event\n */\nexport interface ChangeStreamDeleteDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'delete';\n  /** Namespace the delete event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#drop-event\n */\nexport interface ChangeStreamDropDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'drop';\n  /** Namespace the drop event occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#rename-event\n */\nexport interface ChangeStreamRenameDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'rename';\n  /** The new name for the `ns.coll` collection */\n  to: { db: string; coll: string };\n  /** The \"from\" namespace that the rename occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#dropdatabase-event\n */\nexport interface ChangeStreamDropDatabaseDocument extends ChangeStreamDocumentCommon {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'dropDatabase';\n  /** The database dropped */\n  ns: { db: string };\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#invalidate-event\n */\nexport interface ChangeStreamInvalidateDocument extends ChangeStreamDocumentCommon {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'invalidate';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamCreateIndexDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'createIndexes';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamDropIndexDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'dropIndexes';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamCollModDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'modify';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamCreateDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'create';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamShardCollectionDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'shardCollection';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamReshardCollectionDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'reshardCollection';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/\n */\nexport interface ChangeStreamRefineCollectionShardKeyDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'refineCollectionShardKey';\n}\n\n/** @public */\nexport type ChangeStreamDocument<TSchema extends Document = Document> =\n  | ChangeStreamInsertDocument<TSchema>\n  | ChangeStreamUpdateDocument<TSchema>\n  | ChangeStreamReplaceDocument<TSchema>\n  | ChangeStreamDeleteDocument<TSchema>\n  | ChangeStreamDropDocument\n  | ChangeStreamRenameDocument\n  | ChangeStreamDropDatabaseDocument\n  | ChangeStreamInvalidateDocument\n  | ChangeStreamCreateIndexDocument\n  | ChangeStreamCreateDocument\n  | ChangeStreamCollModDocument\n  | ChangeStreamDropIndexDocument\n  | ChangeStreamShardCollectionDocument\n  | ChangeStreamReshardCollectionDocument\n  | ChangeStreamRefineCollectionShardKeyDocument;\n\n/** @public */\nexport interface UpdateDescription<TSchema extends Document = Document> {\n  /**\n   * A document containing key:value pairs of names of the fields that were\n   * changed, and the new value for those fields.\n   */\n  updatedFields?: Partial<TSchema>;\n\n  /**\n   * An array of field names that were removed from the document.\n   */\n  removedFields?: string[];\n\n  /**\n   * An array of documents which record array truncations performed with pipeline-based updates using one or more of the following stages:\n   * - $addFields\n   * - $set\n   * - $replaceRoot\n   * - $replaceWith\n   */\n  truncatedArrays?: Array<{\n    /** The name of the truncated field. */\n    field: string;\n    /** The number of elements in the truncated array. */\n    newSize: number;\n  }>;\n\n  /**\n   * A document containing additional information about any ambiguous update paths from the update event.  The document\n   * maps the full ambiguous update path to an array containing the actual resolved components of the path.  For example,\n   * given a document shaped like `{ a: { '0': 0 } }`, and an update of `{ $inc: 'a.0' }`, disambiguated paths would look like\n   * the following:\n   *\n   * ```\n   *   {\n   *     'a.0': ['a', '0']\n   *   }\n   * ```\n   *\n   * This field is only present when there are ambiguous paths that are updated as a part of the update event and `showExpandedEvents`\n   * is enabled for the change stream.\n   * @sinceServerVersion 6.1.0\n   */\n  disambiguatedPaths?: Document;\n}\n\n/** @public */\nexport type ChangeStreamEvents<\n  TSchema extends Document = Document,\n  TChange extends Document = ChangeStreamDocument<TSchema>\n> = {\n  resumeTokenChanged(token: ResumeToken): void;\n  init(response: any): void;\n  more(response?: any): void;\n  response(): void;\n  end(): void;\n  error(error: Error): void;\n  change(change: TChange): void;\n} & AbstractCursorEvents;\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @public\n */\nexport class ChangeStream<\n  TSchema extends Document = Document,\n  TChange extends Document = ChangeStreamDocument<TSchema>\n> extends TypedEventEmitter<ChangeStreamEvents<TSchema, TChange>> {\n  pipeline: Document[];\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  options: ChangeStreamOptions & { writeConcern?: never };\n  parent: MongoClient | Db | Collection;\n  namespace: MongoDBNamespace;\n  type: symbol;\n  /** @internal */\n  cursor: ChangeStreamCursor<TSchema, TChange>;\n  streamOptions?: CursorStreamOptions;\n  /** @internal */\n  [kCursorStream]?: Readable & AsyncIterable<TChange>;\n  /** @internal */\n  [kClosed]: boolean;\n  /** @internal */\n  [kMode]: false | 'iterator' | 'emitter';\n\n  /** @event */\n  static readonly RESPONSE = RESPONSE;\n  /** @event */\n  static readonly MORE = MORE;\n  /** @event */\n  static readonly INIT = INIT;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change`\n   * event listener to a Change Stream will switch the stream into flowing mode. Data will\n   * then be passed as soon as it is available.\n   * @event\n   */\n  static readonly CHANGE = CHANGE;\n  /** @event */\n  static readonly END = END;\n  /** @event */\n  static readonly ERROR = ERROR;\n  /**\n   * Emitted each time the change stream stores a new resume token.\n   * @event\n   */\n  static readonly RESUME_TOKEN_CHANGED = RESUME_TOKEN_CHANGED;\n\n  /**\n   * @internal\n   *\n   * @param parent - The parent object that created this change stream\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n   */\n  constructor(\n    parent: OperationParent,\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ) {\n    super();\n\n    this.pipeline = pipeline;\n    this.options = { ...options };\n    delete this.options.writeConcern;\n\n    if (parent instanceof Collection) {\n      this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n    } else if (parent instanceof Db) {\n      this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n    } else if (parent instanceof MongoClient) {\n      this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n    } else {\n      throw new MongoChangeStreamError(\n        'Parent provided to ChangeStream constructor must be an instance of Collection, Db, or MongoClient'\n      );\n    }\n\n    this.parent = parent;\n    this.namespace = parent.s.namespace;\n    if (!this.options.readPreference && parent.readPreference) {\n      this.options.readPreference = parent.readPreference;\n    }\n\n    // Create contained Change Stream cursor\n    this.cursor = this._createChangeStreamCursor(options);\n\n    this[kClosed] = false;\n    this[kMode] = false;\n\n    // Listen for any `change` listeners being added to ChangeStream\n    this.on('newListener', eventName => {\n      if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n        this._streamEvents(this.cursor);\n      }\n    });\n\n    this.on('removeListener', eventName => {\n      if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n        this[kCursorStream]?.removeAllListeners('data');\n      }\n    });\n  }\n\n  /** @internal */\n  get cursorStream(): (Readable & AsyncIterable<TChange>) | undefined {\n    return this[kCursorStream];\n  }\n\n  /** The cached resume token that is used to resume after the most recently returned change. */\n  get resumeToken(): ResumeToken {\n    return this.cursor?.resumeToken;\n  }\n\n  /** Check if there is any document still available in the Change Stream */\n  async hasNext(): Promise<boolean> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      try {\n        const hasNext = await this.cursor.hasNext();\n        return hasNext;\n      } catch (error) {\n        try {\n          await this._processErrorIteratorMode(error);\n        } catch (error) {\n          try {\n            await this.close();\n          } catch {\n            // We are not concerned with errors from close()\n          }\n          throw error;\n        }\n      }\n    }\n  }\n\n  /** Get the next available document from the Change Stream. */\n  async next(): Promise<TChange> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      try {\n        const change = await this.cursor.next();\n        const processedChange = this._processChange(change ?? null);\n        return processedChange;\n      } catch (error) {\n        try {\n          await this._processErrorIteratorMode(error);\n        } catch (error) {\n          try {\n            await this.close();\n          } catch {\n            // We are not concerned with errors from close()\n          }\n          throw error;\n        }\n      }\n    }\n  }\n\n  /**\n   * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n   */\n  async tryNext(): Promise<TChange | null> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      try {\n        const change = await this.cursor.tryNext();\n        return change ?? null;\n      } catch (error) {\n        try {\n          await this._processErrorIteratorMode(error);\n        } catch (error) {\n          try {\n            await this.close();\n          } catch {\n            // We are not concerned with errors from close()\n          }\n          throw error;\n        }\n      }\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<TChange, void, void> {\n    if (this.closed) {\n      return;\n    }\n\n    try {\n      // Change streams run indefinitely as long as errors are resumable\n      // So the only loop breaking condition is if `next()` throws\n      while (true) {\n        yield await this.next();\n      }\n    } finally {\n      try {\n        await this.close();\n      } catch {\n        // we're not concerned with errors from close()\n      }\n    }\n  }\n\n  /** Is the cursor closed */\n  get closed(): boolean {\n    return this[kClosed] || this.cursor.closed;\n  }\n\n  /** Close the Change Stream */\n  async close(): Promise<void> {\n    this[kClosed] = true;\n\n    const cursor = this.cursor;\n    try {\n      await cursor.close();\n    } finally {\n      this._endStream();\n    }\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   *\n   * NOTE: When using a Stream to process change stream events, the stream will\n   * NOT automatically resume in the case a resumable error is encountered.\n   *\n   * @throws MongoChangeStreamError if the underlying cursor or the change stream is closed\n   */\n  stream(options?: CursorStreamOptions): Readable & AsyncIterable<TChange> {\n    if (this.closed) {\n      throw new MongoChangeStreamError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    this.streamOptions = options;\n    return this.cursor.stream(options);\n  }\n\n  /** @internal */\n  private _setIsEmitter(): void {\n    if (this[kMode] === 'iterator') {\n      // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n      throw new MongoAPIError(\n        'ChangeStream cannot be used as an EventEmitter after being used as an iterator'\n      );\n    }\n    this[kMode] = 'emitter';\n  }\n\n  /** @internal */\n  private _setIsIterator(): void {\n    if (this[kMode] === 'emitter') {\n      // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n      throw new MongoAPIError(\n        'ChangeStream cannot be used as an iterator after being used as an EventEmitter'\n      );\n    }\n    this[kMode] = 'iterator';\n  }\n\n  /**\n   * Create a new change stream cursor based on self's configuration\n   * @internal\n   */\n  private _createChangeStreamCursor(\n    options: ChangeStreamOptions | ChangeStreamCursorOptions\n  ): ChangeStreamCursor<TSchema, TChange> {\n    const changeStreamStageOptions = filterOptions(options, CHANGE_STREAM_OPTIONS);\n    if (this.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n      changeStreamStageOptions.allChangesForCluster = true;\n    }\n    const pipeline = [{ $changeStream: changeStreamStageOptions }, ...this.pipeline];\n\n    const client: MongoClient | null =\n      this.type === CHANGE_DOMAIN_TYPES.CLUSTER\n        ? (this.parent as MongoClient)\n        : this.type === CHANGE_DOMAIN_TYPES.DATABASE\n        ? (this.parent as Db).client\n        : this.type === CHANGE_DOMAIN_TYPES.COLLECTION\n        ? (this.parent as Collection).client\n        : null;\n\n    if (client == null) {\n      // This should never happen because of the assertion in the constructor\n      throw new MongoRuntimeError(\n        `Changestream type should only be one of cluster, database, collection. Found ${this.type.toString()}`\n      );\n    }\n\n    const changeStreamCursor = new ChangeStreamCursor<TSchema, TChange>(\n      client,\n      this.namespace,\n      pipeline,\n      options\n    );\n\n    for (const event of CHANGE_STREAM_EVENTS) {\n      changeStreamCursor.on(event, e => this.emit(event, e));\n    }\n\n    if (this.listenerCount(ChangeStream.CHANGE) > 0) {\n      this._streamEvents(changeStreamCursor);\n    }\n\n    return changeStreamCursor;\n  }\n\n  /** @internal */\n  private _closeEmitterModeWithError(error: AnyError): void {\n    this.emit(ChangeStream.ERROR, error);\n\n    this.close().catch(() => null);\n  }\n\n  /** @internal */\n  private _streamEvents(cursor: ChangeStreamCursor<TSchema, TChange>): void {\n    this._setIsEmitter();\n    const stream = this[kCursorStream] ?? cursor.stream();\n    this[kCursorStream] = stream;\n    stream.on('data', change => {\n      try {\n        const processedChange = this._processChange(change);\n        this.emit(ChangeStream.CHANGE, processedChange);\n      } catch (error) {\n        this.emit(ChangeStream.ERROR, error);\n      }\n    });\n    stream.on('error', error => this._processErrorStreamMode(error));\n  }\n\n  /** @internal */\n  private _endStream(): void {\n    const cursorStream = this[kCursorStream];\n    if (cursorStream) {\n      ['data', 'close', 'end', 'error'].forEach(event => cursorStream.removeAllListeners(event));\n      cursorStream.destroy();\n    }\n\n    this[kCursorStream] = undefined;\n  }\n\n  /** @internal */\n  private _processChange(change: TChange | null): TChange {\n    if (this[kClosed]) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    // a null change means the cursor has been notified, implicitly closing the change stream\n    if (change == null) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoRuntimeError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    if (change && !change._id) {\n      throw new MongoChangeStreamError(NO_RESUME_TOKEN_ERROR);\n    }\n\n    // cache the resume token\n    this.cursor.cacheResumeToken(change._id);\n\n    // wipe the startAtOperationTime if there was one so that there won't be a conflict\n    // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n    this.options.startAtOperationTime = undefined;\n\n    return change;\n  }\n\n  /** @internal */\n  private _processErrorStreamMode(changeStreamError: AnyError) {\n    // If the change stream has been closed explicitly, do not process error.\n    if (this[kClosed]) return;\n\n    if (isResumableError(changeStreamError, this.cursor.maxWireVersion)) {\n      this._endStream();\n      this.cursor.close().catch(() => null);\n\n      const topology = getTopology(this.parent);\n      topology.selectServer(this.cursor.readPreference, {}, serverSelectionError => {\n        if (serverSelectionError) return this._closeEmitterModeWithError(changeStreamError);\n        this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n      });\n    } else {\n      this._closeEmitterModeWithError(changeStreamError);\n    }\n  }\n\n  /** @internal */\n  private async _processErrorIteratorMode(changeStreamError: AnyError) {\n    if (this[kClosed]) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    if (!isResumableError(changeStreamError, this.cursor.maxWireVersion)) {\n      try {\n        await this.close();\n      } catch {\n        // ignore errors from close\n      }\n      throw changeStreamError;\n    }\n\n    await this.cursor.close().catch(() => null);\n    const topology = getTopology(this.parent);\n    try {\n      await topology.selectServerAsync(this.cursor.readPreference, {});\n      this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n    } catch {\n      // if the topology can't reconnect, close the stream\n      await this.close();\n      throw changeStreamError;\n    }\n  }\n}\n", "import { Readable } from 'stream';\n\nimport type { Document, ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport {\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoRuntimeError\n} from '../error';\nimport type { FindOptions } from '../operations/find';\nimport type { ReadPreference } from '../read_preference';\nimport type { Sort } from '../sort';\nimport type { Callback } from '../utils';\nimport type { GridFSChunk } from './upload';\n\n/** @public */\nexport interface GridFSBucketReadStreamOptions {\n  sort?: Sort;\n  skip?: number;\n  /**\n   * 0-indexed non-negative byte offset from the beginning of the file\n   */\n  start?: number;\n  /**\n   * 0-indexed non-negative byte offset to the end of the file contents\n   * to be returned by the stream. `end` is non-inclusive\n   */\n  end?: number;\n}\n\n/** @public */\nexport interface GridFSBucketReadStreamOptionsWithRevision extends GridFSBucketReadStreamOptions {\n  /** The revision number relative to the oldest file with the given filename. 0\n   * gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the\n   * newest. */\n  revision?: number;\n}\n\n/** @public */\nexport interface GridFSFile {\n  _id: ObjectId;\n  length: number;\n  chunkSize: number;\n  filename: string;\n  contentType?: string;\n  aliases?: string[];\n  metadata?: Document;\n  uploadDate: Date;\n}\n\n/** @internal */\nexport interface GridFSBucketReadStreamPrivate {\n  bytesRead: number;\n  bytesToTrim: number;\n  bytesToSkip: number;\n  chunks: Collection<GridFSChunk>;\n  cursor?: FindCursor<GridFSChunk>;\n  expected: number;\n  files: Collection<GridFSFile>;\n  filter: Document;\n  init: boolean;\n  expectedEnd: number;\n  file?: GridFSFile;\n  options: {\n    sort?: Sort;\n    skip?: number;\n    start: number;\n    end: number;\n  };\n  readPreference?: ReadPreference;\n}\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n * @public\n */\nexport class GridFSBucketReadStream extends Readable implements NodeJS.ReadableStream {\n  /** @internal */\n  s: GridFSBucketReadStreamPrivate;\n\n  /**\n   * An error occurred\n   * @event\n   */\n  static readonly ERROR = 'error' as const;\n  /**\n   * Fires when the stream loaded the file document corresponding to the provided id.\n   * @event\n   */\n  static readonly FILE = 'file' as const;\n  /**\n   * Emitted when a chunk of data is available to be consumed.\n   * @event\n   */\n  static readonly DATA = 'data' as const;\n  /**\n   * Fired when the stream is exhausted (no more data events).\n   * @event\n   */\n  static readonly END = 'end' as const;\n  /**\n   * Fired when the stream is exhausted and the underlying cursor is killed\n   * @event\n   */\n  static readonly CLOSE = 'close' as const;\n\n  /**\n   * @param chunks - Handle for chunks collection\n   * @param files - Handle for files collection\n   * @param readPreference - The read preference to use\n   * @param filter - The filter to use to find the file document\n   * @internal\n   */\n  constructor(\n    chunks: Collection<GridFSChunk>,\n    files: Collection<GridFSFile>,\n    readPreference: ReadPreference | undefined,\n    filter: Document,\n    options?: GridFSBucketReadStreamOptions\n  ) {\n    super();\n    this.s = {\n      bytesToTrim: 0,\n      bytesToSkip: 0,\n      bytesRead: 0,\n      chunks,\n      expected: 0,\n      files,\n      filter,\n      init: false,\n      expectedEnd: 0,\n      options: {\n        start: 0,\n        end: 0,\n        ...options\n      },\n      readPreference\n    };\n  }\n\n  /**\n   * Reads from the cursor and pushes to the stream.\n   * Private Impl, do not call directly\n   * @internal\n   */\n  override _read(): void {\n    if (this.destroyed) return;\n    waitForFile(this, () => doRead(this));\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param start - 0-based offset in bytes to start streaming from\n   */\n  start(start = 0): this {\n    throwIfInitialized(this);\n    this.s.options.start = start;\n    return this;\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param end - Offset in bytes to stop reading at\n   */\n  end(end = 0): this {\n    throwIfInitialized(this);\n    this.s.options.end = end;\n    return this;\n  }\n\n  /**\n   * Marks this stream as aborted (will never push another `data` event)\n   * and kills the underlying cursor. Will emit the 'end' event, and then\n   * the 'close' event once the cursor is successfully killed.\n   */\n  async abort(): Promise<void> {\n    this.push(null);\n    this.destroyed = true;\n    if (this.s.cursor) {\n      try {\n        await this.s.cursor.close();\n      } finally {\n        this.emit(GridFSBucketReadStream.CLOSE);\n      }\n    } else {\n      if (!this.s.init) {\n        // If not initialized, fire close event because we will never\n        // get a cursor\n        this.emit(GridFSBucketReadStream.CLOSE);\n      }\n    }\n  }\n}\n\nfunction throwIfInitialized(stream: GridFSBucketReadStream): void {\n  if (stream.s.init) {\n    throw new MongoGridFSStreamError('Options cannot be changed after the stream is initialized');\n  }\n}\n\nfunction doRead(stream: GridFSBucketReadStream): void {\n  if (stream.destroyed) return;\n  if (!stream.s.cursor) return;\n  if (!stream.s.file) return;\n\n  const handleReadResult = ({\n    error,\n    doc\n  }: { error: Error; doc: null } | { error: null; doc: any }) => {\n    if (stream.destroyed) {\n      return;\n    }\n    if (error) {\n      stream.emit(GridFSBucketReadStream.ERROR, error);\n      return;\n    }\n    if (!doc) {\n      stream.push(null);\n\n      stream.s.cursor?.close().then(\n        () => {\n          stream.emit(GridFSBucketReadStream.CLOSE);\n        },\n        error => {\n          stream.emit(GridFSBucketReadStream.ERROR, error);\n        }\n      );\n      return;\n    }\n\n    if (!stream.s.file) return;\n\n    const bytesRemaining = stream.s.file.length - stream.s.bytesRead;\n    const expectedN = stream.s.expected++;\n    const expectedLength = Math.min(stream.s.file.chunkSize, bytesRemaining);\n    if (doc.n > expectedN) {\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(\n          `ChunkIsMissing: Got unexpected n: ${doc.n}, expected: ${expectedN}`\n        )\n      );\n    }\n\n    if (doc.n < expectedN) {\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}, expected: ${expectedN}`)\n      );\n    }\n\n    let buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.byteLength !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        return stream.emit(\n          GridFSBucketReadStream.ERROR,\n          new MongoGridFSChunkError(\n            `ExtraChunk: Got unexpected n: ${doc.n}, expected file length ${stream.s.file.length} bytes but already read ${stream.s.bytesRead} bytes`\n          )\n        );\n      }\n\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(\n          `ChunkIsWrongSize: Got unexpected length: ${buf.byteLength}, expected: ${expectedLength}`\n        )\n      );\n    }\n\n    stream.s.bytesRead += buf.byteLength;\n\n    if (buf.byteLength === 0) {\n      return stream.push(null);\n    }\n\n    let sliceStart = null;\n    let sliceEnd = null;\n\n    if (stream.s.bytesToSkip != null) {\n      sliceStart = stream.s.bytesToSkip;\n      stream.s.bytesToSkip = 0;\n    }\n\n    const atEndOfStream = expectedN === stream.s.expectedEnd - 1;\n    const bytesLeftToRead = stream.s.options.end - stream.s.bytesToSkip;\n    if (atEndOfStream && stream.s.bytesToTrim != null) {\n      sliceEnd = stream.s.file.chunkSize - stream.s.bytesToTrim;\n    } else if (stream.s.options.end && bytesLeftToRead < doc.data.byteLength) {\n      sliceEnd = bytesLeftToRead;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.byteLength);\n    }\n\n    stream.push(buf);\n    return;\n  };\n\n  stream.s.cursor.next().then(\n    doc => handleReadResult({ error: null, doc }),\n    error => handleReadResult({ error, doc: null })\n  );\n}\n\nfunction init(stream: GridFSBucketReadStream): void {\n  const findOneOptions: FindOptions = {};\n  if (stream.s.readPreference) {\n    findOneOptions.readPreference = stream.s.readPreference;\n  }\n  if (stream.s.options && stream.s.options.sort) {\n    findOneOptions.sort = stream.s.options.sort;\n  }\n  if (stream.s.options && stream.s.options.skip) {\n    findOneOptions.skip = stream.s.options.skip;\n  }\n\n  const handleReadResult = ({\n    error,\n    doc\n  }: { error: Error; doc: null } | { error: null; doc: any }) => {\n    if (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    if (!doc) {\n      const identifier = stream.s.filter._id\n        ? stream.s.filter._id.toString()\n        : stream.s.filter.filename;\n      const errmsg = `FileNotFound: file ${identifier} was not found`;\n      // TODO(NODE-3483)\n      const err = new MongoRuntimeError(errmsg);\n      err.code = 'ENOENT'; // TODO: NODE-3338 set property as part of constructor\n      return stream.emit(GridFSBucketReadStream.ERROR, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      stream.push(null);\n      return;\n    }\n\n    if (stream.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      stream.emit(GridFSBucketReadStream.CLOSE);\n      return;\n    }\n\n    try {\n      stream.s.bytesToSkip = handleStartOption(stream, doc, stream.s.options);\n    } catch (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    const filter: Document = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (stream.s.options && stream.s.options.start != null) {\n      const skip = Math.floor(stream.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n    stream.s.cursor = stream.s.chunks.find(filter).sort({ n: 1 });\n\n    if (stream.s.readPreference) {\n      stream.s.cursor.withReadPreference(stream.s.readPreference);\n    }\n\n    stream.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    stream.s.file = doc as GridFSFile;\n\n    try {\n      stream.s.bytesToTrim = handleEndOption(stream, doc, stream.s.cursor, stream.s.options);\n    } catch (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    stream.emit(GridFSBucketReadStream.FILE, doc);\n    return;\n  };\n\n  stream.s.files.findOne(stream.s.filter, findOneOptions).then(\n    doc => handleReadResult({ error: null, doc }),\n    error => handleReadResult({ error, doc: null })\n  );\n}\n\nfunction waitForFile(stream: GridFSBucketReadStream, callback: Callback): void {\n  if (stream.s.file) {\n    return callback();\n  }\n\n  if (!stream.s.init) {\n    init(stream);\n    stream.s.init = true;\n  }\n\n  stream.once('file', () => {\n    callback();\n  });\n}\n\nfunction handleStartOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  options: GridFSBucketReadStreamOptions\n): number {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream start (${options.start}) must not be negative`);\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be greater than stream end (${options.end})`\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n  throw new MongoInvalidArgumentError('Start option must be defined');\n}\n\nfunction handleEndOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  cursor: FindCursor<GridFSChunk>,\n  options: GridFSBucketReadStreamOptions\n) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream end (${options.end}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start == null || options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream end (${options.end}) must not be negative`);\n    }\n\n    const start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n  throw new MongoInvalidArgumentError('End option must be defined');\n}\n", "import { Writable } from 'stream';\n\nimport type { Document } from '../bson';\nimport { ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport { type AnyError, MongoAPIError, MONGODB_ERROR_CODES, MongoError } from '../error';\nimport type { Callback } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { WriteConcern } from './../write_concern';\nimport type { GridFSFile } from './download';\nimport type { GridFSBucket } from './index';\n\n/** @public */\nexport interface GridFSChunk {\n  _id: ObjectId;\n  files_id: ObjectId;\n  n: number;\n  data: Buffer | Uint8Array;\n}\n\n/** @public */\nexport interface GridFSBucketWriteStreamOptions extends WriteConcernOptions {\n  /** Overwrite this bucket's chunkSizeBytes for this file */\n  chunkSizeBytes?: number;\n  /** Custom file id for the GridFS file. */\n  id?: ObjectId;\n  /** Object to store in the file document's `metadata` field */\n  metadata?: Document;\n  /** String to store in the file document's `contentType` field */\n  contentType?: string;\n  /** Array of strings to store in the file document's `aliases` field */\n  aliases?: string[];\n}\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n * @public\n */\nexport class GridFSBucketWriteStream extends Writable implements NodeJS.WritableStream {\n  bucket: GridFSBucket;\n  chunks: Collection<GridFSChunk>;\n  filename: string;\n  files: Collection<GridFSFile>;\n  options: GridFSBucketWriteStreamOptions;\n  done: boolean;\n  id: ObjectId;\n  chunkSizeBytes: number;\n  bufToStore: Buffer;\n  length: number;\n  n: number;\n  pos: number;\n  state: {\n    streamEnd: boolean;\n    outstandingRequests: number;\n    errored: boolean;\n    aborted: boolean;\n  };\n  writeConcern?: WriteConcern;\n\n  /** @event */\n  static readonly CLOSE = 'close';\n  /** @event */\n  static readonly ERROR = 'error';\n  /**\n   * `end()` was called and the write stream successfully wrote the file metadata and all the chunks to MongoDB.\n   * @event\n   */\n  static readonly FINISH = 'finish';\n\n  /**\n   * @param bucket - Handle for this stream's corresponding bucket\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   * @internal\n   */\n  constructor(bucket: GridFSBucket, filename: string, options?: GridFSBucketWriteStreamOptions) {\n    super();\n\n    options = options ?? {};\n    this.bucket = bucket;\n    this.chunks = bucket.s._chunksCollection;\n    this.filename = filename;\n    this.files = bucket.s._filesCollection;\n    this.options = options;\n    this.writeConcern = WriteConcern.fromOptions(options) || bucket.s.options.writeConcern;\n    // Signals the write is all done\n    this.done = false;\n\n    this.id = options.id ? options.id : new ObjectId();\n    // properly inherit the default chunksize from parent\n    this.chunkSizeBytes = options.chunkSizeBytes || this.bucket.s.options.chunkSizeBytes;\n    this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n    this.length = 0;\n    this.n = 0;\n    this.pos = 0;\n    this.state = {\n      streamEnd: false,\n      outstandingRequests: 0,\n      errored: false,\n      aborted: false\n    };\n\n    if (!this.bucket.s.calledOpenUploadStream) {\n      this.bucket.s.calledOpenUploadStream = true;\n\n      checkIndexes(this).then(\n        () => {\n          this.bucket.s.checkedIndexes = true;\n          this.bucket.emit('index');\n        },\n        () => null\n      );\n    }\n  }\n\n  /**\n   * Write a buffer to the stream.\n   *\n   * @param chunk - Buffer to write\n   * @param encodingOrCallback - Optional encoding for the buffer\n   * @param callback - Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n   * @returns False if this write required flushing a chunk to MongoDB. True otherwise.\n   */\n  override write(chunk: Buffer | string): boolean;\n  override write(chunk: Buffer | string, callback: Callback<void>): boolean;\n  override write(chunk: Buffer | string, encoding: BufferEncoding | undefined): boolean;\n  override write(\n    chunk: Buffer | string,\n    encoding: BufferEncoding | undefined,\n    callback: Callback<void>\n  ): boolean;\n  override write(\n    chunk: Buffer | string,\n    encodingOrCallback?: Callback<void> | BufferEncoding,\n    callback?: Callback<void>\n  ): boolean {\n    const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n    callback = typeof encodingOrCallback === 'function' ? encodingOrCallback : callback;\n    return waitForIndexes(this, () => doWrite(this, chunk, encoding, callback));\n  }\n\n  /**\n   * Places this write stream into an aborted state (all future writes fail)\n   * and deletes all chunks that have already been written.\n   */\n  async abort(): Promise<void> {\n    if (this.state.streamEnd) {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n      throw new MongoAPIError('Cannot abort a stream that has already completed');\n    }\n\n    if (this.state.aborted) {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n      throw new MongoAPIError('Cannot call abort() on a stream twice');\n    }\n\n    this.state.aborted = true;\n    await this.chunks.deleteMany({ files_id: this.id });\n  }\n\n  /**\n   * Tells the stream that no more data will be coming in. The stream will\n   * persist the remaining data to MongoDB, write the files document, and\n   * then emit a 'finish' event.\n   *\n   * @param chunk - Buffer to write\n   * @param encoding - Optional encoding for the buffer\n   * @param callback - Function to call when all files and chunks have been persisted to MongoDB\n   */\n  override end(): this;\n  override end(chunk: Buffer): this;\n  override end(callback: Callback<GridFSFile | void>): this;\n  override end(chunk: Buffer, callback: Callback<GridFSFile | void>): this;\n  override end(chunk: Buffer, encoding: BufferEncoding): this;\n  override end(\n    chunk: Buffer,\n    encoding: BufferEncoding | undefined,\n    callback: Callback<GridFSFile | void>\n  ): this;\n  override end(\n    chunkOrCallback?: Buffer | Callback<GridFSFile | void>,\n    encodingOrCallback?: BufferEncoding | Callback<GridFSFile | void>,\n    callback?: Callback<GridFSFile | void>\n  ): this {\n    const chunk = typeof chunkOrCallback === 'function' ? undefined : chunkOrCallback;\n    const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n    callback =\n      typeof chunkOrCallback === 'function'\n        ? chunkOrCallback\n        : typeof encodingOrCallback === 'function'\n        ? encodingOrCallback\n        : callback;\n\n    if (this.state.streamEnd || checkAborted(this, callback)) return this;\n\n    this.state.streamEnd = true;\n\n    if (callback) {\n      this.once(GridFSBucketWriteStream.FINISH, (result: GridFSFile) => {\n        if (callback) callback(undefined, result);\n      });\n    }\n\n    if (!chunk) {\n      waitForIndexes(this, () => !!writeRemnant(this));\n      return this;\n    }\n\n    this.write(chunk, encoding, () => {\n      writeRemnant(this);\n    });\n\n    return this;\n  }\n}\n\nfunction __handleError(\n  stream: GridFSBucketWriteStream,\n  error: AnyError,\n  callback?: Callback\n): void {\n  if (stream.state.errored) {\n    return;\n  }\n  stream.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  stream.emit(GridFSBucketWriteStream.ERROR, error);\n}\n\nfunction createChunkDoc(filesId: ObjectId, n: number, data: Buffer): GridFSChunk {\n  return {\n    _id: new ObjectId(),\n    files_id: filesId,\n    n,\n    data\n  };\n}\n\nasync function checkChunksIndex(stream: GridFSBucketWriteStream): Promise<void> {\n  const index = { files_id: 1, n: 1 };\n\n  let indexes;\n  try {\n    indexes = await stream.chunks.listIndexes().toArray();\n  } catch (error) {\n    if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n      indexes = [];\n    } else {\n      throw error;\n    }\n  }\n\n  const hasChunksIndex = !!indexes.find(index => {\n    const keys = Object.keys(index.key);\n    if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n      return true;\n    }\n    return false;\n  });\n\n  if (!hasChunksIndex) {\n    await stream.chunks.createIndex(index, {\n      ...stream.writeConcern,\n      background: true,\n      unique: true\n    });\n  }\n}\n\nfunction checkDone(stream: GridFSBucketWriteStream, callback?: Callback): boolean {\n  if (stream.done) return true;\n  if (stream.state.streamEnd && stream.state.outstandingRequests === 0 && !stream.state.errored) {\n    // Set done so we do not trigger duplicate createFilesDoc\n    stream.done = true;\n    // Create a new files doc\n    const filesDoc = createFilesDoc(\n      stream.id,\n      stream.length,\n      stream.chunkSizeBytes,\n      stream.filename,\n      stream.options.contentType,\n      stream.options.aliases,\n      stream.options.metadata\n    );\n\n    if (checkAborted(stream, callback)) {\n      return false;\n    }\n\n    stream.files.insertOne(filesDoc, { writeConcern: stream.writeConcern }).then(\n      () => {\n        stream.emit(GridFSBucketWriteStream.FINISH, filesDoc);\n        stream.emit(GridFSBucketWriteStream.CLOSE);\n      },\n      error => {\n        return __handleError(stream, error, callback);\n      }\n    );\n\n    return true;\n  }\n\n  return false;\n}\n\nasync function checkIndexes(stream: GridFSBucketWriteStream): Promise<void> {\n  const doc = await stream.files.findOne({}, { projection: { _id: 1 } });\n  if (doc != null) {\n    // If at least one document exists assume the collection has the required index\n    return;\n  }\n\n  const index = { filename: 1, uploadDate: 1 };\n\n  let indexes;\n  try {\n    indexes = await stream.files.listIndexes().toArray();\n  } catch (error) {\n    if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n      indexes = [];\n    } else {\n      throw error;\n    }\n  }\n\n  const hasFileIndex = !!indexes.find(index => {\n    const keys = Object.keys(index.key);\n    if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n      return true;\n    }\n    return false;\n  });\n\n  if (!hasFileIndex) {\n    await stream.files.createIndex(index, { background: false });\n  }\n\n  await checkChunksIndex(stream);\n}\n\nfunction createFilesDoc(\n  _id: ObjectId,\n  length: number,\n  chunkSize: number,\n  filename: string,\n  contentType?: string,\n  aliases?: string[],\n  metadata?: Document\n): GridFSFile {\n  const ret: GridFSFile = {\n    _id,\n    length,\n    chunkSize,\n    uploadDate: new Date(),\n    filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\nfunction doWrite(\n  stream: GridFSBucketWriteStream,\n  chunk: Buffer | string,\n  encoding?: BufferEncoding,\n  callback?: Callback<void>\n): boolean {\n  if (checkAborted(stream, callback)) {\n    return false;\n  }\n\n  const inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  stream.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (stream.pos + inputBuf.length < stream.chunkSizeBytes) {\n    inputBuf.copy(stream.bufToStore, stream.pos);\n    stream.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  let inputBufRemaining = inputBuf.length;\n  let spaceRemaining: number = stream.chunkSizeBytes - stream.pos;\n  let numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  let outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    const inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(stream.bufToStore, stream.pos, inputBufPos, inputBufPos + numToCopy);\n    stream.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    let doc: GridFSChunk;\n    if (spaceRemaining === 0) {\n      doc = createChunkDoc(stream.id, stream.n, Buffer.from(stream.bufToStore));\n      ++stream.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(stream, callback)) {\n        return false;\n      }\n\n      stream.chunks.insertOne(doc, { writeConcern: stream.writeConcern }).then(\n        () => {\n          --stream.state.outstandingRequests;\n          --outstandingRequests;\n\n          if (!outstandingRequests) {\n            stream.emit('drain', doc);\n            callback && callback();\n            checkDone(stream);\n          }\n        },\n        error => {\n          return __handleError(stream, error);\n        }\n      );\n\n      spaceRemaining = stream.chunkSizeBytes;\n      stream.pos = 0;\n      ++stream.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\nfunction waitForIndexes(\n  stream: GridFSBucketWriteStream,\n  callback: (res: boolean) => boolean\n): boolean {\n  if (stream.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  stream.bucket.once('index', () => {\n    callback(true);\n  });\n\n  return true;\n}\n\nfunction writeRemnant(stream: GridFSBucketWriteStream, callback?: Callback): boolean {\n  // Buffer is empty, so don't bother to insert\n  if (stream.pos === 0) {\n    return checkDone(stream, callback);\n  }\n\n  ++stream.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  const remnant = Buffer.alloc(stream.pos);\n  stream.bufToStore.copy(remnant, 0, 0, stream.pos);\n  const doc = createChunkDoc(stream.id, stream.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(stream, callback)) {\n    return false;\n  }\n\n  stream.chunks.insertOne(doc, { writeConcern: stream.writeConcern }).then(\n    () => {\n      --stream.state.outstandingRequests;\n      checkDone(stream);\n    },\n    error => {\n      return __handleError(stream, error);\n    }\n  );\n  return true;\n}\n\nfunction checkAborted(stream: GridFSBucketWriteStream, callback?: Callback<void>): boolean {\n  if (stream.state.aborted) {\n    if (typeof callback === 'function') {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosedError\n      callback(new MongoAPIError('Stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n", "import type { ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport type { Db } from '../db';\nimport { MongoRuntimeError } from '../error';\nimport { type Filter, TypedEventEmitter } from '../mongo_types';\nimport type { ReadPreference } from '../read_preference';\nimport type { Sort } from '../sort';\nimport { WriteConcern, type WriteConcernOptions } from '../write_concern';\nimport type { FindOptions } from './../operations/find';\nimport {\n  GridFSBucketReadStream,\n  type GridFSBucketReadStreamOptions,\n  type GridFSBucketReadStreamOptionsWithRevision,\n  type GridFSFile\n} from './download';\nimport {\n  GridFSBucketWriteStream,\n  type GridFSBucketWriteStreamOptions,\n  type GridFSChunk\n} from './upload';\n\nconst DEFAULT_GRIDFS_BUCKET_OPTIONS: {\n  bucketName: string;\n  chunkSizeBytes: number;\n} = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\n/** @public */\nexport interface GridFSBucketOptions extends WriteConcernOptions {\n  /** The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot. */\n  bucketName?: string;\n  /** Number of bytes stored in each chunk. Defaults to 255KB */\n  chunkSizeBytes?: number;\n  /** Read preference to be passed to read operations */\n  readPreference?: ReadPreference;\n}\n\n/** @internal */\nexport interface GridFSBucketPrivate {\n  db: Db;\n  options: {\n    bucketName: string;\n    chunkSizeBytes: number;\n    readPreference?: ReadPreference;\n    writeConcern: WriteConcern | undefined;\n  };\n  _chunksCollection: Collection<GridFSChunk>;\n  _filesCollection: Collection<GridFSFile>;\n  checkedIndexes: boolean;\n  calledOpenUploadStream: boolean;\n}\n\n/** @public */\nexport type GridFSBucketEvents = {\n  index(): void;\n};\n\n/**\n * Constructor for a streaming GridFS interface\n * @public\n */\nexport class GridFSBucket extends TypedEventEmitter<GridFSBucketEvents> {\n  /** @internal */\n  s: GridFSBucketPrivate;\n\n  /**\n   * When the first call to openUploadStream is made, the upload stream will\n   * check to see if it needs to create the proper indexes on the chunks and\n   * files collections. This event is fired either when 1) it determines that\n   * no index creation is necessary, 2) when it successfully creates the\n   * necessary indexes.\n   * @event\n   */\n  static readonly INDEX = 'index' as const;\n\n  constructor(db: Db, options?: GridFSBucketOptions) {\n    super();\n    this.setMaxListeners(0);\n    const privateOptions = {\n      ...DEFAULT_GRIDFS_BUCKET_OPTIONS,\n      ...options,\n      writeConcern: WriteConcern.fromOptions(options)\n    };\n    this.s = {\n      db,\n      options: privateOptions,\n      _chunksCollection: db.collection<GridFSChunk>(privateOptions.bucketName + '.chunks'),\n      _filesCollection: db.collection<GridFSFile>(privateOptions.bucketName + '.files'),\n      checkedIndexes: false,\n      calledOpenUploadStream: false\n    };\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS. The stream's 'id' property contains the resulting\n   * file's id.\n   *\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   */\n\n  openUploadStream(\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, options);\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n   * file's id.\n   */\n  openUploadStreamWithId(\n    id: ObjectId,\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, { ...options, id });\n  }\n\n  /** Returns a readable stream (GridFSBucketReadStream) for streaming file data from GridFS. */\n  openDownloadStream(\n    id: ObjectId,\n    options?: GridFSBucketReadStreamOptions\n  ): GridFSBucketReadStream {\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { _id: id },\n      options\n    );\n  }\n\n  /**\n   * Deletes a file with the given id\n   *\n   * @param id - The id of the file doc\n   */\n  async delete(id: ObjectId): Promise<void> {\n    const { deletedCount } = await this.s._filesCollection.deleteOne({ _id: id });\n\n    // Delete orphaned chunks before returning FileNotFound\n    await this.s._chunksCollection.deleteMany({ files_id: id });\n\n    if (deletedCount === 0) {\n      // TODO(NODE-3483): Replace with more appropriate error\n      // Consider creating new error MongoGridFSFileNotFoundError\n      throw new MongoRuntimeError(`File not found for id ${id}`);\n    }\n  }\n\n  /** Convenience wrapper around find on the files collection */\n  find(filter: Filter<GridFSFile> = {}, options: FindOptions = {}): FindCursor<GridFSFile> {\n    return this.s._filesCollection.find(filter, options);\n  }\n\n  /**\n   * Returns a readable stream (GridFSBucketReadStream) for streaming the\n   * file with the given name from GridFS. If there are multiple files with\n   * the same name, this will stream the most recent file with the given name\n   * (as determined by the `uploadDate` field). You can set the `revision`\n   * option to change this behavior.\n   */\n  openDownloadStreamByName(\n    filename: string,\n    options?: GridFSBucketReadStreamOptionsWithRevision\n  ): GridFSBucketReadStream {\n    let sort: Sort = { uploadDate: -1 };\n    let skip = undefined;\n    if (options && options.revision != null) {\n      if (options.revision >= 0) {\n        sort = { uploadDate: 1 };\n        skip = options.revision;\n      } else {\n        skip = -options.revision - 1;\n      }\n    }\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { filename },\n      { ...options, sort, skip }\n    );\n  }\n\n  /**\n   * Renames the file with the given _id to the given string\n   *\n   * @param id - the id of the file to rename\n   * @param filename - new name for the file\n   */\n  async rename(id: ObjectId, filename: string): Promise<void> {\n    const filter = { _id: id };\n    const update = { $set: { filename } };\n    const { matchedCount } = await this.s._filesCollection.updateOne(filter, update);\n    if (matchedCount === 0) {\n      throw new MongoRuntimeError(`File with id ${id} not found`);\n    }\n  }\n\n  /** Removes this bucket's files collection, followed by its chunks collection. */\n  async drop(): Promise<void> {\n    await this.s._filesCollection.drop();\n    await this.s._chunksCollection.drop();\n  }\n}\n", "import { Admin } from './admin';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { ChangeStream } from './change_stream';\nimport { Collection } from './collection';\nimport { AbstractCursor } from './cursor/abstract_cursor';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport type { RunCommandCursor } from './cursor/run_command_cursor';\nimport { Db } from './db';\nimport { GridFSBucket } from './gridfs';\nimport { GridFSBucketReadStream } from './gridfs/download';\nimport { GridFSBucketWriteStream } from './gridfs/upload';\nimport { MongoClient } from './mongo_client';\nimport { CancellationToken } from './mongo_types';\nimport { ClientSession } from './sessions';\n\n/** @public */\nexport { BSON } from './bson';\nexport {\n  Binary,\n  BSONRegExp,\n  BSONSymbol,\n  BSONType,\n  Code,\n  DBRef,\n  Decimal128,\n  Double,\n  Int32,\n  Long,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  Timestamp\n} from './bson';\nexport { AnyBulkWriteOperation, BulkWriteOptions, MongoBulkWriteError } from './bulk/common';\nexport { ChangeStreamCursor } from './cursor/change_stream_cursor';\nexport {\n  MongoAPIError,\n  MongoAWSError,\n  MongoAzureError,\n  MongoBatchReExecutionError,\n  MongoChangeStreamError,\n  MongoCompatibilityError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoDecompressionError,\n  MongoDriverError,\n  MongoError,\n  MongoExpiredSessionError,\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoKerberosError,\n  MongoMissingCredentialsError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoParseError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  MongoServerError,\n  MongoServerSelectionError,\n  MongoSystemError,\n  MongoTailableCursorError,\n  MongoTopologyClosedError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError,\n  MongoWriteConcernError\n} from './error';\nexport {\n  AbstractCursor,\n  // Actual driver classes exported\n  Admin,\n  AggregationCursor,\n  CancellationToken,\n  ChangeStream,\n  ClientSession,\n  Collection,\n  Db,\n  FindCursor,\n  GridFSBucket,\n  GridFSBucketReadStream,\n  GridFSBucketWriteStream,\n  ListCollectionsCursor,\n  ListIndexesCursor,\n  MongoClient,\n  OrderedBulkOperation,\n  RunCommandCursor,\n  UnorderedBulkOperation\n};\n\n// enums\nexport { BatchType } from './bulk/common';\nexport { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';\nexport { AuthMechanism } from './cmap/auth/providers';\nexport { Compressor } from './cmap/wire_protocol/compression';\nexport { CURSOR_FLAGS } from './cursor/abstract_cursor';\nexport { AutoEncryptionLoggerLevel } from './deps';\nexport { MongoErrorLabel } from './error';\nexport { ExplainVerbosity } from './explain';\nexport { ServerApiVersion } from './mongo_client';\nexport { ReturnDocument } from './operations/find_and_modify';\nexport { ProfilingLevel } from './operations/set_profiling_level';\nexport { ReadConcernLevel } from './read_concern';\nexport { ReadPreferenceMode } from './read_preference';\nexport { ServerType, TopologyType } from './sdam/common';\n\n// Helper classes\nexport { ReadConcern } from './read_concern';\nexport { ReadPreference } from './read_preference';\nexport { WriteConcern } from './write_concern';\n\n// events\nexport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './cmap/command_monitoring_events';\nexport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nexport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nexport { SrvPollingEvent } from './sdam/srv_polling';\n\n// type only exports below, these are removed from emitted JS\nexport type { AdminPrivate } from './admin';\nexport type { BSONSerializeOptions, Document } from './bson';\nexport type { deserialize, serialize } from './bson';\nexport type {\n  BulkResult,\n  BulkWriteOperationError,\n  BulkWriteResult,\n  DeleteManyModel,\n  DeleteOneModel,\n  InsertOneModel,\n  ReplaceOneModel,\n  UpdateManyModel,\n  UpdateOneModel,\n  WriteConcernError,\n  WriteError\n} from './bulk/common';\nexport type {\n  Batch,\n  BulkOperationBase,\n  BulkOperationPrivate,\n  FindOperators,\n  WriteConcernErrorData\n} from './bulk/common';\nexport type {\n  ChangeStreamCollModDocument,\n  ChangeStreamCreateDocument,\n  ChangeStreamCreateIndexDocument,\n  ChangeStreamDeleteDocument,\n  ChangeStreamDocument,\n  ChangeStreamDocumentCollectionUUID,\n  ChangeStreamDocumentCommon,\n  ChangeStreamDocumentKey,\n  ChangeStreamDocumentOperationDescription,\n  ChangeStreamDropDatabaseDocument,\n  ChangeStreamDropDocument,\n  ChangeStreamDropIndexDocument,\n  ChangeStreamEvents,\n  ChangeStreamInsertDocument,\n  ChangeStreamInvalidateDocument,\n  ChangeStreamNameSpace,\n  ChangeStreamOptions,\n  ChangeStreamRefineCollectionShardKeyDocument,\n  ChangeStreamRenameDocument,\n  ChangeStreamReplaceDocument,\n  ChangeStreamReshardCollectionDocument,\n  ChangeStreamShardCollectionDocument,\n  ChangeStreamSplitEvent,\n  ChangeStreamUpdateDocument,\n  OperationTime,\n  ResumeOptions,\n  ResumeToken,\n  UpdateDescription\n} from './change_stream';\nexport type { AuthContext } from './cmap/auth/auth_provider';\nexport type {\n  AuthMechanismProperties,\n  MongoCredentials,\n  MongoCredentialsOptions\n} from './cmap/auth/mongo_credentials';\nexport type {\n  IdPServerInfo,\n  IdPServerResponse,\n  OIDCCallbackContext,\n  OIDCRefreshFunction,\n  OIDCRequestFunction\n} from './cmap/auth/mongodb_oidc';\nexport type {\n  BinMsg,\n  MessageHeader,\n  Msg,\n  OpMsgOptions,\n  OpQueryOptions,\n  OpResponseOptions,\n  Query,\n  Response,\n  WriteProtocolMessageType\n} from './cmap/commands';\nexport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';\nexport type {\n  CommandOptions,\n  Connection,\n  ConnectionEvents,\n  ConnectionOptions,\n  DestroyOptions,\n  ProxyOptions\n} from './cmap/connection';\nexport type {\n  CloseOptions,\n  ConnectionPool,\n  ConnectionPoolEvents,\n  ConnectionPoolOptions,\n  PoolState,\n  WaitQueueMember,\n  WithConnectionCallback\n} from './cmap/connection_pool';\nexport type { ClientMetadata, ClientMetadataOptions } from './cmap/handshake/client_metadata';\nexport type {\n  MessageStream,\n  MessageStreamOptions,\n  OperationDescription\n} from './cmap/message_stream';\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\nexport type { CompressorName } from './cmap/wire_protocol/compression';\nexport type { CollectionOptions, CollectionPrivate, ModifyResult } from './collection';\nexport type {\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY,\n  MONGO_CLIENT_EVENTS\n} from './constants';\nexport type {\n  AbstractCursorEvents,\n  AbstractCursorOptions,\n  CursorFlag,\n  CursorStreamOptions\n} from './cursor/abstract_cursor';\nexport type { InternalAbstractCursorOptions } from './cursor/abstract_cursor';\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\nexport type {\n  ChangeStreamAggregateRawResult,\n  ChangeStreamCursorOptions\n} from './cursor/change_stream_cursor';\nexport type {\n  ListSearchIndexesCursor,\n  ListSearchIndexesOptions\n} from './cursor/list_search_indexes_cursor';\nexport type { RunCursorCommandOptions } from './cursor/run_command_cursor';\nexport type { DbOptions, DbPrivate } from './db';\nexport type { AutoEncrypter, AutoEncryptionOptions, AutoEncryptionTlsOptions } from './deps';\nexport type { Encrypter, EncrypterOptions } from './encrypter';\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\nexport type { Explain, ExplainOptions, ExplainVerbosityLike } from './explain';\nexport type {\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSBucketReadStreamPrivate,\n  GridFSFile\n} from './gridfs/download';\nexport type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/index';\nexport type { GridFSBucketWriteStreamOptions, GridFSChunk } from './gridfs/upload';\nexport type {\n  Auth,\n  DriverInfo,\n  MongoClientEvents,\n  MongoClientOptions,\n  MongoClientPrivate,\n  MongoOptions,\n  PkFactory,\n  ServerApi,\n  SupportedNodeConnectionOptions,\n  SupportedSocketOptions,\n  SupportedTLSConnectionOptions,\n  SupportedTLSSocketOptions,\n  WithSessionCallback\n} from './mongo_client';\nexport type {\n  Log,\n  LogConvertible,\n  Loggable,\n  LoggableEvent,\n  MongoDBLogWritable,\n  MongoLoggableComponent,\n  MongoLogger,\n  MongoLoggerEnvOptions,\n  MongoLoggerMongoClientOptions,\n  MongoLoggerOptions,\n  SeverityLevel\n} from './mongo_logger';\nexport type {\n  CommonEvents,\n  EventsDescription,\n  GenericListener,\n  TypedEventEmitter\n} from './mongo_types';\nexport type {\n  AcceptedFields,\n  AddToSetOperators,\n  AlternativeType,\n  ArrayElement,\n  ArrayOperator,\n  BitwiseFilter,\n  BSONTypeAlias,\n  Condition,\n  EnhancedOmit,\n  Filter,\n  FilterOperations,\n  FilterOperators,\n  Flatten,\n  InferIdType,\n  IntegerType,\n  IsAny,\n  Join,\n  KeysOfAType,\n  KeysOfOtherType,\n  MatchKeysAndValues,\n  NestedPaths,\n  NestedPathsOfType,\n  NonObjectIdLikeDocument,\n  NotAcceptedFields,\n  NumericType,\n  OneOrMore,\n  OnlyFieldsOfType,\n  OptionalId,\n  OptionalUnlessRequiredId,\n  PropertyType,\n  PullAllOperator,\n  PullOperator,\n  PushOperator,\n  RegExpOrString,\n  RootFilterOperators,\n  SchemaMember,\n  SetFields,\n  StrictFilter,\n  StrictMatchKeysAndValues,\n  StrictUpdateFilter,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nexport type { AddUserOptions, RoleSpecification } from './operations/add_user';\nexport type {\n  AggregateOperation,\n  AggregateOptions,\n  DB_AGGREGATE_COLLECTION\n} from './operations/aggregate';\nexport type {\n  CollationOptions,\n  CommandOperation,\n  CommandOperationOptions,\n  OperationParent\n} from './operations/command';\nexport type { IndexInformationOptions } from './operations/common_functions';\nexport type { CountOptions } from './operations/count';\nexport type { CountDocumentsOptions } from './operations/count_documents';\nexport type {\n  ClusteredCollectionOptions,\n  CreateCollectionOptions,\n  TimeSeriesCollectionOptions\n} from './operations/create_collection';\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\nexport type { DistinctOptions } from './operations/distinct';\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\nexport type { EvalOptions } from './operations/eval';\nexport type { ExecutionResult } from './operations/execute_operation';\nexport type { FindOptions } from './operations/find';\nexport type {\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nexport type {\n  CreateIndexesOptions,\n  DropIndexesOptions,\n  IndexDescription,\n  IndexDirection,\n  IndexSpecification,\n  ListIndexesOptions\n} from './operations/indexes';\nexport type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';\nexport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nexport type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';\nexport type {\n  AbstractCallbackOperation,\n  AbstractOperation,\n  Hint,\n  OperationOptions\n} from './operations/operation';\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\nexport type { RemoveUserOptions } from './operations/remove_user';\nexport type { RenameOptions } from './operations/rename';\nexport type { RunCommandOptions } from './operations/run_command';\nexport type { SearchIndexDescription } from './operations/search_indexes/create';\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\nexport type {\n  CollStats,\n  CollStatsOptions,\n  DbStatsOptions,\n  WiredTigerData\n} from './operations/stats';\nexport type {\n  ReplaceOptions,\n  UpdateOptions,\n  UpdateResult,\n  UpdateStatement\n} from './operations/update';\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\nexport type { ReadConcernLike } from './read_concern';\nexport type {\n  HedgeOptions,\n  ReadPreferenceFromOptions,\n  ReadPreferenceLike,\n  ReadPreferenceLikeOptions,\n  ReadPreferenceOptions\n} from './read_preference';\nexport type { ClusterTime, TimerQueue } from './sdam/common';\nexport type {\n  Monitor,\n  MonitorEvents,\n  MonitorInterval,\n  MonitorIntervalOptions,\n  MonitorOptions,\n  MonitorPrivate,\n  RTTPinger,\n  RTTPingerOptions\n} from './sdam/monitor';\nexport type { Server, ServerEvents, ServerOptions, ServerPrivate } from './sdam/server';\nexport type {\n  ServerDescription,\n  ServerDescriptionOptions,\n  TagSet,\n  TopologyVersion\n} from './sdam/server_description';\nexport type { ServerSelector } from './sdam/server_selection';\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\nexport type {\n  ConnectOptions,\n  SelectServerOptions,\n  ServerCapabilities,\n  ServerSelectionCallback,\n  ServerSelectionRequest,\n  Topology,\n  TopologyEvents,\n  TopologyOptions,\n  TopologyPrivate\n} from './sdam/topology';\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\nexport type {\n  ClientSessionEvents,\n  ClientSessionOptions,\n  EndSessionOptions,\n  ServerSession,\n  ServerSessionId,\n  ServerSessionPool,\n  WithTransactionCallback\n} from './sessions';\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\nexport type { Transaction, TransactionOptions, TxnState } from './transactions';\nexport type {\n  BufferPool,\n  Callback,\n  EventEmitterWithState,\n  HostAddress,\n  List,\n  MongoDBCollectionNamespace,\n  MongoDBNamespace\n} from './utils';\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\n", "import { APIGatewayProxyEventV2 } from 'aws-lambda';\nimport { Response } from '@cash-tracker/common'\nimport { getCollection } from '../../providers/mongoDbProvider';\nimport { ObjectId } from 'mongodb';\n\ntype HelloWorld = { _id: ObjectId, message: string }\n\nconst handler = async (event: APIGatewayProxyEventV2) => {\n  const collectionName = 'hello-world'\n  const helloWorldCollection = getCollection<HelloWorld>(collectionName)\n  const query = { message: { $exists: true } }\n\n  const records = await helloWorldCollection.find(\n    query\n    , {\n      projection: {\n        message: 1\n      }\n    }).toArray()\n\n  const [{ message }] = records\n\n  return Response.success({\n    message\n  })\n}\n\nexport const main = handler\n", "const ok = () => {\n  return {\n    statusCode: 202\n  }\n}\n\nconst success = (body: object) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(body),\n  }\n}\n\nexport const Response = {\n  ok,\n  success\n}", "import { MongoClient } from 'mongodb'\nimport type { Db, Collection } from 'mongodb'\n\nlet db: Db\n\nconst initializeDatabase = (): void => {\n  const client = new MongoClient(process.env.MONGO_DB_URI)\n  db = client.db(process.env.MONGO_DATABASE)\n}\n\nconst getDatabase = (): Db => {\n  if (!db) initializeDatabase()\n  return db\n}\n\nexport const getCollection = <T>(collectionName: string): Collection<T> => {\n  return getDatabase().collection(collectionName)\n}"],
  "mappings": "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,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,IAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,OAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,SAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,ceAAK,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,EAAE,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,0BAAM,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,MAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,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K,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,sCAAQ,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE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AM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,+FAAoB,GAAE,CAAC,OAAM,GAAE,6CAAU,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,SAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,coBAAM,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,oeAAK,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,KAAK,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE,oBAAK,GAAE,CAAC,QAAO,GAAE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",
  "names": ["isNotWritablePrimaryError", "buffer", "db", "constants.JS_INT_MIN", "constants.JS_INT_MAX", "constants.BSON_INT32_MIN", "constants.BSON_INT32_MAX", "constants.BSON_MAJOR_VERSION", "constants.BSON_DATA_STRING", "constants.BSON_DATA_OID", "constants.BSON_DATA_INT", "constants.BSON_DATA_NUMBER", "constants.BSON_DATA_DATE", "constants.BSON_DATA_BOOLEAN", "constants.BSON_DATA_OBJECT", "constants.BSON_DATA_ARRAY", "constants.BSON_DATA_UNDEFINED", "constants.BSON_DATA_NULL", "constants.BSON_DATA_LONG", "dataview", "constants.BSON_DATA_DECIMAL128", "constants.BSON_DATA_BINARY", "constants.BSON_BINARY_SUBTYPE_UUID_NEW", "constants.BSON_DATA_REGEXP", "constants.BSON_DATA_SYMBOL", "constants.BSON_DATA_TIMESTAMP", "i", "constants.BSON_DATA_MIN_KEY", "constants.BSON_DATA_MAX_KEY", "constants.BSON_DATA_CODE", "constants.BSON_DATA_CODE_W_SCOPE", "constants.BSON_DATA_DBPOINTER", "constants.BSON_BINARY_SUBTYPE_DEFAULT", "filterOptions", "db", "ns", "url", "db", "db", "db", "db", "db", "name", "err", "session", "batchSize", "cursorId", "db", "db", "err", "db", "db", "db", "db", "db", "db", "db", "db", "db", "module", "module", "module", "module", "require_utils", "module", "module", "module", "module", "module", "module", "module", "module", "module", "res", "module", "Function", "V", "tmp", "nextItem", "uri", "module", "process", "name", "value", "options", "Response", "sizeOfMessage", "options", "err", "Buffer", "ip", "SocksCommand", "Socks4Response", "Socks5Auth", "Socks5Response", "Socks5HostType", "SocksClientState", "db", "db", "message", "provider", "conn", "options", "conn", "options", "err", "sd", "MongoClient", "error", "db", "error", "error", "index", "db"]
}
